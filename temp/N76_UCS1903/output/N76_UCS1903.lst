                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module N76_UCS1903
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TIM2_begin_PARM_2
                                     12 	.globl _writeXram_PARM_2
                                     13 	.globl _timer2
                                     14 	.globl _PIN_INT_FUCTION
                                     15 	.globl _ADC_INT_FUCTION
                                     16 	.globl _main
                                     17 	.globl _TIM2_begin
                                     18 	.globl _Twinkle
                                     19 	.globl _writeXram
                                     20 	.globl _readXram
                                     21 	.globl _clearAll
                                     22 	.globl _LED__SendByte_
                                     23 	.globl _LED__SendOne_
                                     24 	.globl _LED__SendZero_
                                     25 	.globl _random2
                                     26 	.globl _random
                                     27 	.globl _Erase_APROM
                                     28 	.globl _APROM_write_byte
                                     29 	.globl _APROM_read_byte
                                     30 	.globl __delay_us
                                     31 	.globl __delay_ms
                                     32 	.globl _rand
                                     33 	.globl _eiph1
                                     34 	.globl _eip1
                                     35 	.globl _pmd
                                     36 	.globl _pmen
                                     37 	.globl _pdtcnt
                                     38 	.globl _pdten
                                     39 	.globl _scon_1
                                     40 	.globl _eiph
                                     41 	.globl _aindids
                                     42 	.globl _spdr
                                     43 	.globl _spsr
                                     44 	.globl _spcr2
                                     45 	.globl _spcr
                                     46 	.globl _capcon4
                                     47 	.globl _capcon3
                                     48 	.globl _b
                                     49 	.globl _eip
                                     50 	.globl _c2h
                                     51 	.globl _c2l
                                     52 	.globl _pif
                                     53 	.globl _pipen
                                     54 	.globl _pinen
                                     55 	.globl _picon
                                     56 	.globl _adccon0
                                     57 	.globl _c1h
                                     58 	.globl _c1l
                                     59 	.globl _c0h
                                     60 	.globl _c0l
                                     61 	.globl _adcdly
                                     62 	.globl _adccon2
                                     63 	.globl _adccon1
                                     64 	.globl _acc
                                     65 	.globl _pwmcon1
                                     66 	.globl _piocon0
                                     67 	.globl _pwm3l
                                     68 	.globl _pwm2l
                                     69 	.globl _pwm1l
                                     70 	.globl _pwm0l
                                     71 	.globl _pwmpl
                                     72 	.globl _pwmcon0
                                     73 	.globl _fbd
                                     74 	.globl _pnp
                                     75 	.globl _pwm3h
                                     76 	.globl _pwm2h
                                     77 	.globl _pwm1h
                                     78 	.globl _pwm0h
                                     79 	.globl _pwmph
                                     80 	.globl _psw
                                     81 	.globl _adcmph
                                     82 	.globl _adcmpl
                                     83 	.globl _pwm5l
                                     84 	.globl _th2
                                     85 	.globl _pwm4l
                                     86 	.globl _tl2
                                     87 	.globl _rcmp2h
                                     88 	.globl _rcmp2l
                                     89 	.globl _t2mod
                                     90 	.globl _t2con
                                     91 	.globl _ta
                                     92 	.globl _piocon1
                                     93 	.globl _rh3
                                     94 	.globl _pwm5h
                                     95 	.globl _rl3
                                     96 	.globl _pwm4h
                                     97 	.globl _t3con
                                     98 	.globl _adcrh
                                     99 	.globl _adcrl
                                    100 	.globl _i2addr
                                    101 	.globl _i2con
                                    102 	.globl _i2toc
                                    103 	.globl _i2clk
                                    104 	.globl _i2stat
                                    105 	.globl _i2dat
                                    106 	.globl _saddr_1
                                    107 	.globl _saden_1
                                    108 	.globl _saden
                                    109 	.globl _ip
                                    110 	.globl _pwmintc
                                    111 	.globl _iph
                                    112 	.globl _p2s
                                    113 	.globl _p1sr
                                    114 	.globl _p1m2
                                    115 	.globl _p1s
                                    116 	.globl _p1m1
                                    117 	.globl _p0sr
                                    118 	.globl _p0m2
                                    119 	.globl _p0s
                                    120 	.globl _p0m1
                                    121 	.globl _p3
                                    122 	.globl _iapcn
                                    123 	.globl _iapfd
                                    124 	.globl _p3sr
                                    125 	.globl _p3m2
                                    126 	.globl _p3s
                                    127 	.globl _p3m1
                                    128 	.globl _bodcon1
                                    129 	.globl _wdcon
                                    130 	.globl _saddr
                                    131 	.globl _ie
                                    132 	.globl _iapah
                                    133 	.globl _iapal
                                    134 	.globl _iapuen
                                    135 	.globl _iaptrg
                                    136 	.globl _bodcon0
                                    137 	.globl _auxr1
                                    138 	.globl _p2
                                    139 	.globl _chpcon
                                    140 	.globl _eie1
                                    141 	.globl _eie
                                    142 	.globl _sbuf_1
                                    143 	.globl _sbuf
                                    144 	.globl _scon
                                    145 	.globl _cken
                                    146 	.globl _ckswt
                                    147 	.globl _ckdiv
                                    148 	.globl _capcon2
                                    149 	.globl _capcon1
                                    150 	.globl _capcon0
                                    151 	.globl _sfrs
                                    152 	.globl _p1
                                    153 	.globl _wkcon
                                    154 	.globl _ckcon
                                    155 	.globl _th1
                                    156 	.globl _th0
                                    157 	.globl _tl1
                                    158 	.globl _tl0
                                    159 	.globl _tmod
                                    160 	.globl _tcon
                                    161 	.globl _pcon
                                    162 	.globl _rwk
                                    163 	.globl _rctrim1
                                    164 	.globl _rctrim0
                                    165 	.globl _dph
                                    166 	.globl _dpl
                                    167 	.globl _sp
                                    168 	.globl _p0
                                    169 	.globl _theaterChase_PARM_4
                                    170 	.globl _theaterChase_PARM_3
                                    171 	.globl _theaterChase_PARM_2
                                    172 	.globl _colorWipe_PARM_4
                                    173 	.globl _colorWipe_PARM_3
                                    174 	.globl _colorWipe_PARM_2
                                    175 	.globl _SnowSparkle_PARM_5
                                    176 	.globl _SnowSparkle_PARM_4
                                    177 	.globl _SnowSparkle_PARM_3
                                    178 	.globl _SnowSparkle_PARM_2
                                    179 	.globl _Sparkle_PARM_4
                                    180 	.globl _Sparkle_PARM_3
                                    181 	.globl _Sparkle_PARM_2
                                    182 	.globl _TwinkleRandom_PARM_3
                                    183 	.globl _TwinkleRandom_PARM_2
                                    184 	.globl _Twinkle_PARM_6
                                    185 	.globl _Twinkle_PARM_5
                                    186 	.globl _Twinkle_PARM_4
                                    187 	.globl _Twinkle_PARM_3
                                    188 	.globl _Twinkle_PARM_2
                                    189 	.globl _CylonBounce_PARM_6
                                    190 	.globl _CylonBounce_PARM_5
                                    191 	.globl _CylonBounce_PARM_4
                                    192 	.globl _CylonBounce_PARM_3
                                    193 	.globl _CylonBounce_PARM_2
                                    194 	.globl _Strobe_PARM_6
                                    195 	.globl _Strobe_PARM_5
                                    196 	.globl _Strobe_PARM_4
                                    197 	.globl _Strobe_PARM_3
                                    198 	.globl _Strobe_PARM_2
                                    199 	.globl _FadeInOut_PARM_3
                                    200 	.globl _FadeInOut_PARM_2
                                    201 	.globl _setAll_PARM_3
                                    202 	.globl _setAll_PARM_2
                                    203 	.globl _setPixel_PARM_4
                                    204 	.globl _setPixel_PARM_3
                                    205 	.globl _setPixel_PARM_2
                                    206 	.globl _random2_PARM_2
                                    207 	.globl _cnt
                                    208 	.globl __status
                                    209 	.globl _effect
                                    210 	.globl __delay
                                    211 	.globl _NUM_LEDS
                                    212 	.globl _showStrip
                                    213 	.globl _setPixel
                                    214 	.globl _setAll
                                    215 	.globl _FadeInOut
                                    216 	.globl _Strobe
                                    217 	.globl _CylonBounce
                                    218 	.globl _TwinkleRandom
                                    219 	.globl _Sparkle
                                    220 	.globl _SnowSparkle
                                    221 	.globl _colorWipe
                                    222 	.globl _rainbowCycle
                                    223 	.globl _Wheel
                                    224 	.globl _theaterChase
                                    225 	.globl _theaterChaseRainbow
                                    226 ;--------------------------------------------------------
                                    227 ; special function registers
                                    228 ;--------------------------------------------------------
                                    229 	.area RSEG    (ABS,DATA)
      000000                        230 	.org 0x0000
                           000080   231 _p0	=	0x0080
                           000081   232 _sp	=	0x0081
                           000082   233 _dpl	=	0x0082
                           000083   234 _dph	=	0x0083
                           000084   235 _rctrim0	=	0x0084
                           000085   236 _rctrim1	=	0x0085
                           000086   237 _rwk	=	0x0086
                           000087   238 _pcon	=	0x0087
                           000088   239 _tcon	=	0x0088
                           000089   240 _tmod	=	0x0089
                           00008A   241 _tl0	=	0x008a
                           00008B   242 _tl1	=	0x008b
                           00008C   243 _th0	=	0x008c
                           00008D   244 _th1	=	0x008d
                           00008E   245 _ckcon	=	0x008e
                           00008F   246 _wkcon	=	0x008f
                           000090   247 _p1	=	0x0090
                           000091   248 _sfrs	=	0x0091
                           000092   249 _capcon0	=	0x0092
                           000093   250 _capcon1	=	0x0093
                           000094   251 _capcon2	=	0x0094
                           000095   252 _ckdiv	=	0x0095
                           000096   253 _ckswt	=	0x0096
                           000097   254 _cken	=	0x0097
                           000098   255 _scon	=	0x0098
                           000099   256 _sbuf	=	0x0099
                           00009A   257 _sbuf_1	=	0x009a
                           00009B   258 _eie	=	0x009b
                           00009C   259 _eie1	=	0x009c
                           00009F   260 _chpcon	=	0x009f
                           0000A0   261 _p2	=	0x00a0
                           0000A2   262 _auxr1	=	0x00a2
                           0000A3   263 _bodcon0	=	0x00a3
                           0000A4   264 _iaptrg	=	0x00a4
                           0000A5   265 _iapuen	=	0x00a5
                           0000A6   266 _iapal	=	0x00a6
                           0000A7   267 _iapah	=	0x00a7
                           0000A8   268 _ie	=	0x00a8
                           0000A9   269 _saddr	=	0x00a9
                           0000AA   270 _wdcon	=	0x00aa
                           0000AB   271 _bodcon1	=	0x00ab
                           0000AC   272 _p3m1	=	0x00ac
                           0000AC   273 _p3s	=	0x00ac
                           0000AD   274 _p3m2	=	0x00ad
                           0000AD   275 _p3sr	=	0x00ad
                           0000AE   276 _iapfd	=	0x00ae
                           0000AF   277 _iapcn	=	0x00af
                           0000B0   278 _p3	=	0x00b0
                           0000B1   279 _p0m1	=	0x00b1
                           0000B1   280 _p0s	=	0x00b1
                           0000B2   281 _p0m2	=	0x00b2
                           0000B2   282 _p0sr	=	0x00b2
                           0000B3   283 _p1m1	=	0x00b3
                           0000B3   284 _p1s	=	0x00b3
                           0000B4   285 _p1m2	=	0x00b4
                           0000B4   286 _p1sr	=	0x00b4
                           0000B5   287 _p2s	=	0x00b5
                           0000B7   288 _iph	=	0x00b7
                           0000B7   289 _pwmintc	=	0x00b7
                           0000B8   290 _ip	=	0x00b8
                           0000B9   291 _saden	=	0x00b9
                           0000BA   292 _saden_1	=	0x00ba
                           0000BB   293 _saddr_1	=	0x00bb
                           0000BC   294 _i2dat	=	0x00bc
                           0000BD   295 _i2stat	=	0x00bd
                           0000BE   296 _i2clk	=	0x00be
                           0000BF   297 _i2toc	=	0x00bf
                           0000C0   298 _i2con	=	0x00c0
                           0000C1   299 _i2addr	=	0x00c1
                           0000C2   300 _adcrl	=	0x00c2
                           0000C3   301 _adcrh	=	0x00c3
                           0000C4   302 _t3con	=	0x00c4
                           0000C4   303 _pwm4h	=	0x00c4
                           0000C5   304 _rl3	=	0x00c5
                           0000C5   305 _pwm5h	=	0x00c5
                           0000C6   306 _rh3	=	0x00c6
                           0000C6   307 _piocon1	=	0x00c6
                           0000C7   308 _ta	=	0x00c7
                           0000C8   309 _t2con	=	0x00c8
                           0000C9   310 _t2mod	=	0x00c9
                           0000CA   311 _rcmp2l	=	0x00ca
                           0000CB   312 _rcmp2h	=	0x00cb
                           0000CC   313 _tl2	=	0x00cc
                           0000CC   314 _pwm4l	=	0x00cc
                           0000CD   315 _th2	=	0x00cd
                           0000CD   316 _pwm5l	=	0x00cd
                           0000CE   317 _adcmpl	=	0x00ce
                           0000CF   318 _adcmph	=	0x00cf
                           0000D0   319 _psw	=	0x00d0
                           0000D1   320 _pwmph	=	0x00d1
                           0000D2   321 _pwm0h	=	0x00d2
                           0000D3   322 _pwm1h	=	0x00d3
                           0000D4   323 _pwm2h	=	0x00d4
                           0000D5   324 _pwm3h	=	0x00d5
                           0000D6   325 _pnp	=	0x00d6
                           0000D7   326 _fbd	=	0x00d7
                           0000D8   327 _pwmcon0	=	0x00d8
                           0000D9   328 _pwmpl	=	0x00d9
                           0000DA   329 _pwm0l	=	0x00da
                           0000DB   330 _pwm1l	=	0x00db
                           0000DC   331 _pwm2l	=	0x00dc
                           0000DD   332 _pwm3l	=	0x00dd
                           0000DE   333 _piocon0	=	0x00de
                           0000DF   334 _pwmcon1	=	0x00df
                           0000E0   335 _acc	=	0x00e0
                           0000E1   336 _adccon1	=	0x00e1
                           0000E2   337 _adccon2	=	0x00e2
                           0000E3   338 _adcdly	=	0x00e3
                           0000E4   339 _c0l	=	0x00e4
                           0000E5   340 _c0h	=	0x00e5
                           0000E6   341 _c1l	=	0x00e6
                           0000E7   342 _c1h	=	0x00e7
                           0000E8   343 _adccon0	=	0x00e8
                           0000E9   344 _picon	=	0x00e9
                           0000EA   345 _pinen	=	0x00ea
                           0000EB   346 _pipen	=	0x00eb
                           0000EC   347 _pif	=	0x00ec
                           0000ED   348 _c2l	=	0x00ed
                           0000EE   349 _c2h	=	0x00ee
                           0000EF   350 _eip	=	0x00ef
                           0000F0   351 _b	=	0x00f0
                           0000F1   352 _capcon3	=	0x00f1
                           0000F2   353 _capcon4	=	0x00f2
                           0000F3   354 _spcr	=	0x00f3
                           0000F3   355 _spcr2	=	0x00f3
                           0000F4   356 _spsr	=	0x00f4
                           0000F5   357 _spdr	=	0x00f5
                           0000F6   358 _aindids	=	0x00f6
                           0000F7   359 _eiph	=	0x00f7
                           0000F8   360 _scon_1	=	0x00f8
                           0000F9   361 _pdten	=	0x00f9
                           0000FA   362 _pdtcnt	=	0x00fa
                           0000FB   363 _pmen	=	0x00fb
                           0000FC   364 _pmd	=	0x00fc
                           0000FE   365 _eip1	=	0x00fe
                           0000FF   366 _eiph1	=	0x00ff
                                    367 ;--------------------------------------------------------
                                    368 ; special function bits
                                    369 ;--------------------------------------------------------
                                    370 	.area RSEG    (ABS,DATA)
      000000                        371 	.org 0x0000
                                    372 ;--------------------------------------------------------
                                    373 ; overlayable register banks
                                    374 ;--------------------------------------------------------
                                    375 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        376 	.ds 8
                                    377 ;--------------------------------------------------------
                                    378 ; overlayable bit register bank
                                    379 ;--------------------------------------------------------
                                    380 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        381 bits:
      000000                        382 	.ds 1
                           008000   383 	b0 = bits[0]
                           008100   384 	b1 = bits[1]
                           008200   385 	b2 = bits[2]
                           008300   386 	b3 = bits[3]
                           008400   387 	b4 = bits[4]
                           008500   388 	b5 = bits[5]
                           008600   389 	b6 = bits[6]
                           008700   390 	b7 = bits[7]
                                    391 ;--------------------------------------------------------
                                    392 ; internal ram data
                                    393 ;--------------------------------------------------------
                                    394 	.area DSEG    (DATA)
      000000                        395 _NUM_LEDS::
      000000                        396 	.ds 2
      000002                        397 __delay::
      000002                        398 	.ds 2
      000004                        399 _effect::
      000004                        400 	.ds 1
      000005                        401 __status::
      000005                        402 	.ds 1
      000006                        403 _cnt::
      000006                        404 	.ds 1
      000007                        405 _random2_PARM_2:
      000007                        406 	.ds 2
      000009                        407 _setPixel_PARM_2:
      000009                        408 	.ds 1
      00000A                        409 _setPixel_PARM_3:
      00000A                        410 	.ds 1
      00000B                        411 _setPixel_PARM_4:
      00000B                        412 	.ds 1
      00000C                        413 _setAll_PARM_2:
      00000C                        414 	.ds 1
      00000D                        415 _setAll_PARM_3:
      00000D                        416 	.ds 1
      00000E                        417 _FadeInOut_PARM_2:
      00000E                        418 	.ds 1
      00000F                        419 _FadeInOut_PARM_3:
      00000F                        420 	.ds 1
      000010                        421 _FadeInOut_green_65536_99:
      000010                        422 	.ds 1
      000011                        423 _FadeInOut_g_65536_100:
      000011                        424 	.ds 1
      000012                        425 _FadeInOut_r_65536_100:
      000012                        426 	.ds 1
      000013                        427 _FadeInOut_curEffect_65536_100:
      000013                        428 	.ds 1
      000014                        429 _FadeInOut_k_131072_104:
      000014                        430 	.ds 2
      000016                        431 _Strobe_PARM_2:
      000016                        432 	.ds 1
      000017                        433 _Strobe_PARM_3:
      000017                        434 	.ds 1
      000018                        435 _Strobe_PARM_4:
      000018                        436 	.ds 2
      00001A                        437 _Strobe_PARM_5:
      00001A                        438 	.ds 2
      00001C                        439 _Strobe_PARM_6:
      00001C                        440 	.ds 2
      00001E                        441 _CylonBounce_PARM_2:
      00001E                        442 	.ds 1
      00001F                        443 _CylonBounce_PARM_3:
      00001F                        444 	.ds 1
      000020                        445 _CylonBounce_PARM_4:
      000020                        446 	.ds 2
      000022                        447 _CylonBounce_PARM_5:
      000022                        448 	.ds 2
      000024                        449 _CylonBounce_PARM_6:
      000024                        450 	.ds 2
      000026                        451 _CylonBounce_green_65536_112:
      000026                        452 	.ds 1
      000027                        453 _CylonBounce_curEffect_65536_113:
      000027                        454 	.ds 1
      000028                        455 _CylonBounce_i_131072_114:
      000028                        456 	.ds 2
      00002A                        457 _CylonBounce_j_262144_121:
      00002A                        458 	.ds 2
      00002C                        459 _CylonBounce_sloc0_1_0:
      00002C                        460 	.ds 1
      00002D                        461 _CylonBounce_sloc1_1_0:
      00002D                        462 	.ds 1
      00002E                        463 _Twinkle_PARM_2:
      00002E                        464 	.ds 1
      00002F                        465 _Twinkle_PARM_3:
      00002F                        466 	.ds 1
      000030                        467 _Twinkle_PARM_4:
      000030                        468 	.ds 2
      000032                        469 _Twinkle_PARM_5:
      000032                        470 	.ds 2
      000034                        471 _Twinkle_PARM_6:
      000034                        472 	.ds 1
      000035                        473 _TwinkleRandom_PARM_2:
      000035                        474 	.ds 2
      000037                        475 _TwinkleRandom_PARM_3:
      000037                        476 	.ds 1
      000038                        477 _TwinkleRandom_Count_65536_130:
      000038                        478 	.ds 2
      00003A                        479 _TwinkleRandom_curEffect_65536_131:
      00003A                        480 	.ds 1
      00003B                        481 _Sparkle_PARM_2:
      00003B                        482 	.ds 1
      00003C                        483 _Sparkle_PARM_3:
      00003C                        484 	.ds 1
      00003D                        485 _Sparkle_PARM_4:
      00003D                        486 	.ds 2
      00003F                        487 _SnowSparkle_PARM_2:
      00003F                        488 	.ds 1
      000040                        489 _SnowSparkle_PARM_3:
      000040                        490 	.ds 1
      000041                        491 _SnowSparkle_PARM_4:
      000041                        492 	.ds 2
      000043                        493 _SnowSparkle_PARM_5:
      000043                        494 	.ds 2
      000045                        495 _colorWipe_PARM_2:
      000045                        496 	.ds 1
      000046                        497 _colorWipe_PARM_3:
      000046                        498 	.ds 1
      000047                        499 _colorWipe_PARM_4:
      000047                        500 	.ds 2
      000049                        501 _rainbowCycle_j_65536_147:
      000049                        502 	.ds 2
      00004B                        503 _rainbowCycle_curEffect_65536_147:
      00004B                        504 	.ds 1
      00004C                        505 _Wheel_c_65536_154:
      00004C                        506 	.ds 3
      00004F                        507 _theaterChase_PARM_2:
      00004F                        508 	.ds 1
      000050                        509 _theaterChase_PARM_3:
      000050                        510 	.ds 1
      000051                        511 _theaterChase_PARM_4:
      000051                        512 	.ds 2
      000053                        513 _theaterChase_j_131072_160:
      000053                        514 	.ds 2
      000055                        515 _theaterChaseRainbow_c_65536_171:
      000055                        516 	.ds 3
      000058                        517 _theaterChaseRainbow_curEffect_65536_171:
      000058                        518 	.ds 1
      000059                        519 _theaterChaseRainbow_j_131072_172:
      000059                        520 	.ds 2
      00005B                        521 _theaterChaseRainbow_q_262144_174:
      00005B                        522 	.ds 2
                                    523 ;--------------------------------------------------------
                                    524 ; overlayable items in internal ram
                                    525 ;--------------------------------------------------------
                                    526 	.area	OSEG    (OVR,DATA)
                                    527 	.area	OSEG    (OVR,DATA)
      000000                        528 _writeXram_PARM_2:
      000000                        529 	.ds 1
                                    530 	.area	OSEG    (OVR,DATA)
                                    531 	.area	OSEG    (OVR,DATA)
      000000                        532 _TIM2_begin_PARM_2:
      000000                        533 	.ds 2
                                    534 ;--------------------------------------------------------
                                    535 ; Stack segment in internal ram
                                    536 ;--------------------------------------------------------
                                    537 	.area	SSEG
      000000                        538 __start__stack:
      000000                        539 	.ds	1
                                    540 
                                    541 ;--------------------------------------------------------
                                    542 ; indirectly addressable internal ram data
                                    543 ;--------------------------------------------------------
                                    544 	.area ISEG    (DATA)
                                    545 ;--------------------------------------------------------
                                    546 ; absolute internal ram data
                                    547 ;--------------------------------------------------------
                                    548 	.area IABS    (ABS,DATA)
                                    549 	.area IABS    (ABS,DATA)
                                    550 ;--------------------------------------------------------
                                    551 ; bit data
                                    552 ;--------------------------------------------------------
                                    553 	.area BSEG    (BIT)
                                    554 ;--------------------------------------------------------
                                    555 ; paged external ram data
                                    556 ;--------------------------------------------------------
                                    557 	.area PSEG    (PAG,XDATA)
                                    558 ;--------------------------------------------------------
                                    559 ; external ram data
                                    560 ;--------------------------------------------------------
                                    561 	.area XSEG    (XDATA)
                                    562 ;--------------------------------------------------------
                                    563 ; absolute external ram data
                                    564 ;--------------------------------------------------------
                                    565 	.area XABS    (ABS,XDATA)
                                    566 ;--------------------------------------------------------
                                    567 ; external initialized ram data
                                    568 ;--------------------------------------------------------
                                    569 	.area XISEG   (XDATA)
                                    570 	.area HOME    (CODE)
                                    571 	.area GSINIT0 (CODE)
                                    572 	.area GSINIT1 (CODE)
                                    573 	.area GSINIT2 (CODE)
                                    574 	.area GSINIT3 (CODE)
                                    575 	.area GSINIT4 (CODE)
                                    576 	.area GSINIT5 (CODE)
                                    577 	.area GSINIT  (CODE)
                                    578 	.area GSFINAL (CODE)
                                    579 	.area CSEG    (CODE)
                                    580 ;--------------------------------------------------------
                                    581 ; interrupt vector
                                    582 ;--------------------------------------------------------
                                    583 	.area HOME    (CODE)
      000000                        584 __interrupt_vect:
      000000 02r00r00         [24]  585 	ljmp	__sdcc_gsinit_startup
      000003 32               [24]  586 	reti
      000004                        587 	.ds	7
      00000B 32               [24]  588 	reti
      00000C                        589 	.ds	7
      000013 32               [24]  590 	reti
      000014                        591 	.ds	7
      00001B 32               [24]  592 	reti
      00001C                        593 	.ds	7
      000023 32               [24]  594 	reti
      000024                        595 	.ds	7
      00002B 02r14r25         [24]  596 	ljmp	_timer2
      00002E                        597 	.ds	5
      000033 32               [24]  598 	reti
      000034                        599 	.ds	7
      00003B 02r13rC9         [24]  600 	ljmp	_PIN_INT_FUCTION
      00003E                        601 	.ds	5
      000043 32               [24]  602 	reti
      000044                        603 	.ds	7
      00004B 32               [24]  604 	reti
      00004C                        605 	.ds	7
      000053 32               [24]  606 	reti
      000054                        607 	.ds	7
      00005B 02r13r8C         [24]  608 	ljmp	_ADC_INT_FUCTION
                                    609 ;--------------------------------------------------------
                                    610 ; global & static initialisations
                                    611 ;--------------------------------------------------------
                                    612 	.area HOME    (CODE)
                                    613 	.area GSINIT  (CODE)
                                    614 	.area GSFINAL (CODE)
                                    615 	.area GSINIT  (CODE)
                                    616 	.globl __sdcc_gsinit_startup
                                    617 	.globl __sdcc_program_startup
                                    618 	.globl __start__stack
                                    619 	.globl __mcs51_genXINIT
                                    620 	.globl __mcs51_genXRAMCLEAR
                                    621 	.globl __mcs51_genRAMCLEAR
                                    622 ;	./N76_UCS1903.c:48: uint16_t NUM_LEDS =	10;
      000000 75*00 0A         [24]  623 	mov	_NUM_LEDS,#0x0a
      000003 75*01 00         [24]  624 	mov	(_NUM_LEDS + 1),#0x00
                                    625 ;	./N76_UCS1903.c:49: uint16_t _delay =	4096;
      000006 75*02 00         [24]  626 	mov	__delay,#0x00
      000009 75*03 10         [24]  627 	mov	(__delay + 1),#0x10
                                    628 ;	./N76_UCS1903.c:50: uint8_t effect=0;
      00000C 75*04 00         [24]  629 	mov	_effect,#0x00
                                    630 ;	./N76_UCS1903.c:51: uint8_t _status=0;
      00000F 75*05 00         [24]  631 	mov	__status,#0x00
                                    632 ;	./N76_UCS1903.c:52: uint8_t cnt=0;
      000012 75*06 00         [24]  633 	mov	_cnt,#0x00
                                    634 	.area GSFINAL (CODE)
      000000 02r00r5E         [24]  635 	ljmp	__sdcc_program_startup
                                    636 ;--------------------------------------------------------
                                    637 ; Home
                                    638 ;--------------------------------------------------------
                                    639 	.area HOME    (CODE)
                                    640 	.area HOME    (CODE)
      00005E                        641 __sdcc_program_startup:
      00005E 02r10rBD         [24]  642 	ljmp	_main
                                    643 ;	return from main will return to caller
                                    644 ;--------------------------------------------------------
                                    645 ; code
                                    646 ;--------------------------------------------------------
                                    647 	.area CSEG    (CODE)
                                    648 ;------------------------------------------------------------
                                    649 ;Allocation info for local variables in function 'random'
                                    650 ;------------------------------------------------------------
                                    651 ;howbig                    Allocated to registers r6 r7 
                                    652 ;------------------------------------------------------------
                                    653 ;	./N76_UCS1903.c:80: uint16_t random(uint16_t howbig)
                                    654 ;	-----------------------------------------
                                    655 ;	 function random
                                    656 ;	-----------------------------------------
      000000                        657 _random:
                           000007   658 	ar7 = 0x07
                           000006   659 	ar6 = 0x06
                           000005   660 	ar5 = 0x05
                           000004   661 	ar4 = 0x04
                           000003   662 	ar3 = 0x03
                           000002   663 	ar2 = 0x02
                           000001   664 	ar1 = 0x01
                           000000   665 	ar0 = 0x00
      000000 AE 82            [24]  666 	mov	r6,dpl
      000002 AF 83            [24]  667 	mov	r7,dph
                                    668 ;	./N76_UCS1903.c:82: if (howbig == 0)
      000004 EE               [12]  669 	mov	a,r6
      000005 4F               [12]  670 	orl	a,r7
      000006 70 04            [24]  671 	jnz	00102$
                                    672 ;	./N76_UCS1903.c:84: return 0;
      000008 90 00 00         [24]  673 	mov	dptr,#0x0000
      00000B 22               [24]  674 	ret
      00000C                        675 00102$:
                                    676 ;	./N76_UCS1903.c:86: return rand() % howbig;
      00000C C0 07            [24]  677 	push	ar7
      00000E C0 06            [24]  678 	push	ar6
      000010 12r00r00         [24]  679 	lcall	_rand
      000013 AC 82            [24]  680 	mov	r4,dpl
      000015 AD 83            [24]  681 	mov	r5,dph
      000017 D0 06            [24]  682 	pop	ar6
      000019 D0 07            [24]  683 	pop	ar7
      00001B 8C 82            [24]  684 	mov	dpl,r4
      00001D 8D 83            [24]  685 	mov	dph,r5
      00001F 8E*00            [24]  686 	mov	__moduint_PARM_2,r6
      000021 8F*01            [24]  687 	mov	(__moduint_PARM_2 + 1),r7
                                    688 ;	./N76_UCS1903.c:87: }
      000023 02r00r00         [24]  689 	ljmp	__moduint
                                    690 ;------------------------------------------------------------
                                    691 ;Allocation info for local variables in function 'random2'
                                    692 ;------------------------------------------------------------
                                    693 ;howbig                    Allocated with name '_random2_PARM_2'
                                    694 ;howsmall                  Allocated to registers r6 r7 
                                    695 ;diff                      Allocated to registers 
                                    696 ;------------------------------------------------------------
                                    697 ;	./N76_UCS1903.c:89: uint16_t random2(uint16_t howsmall, uint16_t howbig)
                                    698 ;	-----------------------------------------
                                    699 ;	 function random2
                                    700 ;	-----------------------------------------
      000026                        701 _random2:
      000026 AE 82            [24]  702 	mov	r6,dpl
      000028 AF 83            [24]  703 	mov	r7,dph
                                    704 ;	./N76_UCS1903.c:91: if (howsmall >= howbig)
      00002A C3               [12]  705 	clr	c
      00002B EE               [12]  706 	mov	a,r6
      00002C 95*07            [12]  707 	subb	a,_random2_PARM_2
      00002E EF               [12]  708 	mov	a,r7
      00002F 95*08            [12]  709 	subb	a,(_random2_PARM_2 + 1)
      000031 40 05            [24]  710 	jc	00102$
                                    711 ;	./N76_UCS1903.c:93: return howsmall;
      000033 8E 82            [24]  712 	mov	dpl,r6
      000035 8F 83            [24]  713 	mov	dph,r7
      000037 22               [24]  714 	ret
      000038                        715 00102$:
                                    716 ;	./N76_UCS1903.c:95: uint16_t diff = howbig - howsmall;
      000038 E5*07            [12]  717 	mov	a,_random2_PARM_2
      00003A C3               [12]  718 	clr	c
      00003B 9E               [12]  719 	subb	a,r6
      00003C F5 82            [12]  720 	mov	dpl,a
      00003E E5*08            [12]  721 	mov	a,(_random2_PARM_2 + 1)
      000040 9F               [12]  722 	subb	a,r7
      000041 F5 83            [12]  723 	mov	dph,a
                                    724 ;	./N76_UCS1903.c:96: return random(diff) + howsmall;
      000043 C0 07            [24]  725 	push	ar7
      000045 C0 06            [24]  726 	push	ar6
      000047 12r00r00         [24]  727 	lcall	_random
      00004A E5 82            [12]  728 	mov	a,dpl
      00004C 85 83 F0         [24]  729 	mov	b,dph
      00004F D0 06            [24]  730 	pop	ar6
      000051 D0 07            [24]  731 	pop	ar7
      000053 2E               [12]  732 	add	a,r6
      000054 F5 82            [12]  733 	mov	dpl,a
      000056 EF               [12]  734 	mov	a,r7
      000057 35 F0            [12]  735 	addc	a,b
      000059 F5 83            [12]  736 	mov	dph,a
                                    737 ;	./N76_UCS1903.c:97: }
      00005B 22               [24]  738 	ret
                                    739 ;------------------------------------------------------------
                                    740 ;Allocation info for local variables in function 'LED__SendZero_'
                                    741 ;------------------------------------------------------------
                                    742 ;	./N76_UCS1903.c:99: void LED__SendZero_()
                                    743 ;	-----------------------------------------
                                    744 ;	 function LED__SendZero_
                                    745 ;	-----------------------------------------
      00005C                        746 _LED__SendZero_:
                                    747 ;	./N76_UCS1903.c:101: setb(LED_PORT, LED_PIN);
      00005C 43 80 40         [24]  748 	orl	_p0,#0x40
                                    749 ;	./N76_UCS1903.c:102: _nop_();
      00005F 00               [12]  750 	nop
                                    751 ;	./N76_UCS1903.c:103: _nop_();
      000060 00               [12]  752 	nop
                                    753 ;	./N76_UCS1903.c:104: clrb(LED_PORT, LED_PIN);
      000061 53 80 BF         [24]  754 	anl	_p0,#0xbf
                                    755 ;	./N76_UCS1903.c:105: _nop_();
      000064 00               [12]  756 	nop
                                    757 ;	./N76_UCS1903.c:106: _nop_();
      000065 00               [12]  758 	nop
                                    759 ;	./N76_UCS1903.c:107: _nop_();
      000066 00               [12]  760 	nop
                                    761 ;	./N76_UCS1903.c:108: _nop_();
      000067 00               [12]  762 	nop
                                    763 ;	./N76_UCS1903.c:109: }
      000068 22               [24]  764 	ret
                                    765 ;------------------------------------------------------------
                                    766 ;Allocation info for local variables in function 'LED__SendOne_'
                                    767 ;------------------------------------------------------------
                                    768 ;	./N76_UCS1903.c:110: void LED__SendOne_()
                                    769 ;	-----------------------------------------
                                    770 ;	 function LED__SendOne_
                                    771 ;	-----------------------------------------
      000069                        772 _LED__SendOne_:
                                    773 ;	./N76_UCS1903.c:112: setb(LED_PORT, LED_PIN);
      000069 43 80 40         [24]  774 	orl	_p0,#0x40
                                    775 ;	./N76_UCS1903.c:113: _nop_();
      00006C 00               [12]  776 	nop
                                    777 ;	./N76_UCS1903.c:114: _nop_();
      00006D 00               [12]  778 	nop
                                    779 ;	./N76_UCS1903.c:115: _nop_();
      00006E 00               [12]  780 	nop
                                    781 ;	./N76_UCS1903.c:116: _nop_();
      00006F 00               [12]  782 	nop
                                    783 ;	./N76_UCS1903.c:117: _nop_();
      000070 00               [12]  784 	nop
                                    785 ;	./N76_UCS1903.c:118: _nop_();
      000071 00               [12]  786 	nop
                                    787 ;	./N76_UCS1903.c:119: _nop_();
      000072 00               [12]  788 	nop
                                    789 ;	./N76_UCS1903.c:120: clrb(LED_PORT, LED_PIN);
      000073 53 80 BF         [24]  790 	anl	_p0,#0xbf
                                    791 ;	./N76_UCS1903.c:121: }
      000076 22               [24]  792 	ret
                                    793 ;------------------------------------------------------------
                                    794 ;Allocation info for local variables in function 'LED__SendByte_'
                                    795 ;------------------------------------------------------------
                                    796 ;dat                       Allocated to registers r7 
                                    797 ;------------------------------------------------------------
                                    798 ;	./N76_UCS1903.c:122: void LED__SendByte_(uint8_t dat)
                                    799 ;	-----------------------------------------
                                    800 ;	 function LED__SendByte_
                                    801 ;	-----------------------------------------
      000077                        802 _LED__SendByte_:
                                    803 ;	./N76_UCS1903.c:124: if (dat & 0x80)
      000077 E5 82            [12]  804 	mov	a,dpl
      000079 FF               [12]  805 	mov	r7,a
      00007A 30 E7 09         [24]  806 	jnb	acc.7,00102$
                                    807 ;	./N76_UCS1903.c:125: LED__SendOne_();
      00007D C0 07            [24]  808 	push	ar7
      00007F 12r00r69         [24]  809 	lcall	_LED__SendOne_
      000082 D0 07            [24]  810 	pop	ar7
      000084 80 07            [24]  811 	sjmp	00103$
      000086                        812 00102$:
                                    813 ;	./N76_UCS1903.c:127: LED__SendZero_();
      000086 C0 07            [24]  814 	push	ar7
      000088 12r00r5C         [24]  815 	lcall	_LED__SendZero_
      00008B D0 07            [24]  816 	pop	ar7
      00008D                        817 00103$:
                                    818 ;	./N76_UCS1903.c:128: if (dat & 0x40)
      00008D EF               [12]  819 	mov	a,r7
      00008E 30 E6 09         [24]  820 	jnb	acc.6,00105$
                                    821 ;	./N76_UCS1903.c:129: LED__SendOne_();
      000091 C0 07            [24]  822 	push	ar7
      000093 12r00r69         [24]  823 	lcall	_LED__SendOne_
      000096 D0 07            [24]  824 	pop	ar7
      000098 80 07            [24]  825 	sjmp	00106$
      00009A                        826 00105$:
                                    827 ;	./N76_UCS1903.c:131: LED__SendZero_();
      00009A C0 07            [24]  828 	push	ar7
      00009C 12r00r5C         [24]  829 	lcall	_LED__SendZero_
      00009F D0 07            [24]  830 	pop	ar7
      0000A1                        831 00106$:
                                    832 ;	./N76_UCS1903.c:132: if (dat & 0x20)
      0000A1 EF               [12]  833 	mov	a,r7
      0000A2 30 E5 09         [24]  834 	jnb	acc.5,00108$
                                    835 ;	./N76_UCS1903.c:133: LED__SendOne_();
      0000A5 C0 07            [24]  836 	push	ar7
      0000A7 12r00r69         [24]  837 	lcall	_LED__SendOne_
      0000AA D0 07            [24]  838 	pop	ar7
      0000AC 80 07            [24]  839 	sjmp	00109$
      0000AE                        840 00108$:
                                    841 ;	./N76_UCS1903.c:135: LED__SendZero_();
      0000AE C0 07            [24]  842 	push	ar7
      0000B0 12r00r5C         [24]  843 	lcall	_LED__SendZero_
      0000B3 D0 07            [24]  844 	pop	ar7
      0000B5                        845 00109$:
                                    846 ;	./N76_UCS1903.c:136: if (dat & 0x10)
      0000B5 EF               [12]  847 	mov	a,r7
      0000B6 30 E4 09         [24]  848 	jnb	acc.4,00111$
                                    849 ;	./N76_UCS1903.c:137: LED__SendOne_();
      0000B9 C0 07            [24]  850 	push	ar7
      0000BB 12r00r69         [24]  851 	lcall	_LED__SendOne_
      0000BE D0 07            [24]  852 	pop	ar7
      0000C0 80 07            [24]  853 	sjmp	00112$
      0000C2                        854 00111$:
                                    855 ;	./N76_UCS1903.c:139: LED__SendZero_();
      0000C2 C0 07            [24]  856 	push	ar7
      0000C4 12r00r5C         [24]  857 	lcall	_LED__SendZero_
      0000C7 D0 07            [24]  858 	pop	ar7
      0000C9                        859 00112$:
                                    860 ;	./N76_UCS1903.c:140: if (dat & 0x08)
      0000C9 EF               [12]  861 	mov	a,r7
      0000CA 30 E3 09         [24]  862 	jnb	acc.3,00114$
                                    863 ;	./N76_UCS1903.c:141: LED__SendOne_();
      0000CD C0 07            [24]  864 	push	ar7
      0000CF 12r00r69         [24]  865 	lcall	_LED__SendOne_
      0000D2 D0 07            [24]  866 	pop	ar7
      0000D4 80 07            [24]  867 	sjmp	00115$
      0000D6                        868 00114$:
                                    869 ;	./N76_UCS1903.c:143: LED__SendZero_();
      0000D6 C0 07            [24]  870 	push	ar7
      0000D8 12r00r5C         [24]  871 	lcall	_LED__SendZero_
      0000DB D0 07            [24]  872 	pop	ar7
      0000DD                        873 00115$:
                                    874 ;	./N76_UCS1903.c:144: if (dat & 0x04)
      0000DD EF               [12]  875 	mov	a,r7
      0000DE 30 E2 09         [24]  876 	jnb	acc.2,00117$
                                    877 ;	./N76_UCS1903.c:145: LED__SendOne_();
      0000E1 C0 07            [24]  878 	push	ar7
      0000E3 12r00r69         [24]  879 	lcall	_LED__SendOne_
      0000E6 D0 07            [24]  880 	pop	ar7
      0000E8 80 07            [24]  881 	sjmp	00118$
      0000EA                        882 00117$:
                                    883 ;	./N76_UCS1903.c:147: LED__SendZero_();
      0000EA C0 07            [24]  884 	push	ar7
      0000EC 12r00r5C         [24]  885 	lcall	_LED__SendZero_
      0000EF D0 07            [24]  886 	pop	ar7
      0000F1                        887 00118$:
                                    888 ;	./N76_UCS1903.c:148: if (dat & 0x02)
      0000F1 EF               [12]  889 	mov	a,r7
      0000F2 30 E1 09         [24]  890 	jnb	acc.1,00120$
                                    891 ;	./N76_UCS1903.c:149: LED__SendOne_();
      0000F5 C0 07            [24]  892 	push	ar7
      0000F7 12r00r69         [24]  893 	lcall	_LED__SendOne_
      0000FA D0 07            [24]  894 	pop	ar7
      0000FC 80 07            [24]  895 	sjmp	00121$
      0000FE                        896 00120$:
                                    897 ;	./N76_UCS1903.c:151: LED__SendZero_();
      0000FE C0 07            [24]  898 	push	ar7
      000100 12r00r5C         [24]  899 	lcall	_LED__SendZero_
      000103 D0 07            [24]  900 	pop	ar7
      000105                        901 00121$:
                                    902 ;	./N76_UCS1903.c:152: if (dat & 0x01)
      000105 EF               [12]  903 	mov	a,r7
      000106 30 E0 03         [24]  904 	jnb	acc.0,00123$
                                    905 ;	./N76_UCS1903.c:153: LED__SendOne_();
      000109 02r00r69         [24]  906 	ljmp	_LED__SendOne_
      00010C                        907 00123$:
                                    908 ;	./N76_UCS1903.c:155: LED__SendZero_();
                                    909 ;	./N76_UCS1903.c:156: }
      00010C 02r00r5C         [24]  910 	ljmp	_LED__SendZero_
                                    911 ;------------------------------------------------------------
                                    912 ;Allocation info for local variables in function 'clearAll'
                                    913 ;------------------------------------------------------------
                                    914 ;i                         Allocated to registers r6 r7 
                                    915 ;------------------------------------------------------------
                                    916 ;	./N76_UCS1903.c:158: void clearAll()
                                    917 ;	-----------------------------------------
                                    918 ;	 function clearAll
                                    919 ;	-----------------------------------------
      00010F                        920 _clearAll:
                                    921 ;	./N76_UCS1903.c:160: for (uint16_t i = 0; i < 300; i++)
      00010F 7E 00            [12]  922 	mov	r6,#0x00
      000111 7F 00            [12]  923 	mov	r7,#0x00
      000113                        924 00103$:
      000113 8E 04            [24]  925 	mov	ar4,r6
      000115 8F 05            [24]  926 	mov	ar5,r7
      000117 C3               [12]  927 	clr	c
      000118 EC               [12]  928 	mov	a,r4
      000119 94 2C            [12]  929 	subb	a,#0x2c
      00011B ED               [12]  930 	mov	a,r5
      00011C 94 01            [12]  931 	subb	a,#0x01
      00011E 50 21            [24]  932 	jnc	00105$
                                    933 ;	./N76_UCS1903.c:162: LED__SendByte_(0);
      000120 75 82 00         [24]  934 	mov	dpl,#0x00
      000123 C0 07            [24]  935 	push	ar7
      000125 C0 06            [24]  936 	push	ar6
      000127 12r00r77         [24]  937 	lcall	_LED__SendByte_
                                    938 ;	./N76_UCS1903.c:163: LED__SendByte_(0);
      00012A 75 82 00         [24]  939 	mov	dpl,#0x00
      00012D 12r00r77         [24]  940 	lcall	_LED__SendByte_
                                    941 ;	./N76_UCS1903.c:164: LED__SendByte_(0);
      000130 75 82 00         [24]  942 	mov	dpl,#0x00
      000133 12r00r77         [24]  943 	lcall	_LED__SendByte_
      000136 D0 06            [24]  944 	pop	ar6
      000138 D0 07            [24]  945 	pop	ar7
                                    946 ;	./N76_UCS1903.c:160: for (uint16_t i = 0; i < 300; i++)
      00013A 0E               [12]  947 	inc	r6
      00013B BE 00 D5         [24]  948 	cjne	r6,#0x00,00103$
      00013E 0F               [12]  949 	inc	r7
      00013F 80 D2            [24]  950 	sjmp	00103$
      000141                        951 00105$:
                                    952 ;	./N76_UCS1903.c:166: }
      000141 22               [24]  953 	ret
                                    954 ;------------------------------------------------------------
                                    955 ;Allocation info for local variables in function 'readXram'
                                    956 ;------------------------------------------------------------
                                    957 ;addr                      Allocated to registers 
                                    958 ;------------------------------------------------------------
                                    959 ;	./N76_UCS1903.c:168: uint8_t readXram(uint16_t addr)
                                    960 ;	-----------------------------------------
                                    961 ;	 function readXram
                                    962 ;	-----------------------------------------
      000142                        963 _readXram:
                                    964 ;	./N76_UCS1903.c:170: __asm__("MOVX A,@DPTR");
      000142 E0               [24]  965 	MOVX	A,@DPTR
                                    966 ;	./N76_UCS1903.c:171: __asm__("MOV DPL,A");
      000143 F5 82            [12]  967 	MOV	DPL,A
                                    968 ;	./N76_UCS1903.c:172: }
      000145 22               [24]  969 	ret
                                    970 ;------------------------------------------------------------
                                    971 ;Allocation info for local variables in function 'writeXram'
                                    972 ;------------------------------------------------------------
                                    973 ;value                     Allocated with name '_writeXram_PARM_2'
                                    974 ;addr                      Allocated to registers 
                                    975 ;------------------------------------------------------------
                                    976 ;	./N76_UCS1903.c:173: void writeXram(uint16_t addr, uint8_t value)
                                    977 ;	-----------------------------------------
                                    978 ;	 function writeXram
                                    979 ;	-----------------------------------------
      000146                        980 _writeXram:
                                    981 ;	./N76_UCS1903.c:175: __asm__("MOV A,_writeXram_PARM_2");
      000146 E5*00            [12]  982 	MOV	A,_writeXram_PARM_2
                                    983 ;	./N76_UCS1903.c:176: __asm__("MOVX @DPTR,A");
      000148 F0               [24]  984 	MOVX	@DPTR,A
                                    985 ;	./N76_UCS1903.c:177: }
      000149 22               [24]  986 	ret
                                    987 ;------------------------------------------------------------
                                    988 ;Allocation info for local variables in function 'showStrip'
                                    989 ;------------------------------------------------------------
                                    990 ;i                         Allocated to registers r7 
                                    991 ;g                         Allocated to registers r4 
                                    992 ;r                         Allocated to registers r3 
                                    993 ;b                         Allocated to registers r6 
                                    994 ;------------------------------------------------------------
                                    995 ;	./N76_UCS1903.c:179: void showStrip()
                                    996 ;	-----------------------------------------
                                    997 ;	 function showStrip
                                    998 ;	-----------------------------------------
      00014A                        999 _showStrip:
                                   1000 ;	./N76_UCS1903.c:181: for (uint8_t i = 0; i < NUM_LEDS; ++i)
      00014A 7F 00            [12] 1001 	mov	r7,#0x00
      00014C                       1002 00103$:
      00014C 8F 05            [24] 1003 	mov	ar5,r7
      00014E 7E 00            [12] 1004 	mov	r6,#0x00
      000150 C3               [12] 1005 	clr	c
      000151 ED               [12] 1006 	mov	a,r5
      000152 95*00            [12] 1007 	subb	a,_NUM_LEDS
      000154 EE               [12] 1008 	mov	a,r6
      000155 95*01            [12] 1009 	subb	a,(_NUM_LEDS + 1)
      000157 40 01            [24] 1010 	jc	00116$
      000159 22               [24] 1011 	ret
      00015A                       1012 00116$:
                                   1013 ;	./N76_UCS1903.c:184: g = readXram(i * 3);
      00015A 8F*00            [24] 1014 	mov	__mulint_PARM_2,r7
      00015C 75*01 00         [24] 1015 	mov	(__mulint_PARM_2 + 1),#0x00
      00015F 90 00 03         [24] 1016 	mov	dptr,#0x0003
      000162 C0 07            [24] 1017 	push	ar7
      000164 12r00r00         [24] 1018 	lcall	__mulint
      000167 AD 82            [24] 1019 	mov	r5,dpl
      000169 AE 83            [24] 1020 	mov  r6,dph
      00016B C0 06            [24] 1021 	push	ar6
      00016D C0 05            [24] 1022 	push	ar5
      00016F 12r01r42         [24] 1023 	lcall	_readXram
      000172 AC 82            [24] 1024 	mov	r4,dpl
      000174 D0 05            [24] 1025 	pop	ar5
      000176 D0 06            [24] 1026 	pop	ar6
                                   1027 ;	./N76_UCS1903.c:185: r = readXram(i * 3 + 1);
      000178 74 01            [12] 1028 	mov	a,#0x01
      00017A 2D               [12] 1029 	add	a,r5
      00017B FA               [12] 1030 	mov	r2,a
      00017C E4               [12] 1031 	clr	a
      00017D 3E               [12] 1032 	addc	a,r6
      00017E FB               [12] 1033 	mov	r3,a
      00017F 8A 82            [24] 1034 	mov	dpl,r2
      000181 8B 83            [24] 1035 	mov	dph,r3
      000183 C0 06            [24] 1036 	push	ar6
      000185 C0 05            [24] 1037 	push	ar5
      000187 C0 04            [24] 1038 	push	ar4
      000189 12r01r42         [24] 1039 	lcall	_readXram
      00018C AB 82            [24] 1040 	mov	r3,dpl
      00018E D0 04            [24] 1041 	pop	ar4
      000190 D0 05            [24] 1042 	pop	ar5
      000192 D0 06            [24] 1043 	pop	ar6
                                   1044 ;	./N76_UCS1903.c:186: b = readXram(i * 3 + 2);
      000194 74 02            [12] 1045 	mov	a,#0x02
      000196 2D               [12] 1046 	add	a,r5
      000197 FD               [12] 1047 	mov	r5,a
      000198 E4               [12] 1048 	clr	a
      000199 3E               [12] 1049 	addc	a,r6
      00019A FE               [12] 1050 	mov	r6,a
      00019B 8D 82            [24] 1051 	mov	dpl,r5
      00019D 8E 83            [24] 1052 	mov	dph,r6
      00019F C0 04            [24] 1053 	push	ar4
      0001A1 C0 03            [24] 1054 	push	ar3
      0001A3 12r01r42         [24] 1055 	lcall	_readXram
      0001A6 AE 82            [24] 1056 	mov	r6,dpl
      0001A8 D0 03            [24] 1057 	pop	ar3
      0001AA D0 04            [24] 1058 	pop	ar4
                                   1059 ;	./N76_UCS1903.c:188: LED__SendByte_(g);
      0001AC 8C 82            [24] 1060 	mov	dpl,r4
      0001AE C0 06            [24] 1061 	push	ar6
      0001B0 C0 03            [24] 1062 	push	ar3
      0001B2 12r00r77         [24] 1063 	lcall	_LED__SendByte_
      0001B5 D0 03            [24] 1064 	pop	ar3
                                   1065 ;	./N76_UCS1903.c:189: LED__SendByte_(r);
      0001B7 8B 82            [24] 1066 	mov	dpl,r3
      0001B9 12r00r77         [24] 1067 	lcall	_LED__SendByte_
      0001BC D0 06            [24] 1068 	pop	ar6
                                   1069 ;	./N76_UCS1903.c:190: LED__SendByte_(b);
      0001BE 8E 82            [24] 1070 	mov	dpl,r6
      0001C0 12r00r77         [24] 1071 	lcall	_LED__SendByte_
      0001C3 D0 07            [24] 1072 	pop	ar7
                                   1073 ;	./N76_UCS1903.c:181: for (uint8_t i = 0; i < NUM_LEDS; ++i)
      0001C5 0F               [12] 1074 	inc	r7
                                   1075 ;	./N76_UCS1903.c:192: }
      0001C6 02r01r4C         [24] 1076 	ljmp	00103$
                                   1077 ;------------------------------------------------------------
                                   1078 ;Allocation info for local variables in function 'setPixel'
                                   1079 ;------------------------------------------------------------
                                   1080 ;green                     Allocated with name '_setPixel_PARM_2'
                                   1081 ;red                       Allocated with name '_setPixel_PARM_3'
                                   1082 ;blue                      Allocated with name '_setPixel_PARM_4'
                                   1083 ;Pixel                     Allocated to registers r6 r7 
                                   1084 ;------------------------------------------------------------
                                   1085 ;	./N76_UCS1903.c:195: void setPixel(uint16_t Pixel, uint8_t green, uint8_t red, uint8_t blue)
                                   1086 ;	-----------------------------------------
                                   1087 ;	 function setPixel
                                   1088 ;	-----------------------------------------
      0001C9                       1089 _setPixel:
      0001C9 AE 82            [24] 1090 	mov	r6,dpl
      0001CB AF 83            [24] 1091 	mov	r7,dph
                                   1092 ;	./N76_UCS1903.c:197: writeXram(Pixel * 3, green);
      0001CD 8E*00            [24] 1093 	mov	__mulint_PARM_2,r6
      0001CF 8F*01            [24] 1094 	mov	(__mulint_PARM_2 + 1),r7
      0001D1 90 00 03         [24] 1095 	mov	dptr,#0x0003
      0001D4 12r00r00         [24] 1096 	lcall	__mulint
      0001D7 AE 82            [24] 1097 	mov	r6,dpl
      0001D9 AF 83            [24] 1098 	mov  r7,dph
      0001DB 85*09*00         [24] 1099 	mov	_writeXram_PARM_2,_setPixel_PARM_2
      0001DE C0 07            [24] 1100 	push	ar7
      0001E0 C0 06            [24] 1101 	push	ar6
      0001E2 12r01r46         [24] 1102 	lcall	_writeXram
      0001E5 D0 06            [24] 1103 	pop	ar6
      0001E7 D0 07            [24] 1104 	pop	ar7
                                   1105 ;	./N76_UCS1903.c:198: writeXram(Pixel * 3 + 1, red);
      0001E9 74 01            [12] 1106 	mov	a,#0x01
      0001EB 2E               [12] 1107 	add	a,r6
      0001EC FC               [12] 1108 	mov	r4,a
      0001ED E4               [12] 1109 	clr	a
      0001EE 3F               [12] 1110 	addc	a,r7
      0001EF FD               [12] 1111 	mov	r5,a
      0001F0 8C 82            [24] 1112 	mov	dpl,r4
      0001F2 8D 83            [24] 1113 	mov	dph,r5
      0001F4 85*0A*00         [24] 1114 	mov	_writeXram_PARM_2,_setPixel_PARM_3
      0001F7 C0 07            [24] 1115 	push	ar7
      0001F9 C0 06            [24] 1116 	push	ar6
      0001FB 12r01r46         [24] 1117 	lcall	_writeXram
      0001FE D0 06            [24] 1118 	pop	ar6
      000200 D0 07            [24] 1119 	pop	ar7
                                   1120 ;	./N76_UCS1903.c:199: writeXram(Pixel * 3 + 2, blue);
      000202 74 02            [12] 1121 	mov	a,#0x02
      000204 2E               [12] 1122 	add	a,r6
      000205 FE               [12] 1123 	mov	r6,a
      000206 E4               [12] 1124 	clr	a
      000207 3F               [12] 1125 	addc	a,r7
      000208 FF               [12] 1126 	mov	r7,a
      000209 8E 82            [24] 1127 	mov	dpl,r6
      00020B 8F 83            [24] 1128 	mov	dph,r7
      00020D 85*0B*00         [24] 1129 	mov	_writeXram_PARM_2,_setPixel_PARM_4
                                   1130 ;	./N76_UCS1903.c:200: }
      000210 02r01r46         [24] 1131 	ljmp	_writeXram
                                   1132 ;------------------------------------------------------------
                                   1133 ;Allocation info for local variables in function 'setAll'
                                   1134 ;------------------------------------------------------------
                                   1135 ;red                       Allocated with name '_setAll_PARM_2'
                                   1136 ;blue                      Allocated with name '_setAll_PARM_3'
                                   1137 ;green                     Allocated to registers r7 
                                   1138 ;i                         Allocated to registers r5 r6 
                                   1139 ;------------------------------------------------------------
                                   1140 ;	./N76_UCS1903.c:203: void setAll(uint8_t green, uint8_t red, uint8_t blue)
                                   1141 ;	-----------------------------------------
                                   1142 ;	 function setAll
                                   1143 ;	-----------------------------------------
      000213                       1144 _setAll:
      000213 AF 82            [24] 1145 	mov	r7,dpl
                                   1146 ;	./N76_UCS1903.c:205: for (int16_t i = 0; i < NUM_LEDS; ++i)
      000215 7D 00            [12] 1147 	mov	r5,#0x00
      000217 7E 00            [12] 1148 	mov	r6,#0x00
      000219                       1149 00103$:
      000219 8D 03            [24] 1150 	mov	ar3,r5
      00021B 8E 04            [24] 1151 	mov	ar4,r6
      00021D C3               [12] 1152 	clr	c
      00021E EB               [12] 1153 	mov	a,r3
      00021F 95*00            [12] 1154 	subb	a,_NUM_LEDS
      000221 EC               [12] 1155 	mov	a,r4
      000222 95*01            [12] 1156 	subb	a,(_NUM_LEDS + 1)
      000224 50 22            [24] 1157 	jnc	00105$
                                   1158 ;	./N76_UCS1903.c:207: setPixel(i, green, red, blue);
      000226 8F*09            [24] 1159 	mov	_setPixel_PARM_2,r7
      000228 85*0C*0A         [24] 1160 	mov	_setPixel_PARM_3,_setAll_PARM_2
      00022B 85*0D*0B         [24] 1161 	mov	_setPixel_PARM_4,_setAll_PARM_3
      00022E 8D 82            [24] 1162 	mov	dpl,r5
      000230 8E 83            [24] 1163 	mov	dph,r6
      000232 C0 07            [24] 1164 	push	ar7
      000234 C0 06            [24] 1165 	push	ar6
      000236 C0 05            [24] 1166 	push	ar5
      000238 12r01rC9         [24] 1167 	lcall	_setPixel
      00023B D0 05            [24] 1168 	pop	ar5
      00023D D0 06            [24] 1169 	pop	ar6
      00023F D0 07            [24] 1170 	pop	ar7
                                   1171 ;	./N76_UCS1903.c:205: for (int16_t i = 0; i < NUM_LEDS; ++i)
      000241 0D               [12] 1172 	inc	r5
      000242 BD 00 D4         [24] 1173 	cjne	r5,#0x00,00103$
      000245 0E               [12] 1174 	inc	r6
      000246 80 D1            [24] 1175 	sjmp	00103$
      000248                       1176 00105$:
                                   1177 ;	./N76_UCS1903.c:209: }
      000248 22               [24] 1178 	ret
                                   1179 ;------------------------------------------------------------
                                   1180 ;Allocation info for local variables in function 'FadeInOut'
                                   1181 ;------------------------------------------------------------
                                   1182 ;red                       Allocated with name '_FadeInOut_PARM_2'
                                   1183 ;blue                      Allocated with name '_FadeInOut_PARM_3'
                                   1184 ;green                     Allocated with name '_FadeInOut_green_65536_99'
                                   1185 ;g                         Allocated with name '_FadeInOut_g_65536_100'
                                   1186 ;r                         Allocated with name '_FadeInOut_r_65536_100'
                                   1187 ;b                         Allocated to registers 
                                   1188 ;curEffect                 Allocated with name '_FadeInOut_curEffect_65536_100'
                                   1189 ;k                         Allocated to registers r4 r5 
                                   1190 ;k                         Allocated with name '_FadeInOut_k_131072_104'
                                   1191 ;------------------------------------------------------------
                                   1192 ;	./N76_UCS1903.c:210: void FadeInOut(uint8_t green, uint8_t red, uint8_t blue)
                                   1193 ;	-----------------------------------------
                                   1194 ;	 function FadeInOut
                                   1195 ;	-----------------------------------------
      000249                       1196 _FadeInOut:
      000249 85 82*10         [24] 1197 	mov	_FadeInOut_green_65536_99,dpl
                                   1198 ;	./N76_UCS1903.c:213: uint8_t curEffect = effect;
      00024C 85*04*13         [24] 1199 	mov	_FadeInOut_curEffect_65536_100,_effect
                                   1200 ;	./N76_UCS1903.c:215: for (int16_t k = 0; k < 255; k = k + NUM_LEDS/50)
      00024F 7C 00            [12] 1201 	mov	r4,#0x00
      000251 7D 00            [12] 1202 	mov	r5,#0x00
      000253                       1203 00108$:
      000253 8C 02            [24] 1204 	mov	ar2,r4
      000255 8D 03            [24] 1205 	mov	ar3,r5
      000257 C3               [12] 1206 	clr	c
      000258 EA               [12] 1207 	mov	a,r2
      000259 94 FF            [12] 1208 	subb	a,#0xff
      00025B EB               [12] 1209 	mov	a,r3
      00025C 64 80            [12] 1210 	xrl	a,#0x80
      00025E 94 80            [12] 1211 	subb	a,#0x80
      000260 40 03            [24] 1212 	jc	00145$
      000262 02r03r48         [24] 1213 	ljmp	00103$
      000265                       1214 00145$:
                                   1215 ;	./N76_UCS1903.c:217: if (curEffect != effect) {_status=STT_NEW;return;}
      000265 E5*04            [12] 1216 	mov	a,_effect
      000267 B5*13 02         [24] 1217 	cjne	a,_FadeInOut_curEffect_65536_100,00146$
      00026A 80 04            [24] 1218 	sjmp	00102$
      00026C                       1219 00146$:
      00026C 75*05 12         [24] 1220 	mov	__status,#0x12
      00026F 22               [24] 1221 	ret
      000270                       1222 00102$:
                                   1223 ;	./N76_UCS1903.c:219: r = k * red / 256;
      000270 85*0E*00         [24] 1224 	mov	__mulint_PARM_2,_FadeInOut_PARM_2
      000273 75*01 00         [24] 1225 	mov	(__mulint_PARM_2 + 1),#0x00
      000276 8C 82            [24] 1226 	mov	dpl,r4
      000278 8D 83            [24] 1227 	mov	dph,r5
      00027A C0 05            [24] 1228 	push	ar5
      00027C C0 04            [24] 1229 	push	ar4
      00027E 12r00r00         [24] 1230 	lcall	__mulint
      000281 75*00 00         [24] 1231 	mov	__divsint_PARM_2,#0x00
      000284 75*01 01         [24] 1232 	mov	(__divsint_PARM_2 + 1),#0x01
      000287 12r00r00         [24] 1233 	lcall	__divsint
      00028A AA 82            [24] 1234 	mov	r2,dpl
      00028C D0 04            [24] 1235 	pop	ar4
      00028E D0 05            [24] 1236 	pop	ar5
                                   1237 ;	./N76_UCS1903.c:220: g = k * green / 256;
      000290 85*10*00         [24] 1238 	mov	__mulint_PARM_2,_FadeInOut_green_65536_99
      000293 75*01 00         [24] 1239 	mov	(__mulint_PARM_2 + 1),#0x00
      000296 8C 82            [24] 1240 	mov	dpl,r4
      000298 8D 83            [24] 1241 	mov	dph,r5
      00029A C0 05            [24] 1242 	push	ar5
      00029C C0 04            [24] 1243 	push	ar4
      00029E C0 02            [24] 1244 	push	ar2
      0002A0 12r00r00         [24] 1245 	lcall	__mulint
      0002A3 75*00 00         [24] 1246 	mov	__divsint_PARM_2,#0x00
      0002A6 75*01 01         [24] 1247 	mov	(__divsint_PARM_2 + 1),#0x01
      0002A9 12r00r00         [24] 1248 	lcall	__divsint
      0002AC A9 82            [24] 1249 	mov	r1,dpl
      0002AE D0 02            [24] 1250 	pop	ar2
      0002B0 D0 04            [24] 1251 	pop	ar4
      0002B2 D0 05            [24] 1252 	pop	ar5
                                   1253 ;	./N76_UCS1903.c:221: b = k * blue / 256;
      0002B4 85*0F*00         [24] 1254 	mov	__mulint_PARM_2,_FadeInOut_PARM_3
      0002B7 75*01 00         [24] 1255 	mov	(__mulint_PARM_2 + 1),#0x00
      0002BA 8C 82            [24] 1256 	mov	dpl,r4
      0002BC 8D 83            [24] 1257 	mov	dph,r5
      0002BE C0 05            [24] 1258 	push	ar5
      0002C0 C0 04            [24] 1259 	push	ar4
      0002C2 C0 02            [24] 1260 	push	ar2
      0002C4 C0 01            [24] 1261 	push	ar1
      0002C6 12r00r00         [24] 1262 	lcall	__mulint
      0002C9 75*00 00         [24] 1263 	mov	__divsint_PARM_2,#0x00
      0002CC 75*01 01         [24] 1264 	mov	(__divsint_PARM_2 + 1),#0x01
      0002CF 12r00r00         [24] 1265 	lcall	__divsint
      0002D2 A8 82            [24] 1266 	mov	r0,dpl
      0002D4 D0 01            [24] 1267 	pop	ar1
      0002D6 D0 02            [24] 1268 	pop	ar2
      0002D8 88*0D            [24] 1269 	mov	_setAll_PARM_3,r0
                                   1270 ;	./N76_UCS1903.c:222: setAll(g, r, b);
      0002DA 8A*0C            [24] 1271 	mov	_setAll_PARM_2,r2
      0002DC 89 82            [24] 1272 	mov	dpl,r1
      0002DE 12r02r13         [24] 1273 	lcall	_setAll
                                   1274 ;	./N76_UCS1903.c:223: showStrip();
      0002E1 12r01r4A         [24] 1275 	lcall	_showStrip
                                   1276 ;	./N76_UCS1903.c:224: _delay_ms(DELAY2);
      0002E4 85*00*00         [24] 1277 	mov	__divuint_PARM_2,_NUM_LEDS
      0002E7 85*01*01         [24] 1278 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      0002EA 90 00 C8         [24] 1279 	mov	dptr,#0x00c8
      0002ED 12r00r00         [24] 1280 	lcall	__divuint
      0002F0 85*02*00         [24] 1281 	mov	__mulint_PARM_2,__delay
      0002F3 85*03*01         [24] 1282 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      0002F6 12r00r00         [24] 1283 	lcall	__mulint
      0002F9 75*00 64         [24] 1284 	mov	__divuint_PARM_2,#0x64
      0002FC 75*01 00         [24] 1285 	mov	(__divuint_PARM_2 + 1),#0x00
      0002FF 12r00r00         [24] 1286 	lcall	__divuint
      000302 E5 82            [12] 1287 	mov	a,dpl
      000304 85 83 F0         [24] 1288 	mov	b,dph
      000307 24 01            [12] 1289 	add	a,#0x01
      000309 FA               [12] 1290 	mov	r2,a
      00030A E4               [12] 1291 	clr	a
      00030B 35 F0            [12] 1292 	addc	a,b
      00030D FB               [12] 1293 	mov	r3,a
      00030E 8A 00            [24] 1294 	mov	ar0,r2
      000310 8B 01            [24] 1295 	mov	ar1,r3
      000312 7A 00            [12] 1296 	mov	r2,#0x00
      000314 7B 00            [12] 1297 	mov	r3,#0x00
      000316 88 82            [24] 1298 	mov	dpl,r0
      000318 89 83            [24] 1299 	mov	dph,r1
      00031A 8A F0            [24] 1300 	mov	b,r2
      00031C EB               [12] 1301 	mov	a,r3
      00031D 12r00r00         [24] 1302 	lcall	__delay_ms
                                   1303 ;	./N76_UCS1903.c:215: for (int16_t k = 0; k < 255; k = k + NUM_LEDS/50)
      000320 85*00 82         [24] 1304 	mov	dpl,_NUM_LEDS
      000323 85*01 83         [24] 1305 	mov	dph,(_NUM_LEDS + 1)
      000326 75*00 32         [24] 1306 	mov	__divuint_PARM_2,#0x32
      000329 75*01 00         [24] 1307 	mov	(__divuint_PARM_2 + 1),#0x00
      00032C 12r00r00         [24] 1308 	lcall	__divuint
      00032F AA 82            [24] 1309 	mov	r2,dpl
      000331 AB 83            [24] 1310 	mov	r3,dph
      000333 D0 04            [24] 1311 	pop	ar4
      000335 D0 05            [24] 1312 	pop	ar5
      000337 8C 00            [24] 1313 	mov	ar0,r4
      000339 8D 01            [24] 1314 	mov	ar1,r5
      00033B EA               [12] 1315 	mov	a,r2
      00033C 28               [12] 1316 	add	a,r0
      00033D FA               [12] 1317 	mov	r2,a
      00033E EB               [12] 1318 	mov	a,r3
      00033F 39               [12] 1319 	addc	a,r1
      000340 FB               [12] 1320 	mov	r3,a
      000341 8A 04            [24] 1321 	mov	ar4,r2
      000343 8B 05            [24] 1322 	mov	ar5,r3
      000345 02r02r53         [24] 1323 	ljmp	00108$
      000348                       1324 00103$:
                                   1325 ;	./N76_UCS1903.c:227: for (int16_t k = 255; k > 0; k = k - NUM_LEDS/25)
      000348 75*14 FF         [24] 1326 	mov	_FadeInOut_k_131072_104,#0xff
      00034B 75*15 00         [24] 1327 	mov	(_FadeInOut_k_131072_104 + 1),#0x00
      00034E                       1328 00111$:
      00034E AA*14            [24] 1329 	mov	r2,_FadeInOut_k_131072_104
      000350 AB*15            [24] 1330 	mov	r3,(_FadeInOut_k_131072_104 + 1)
      000352 C3               [12] 1331 	clr	c
      000353 E4               [12] 1332 	clr	a
      000354 9A               [12] 1333 	subb	a,r2
      000355 74 80            [12] 1334 	mov	a,#(0x00 ^ 0x80)
      000357 8B F0            [24] 1335 	mov	b,r3
      000359 63 F0 80         [24] 1336 	xrl	b,#0x80
      00035C 95 F0            [12] 1337 	subb	a,b
      00035E 40 01            [24] 1338 	jc	00147$
      000360 22               [24] 1339 	ret
      000361                       1340 00147$:
                                   1341 ;	./N76_UCS1903.c:229: if (curEffect != effect) {_status=STT_NEW;return;}
      000361 E5*04            [12] 1342 	mov	a,_effect
      000363 B5*13 02         [24] 1343 	cjne	a,_FadeInOut_curEffect_65536_100,00148$
      000366 80 04            [24] 1344 	sjmp	00105$
      000368                       1345 00148$:
      000368 75*05 12         [24] 1346 	mov	__status,#0x12
      00036B 22               [24] 1347 	ret
      00036C                       1348 00105$:
                                   1349 ;	./N76_UCS1903.c:230: r = (k / 256.0) * red;
      00036C 85*14 82         [24] 1350 	mov	dpl,_FadeInOut_k_131072_104
      00036F 85*15 83         [24] 1351 	mov	dph,(_FadeInOut_k_131072_104 + 1)
      000372 12r00r00         [24] 1352 	lcall	___sint2fs
      000375 A8 82            [24] 1353 	mov	r0,dpl
      000377 A9 83            [24] 1354 	mov	r1,dph
      000379 AA F0            [24] 1355 	mov	r2,b
      00037B FB               [12] 1356 	mov	r3,a
      00037C E4               [12] 1357 	clr	a
      00037D C0 E0            [24] 1358 	push	acc
      00037F C0 E0            [24] 1359 	push	acc
      000381 74 80            [12] 1360 	mov	a,#0x80
      000383 C0 E0            [24] 1361 	push	acc
      000385 74 43            [12] 1362 	mov	a,#0x43
      000387 C0 E0            [24] 1363 	push	acc
      000389 88 82            [24] 1364 	mov	dpl,r0
      00038B 89 83            [24] 1365 	mov	dph,r1
      00038D 8A F0            [24] 1366 	mov	b,r2
      00038F EB               [12] 1367 	mov	a,r3
      000390 12r00r00         [24] 1368 	lcall	___fsdiv
      000393 A8 82            [24] 1369 	mov	r0,dpl
      000395 A9 83            [24] 1370 	mov	r1,dph
      000397 AA F0            [24] 1371 	mov	r2,b
      000399 FB               [12] 1372 	mov	r3,a
      00039A E5 81            [12] 1373 	mov	a,sp
      00039C 24 FC            [12] 1374 	add	a,#0xfc
      00039E F5 81            [12] 1375 	mov	sp,a
      0003A0 85*0E 82         [24] 1376 	mov	dpl,_FadeInOut_PARM_2
      0003A3 C0 03            [24] 1377 	push	ar3
      0003A5 C0 02            [24] 1378 	push	ar2
      0003A7 C0 01            [24] 1379 	push	ar1
      0003A9 C0 00            [24] 1380 	push	ar0
      0003AB 12r00r00         [24] 1381 	lcall	___uchar2fs
      0003AE AC 82            [24] 1382 	mov	r4,dpl
      0003B0 AD 83            [24] 1383 	mov	r5,dph
      0003B2 AE F0            [24] 1384 	mov	r6,b
      0003B4 FF               [12] 1385 	mov	r7,a
      0003B5 D0 00            [24] 1386 	pop	ar0
      0003B7 D0 01            [24] 1387 	pop	ar1
      0003B9 D0 02            [24] 1388 	pop	ar2
      0003BB D0 03            [24] 1389 	pop	ar3
      0003BD C0 03            [24] 1390 	push	ar3
      0003BF C0 02            [24] 1391 	push	ar2
      0003C1 C0 01            [24] 1392 	push	ar1
      0003C3 C0 00            [24] 1393 	push	ar0
      0003C5 C0 04            [24] 1394 	push	ar4
      0003C7 C0 05            [24] 1395 	push	ar5
      0003C9 C0 06            [24] 1396 	push	ar6
      0003CB C0 07            [24] 1397 	push	ar7
      0003CD 88 82            [24] 1398 	mov	dpl,r0
      0003CF 89 83            [24] 1399 	mov	dph,r1
      0003D1 8A F0            [24] 1400 	mov	b,r2
      0003D3 EB               [12] 1401 	mov	a,r3
      0003D4 12r00r00         [24] 1402 	lcall	___fsmul
      0003D7 AC 82            [24] 1403 	mov	r4,dpl
      0003D9 AD 83            [24] 1404 	mov	r5,dph
      0003DB AE F0            [24] 1405 	mov	r6,b
      0003DD FF               [12] 1406 	mov	r7,a
      0003DE E5 81            [12] 1407 	mov	a,sp
      0003E0 24 FC            [12] 1408 	add	a,#0xfc
      0003E2 F5 81            [12] 1409 	mov	sp,a
      0003E4 8C 82            [24] 1410 	mov	dpl,r4
      0003E6 8D 83            [24] 1411 	mov	dph,r5
      0003E8 8E F0            [24] 1412 	mov	b,r6
      0003EA EF               [12] 1413 	mov	a,r7
      0003EB 12r00r00         [24] 1414 	lcall	___fs2uchar
      0003EE 85 82*12         [24] 1415 	mov	_FadeInOut_r_65536_100,dpl
                                   1416 ;	./N76_UCS1903.c:231: g = (k / 256.0) * green;
      0003F1 85*10 82         [24] 1417 	mov	dpl,_FadeInOut_green_65536_99
      0003F4 12r00r00         [24] 1418 	lcall	___uchar2fs
      0003F7 AC 82            [24] 1419 	mov	r4,dpl
      0003F9 AD 83            [24] 1420 	mov	r5,dph
      0003FB AE F0            [24] 1421 	mov	r6,b
      0003FD FF               [12] 1422 	mov	r7,a
      0003FE D0 00            [24] 1423 	pop	ar0
      000400 D0 01            [24] 1424 	pop	ar1
      000402 D0 02            [24] 1425 	pop	ar2
      000404 D0 03            [24] 1426 	pop	ar3
      000406 C0 03            [24] 1427 	push	ar3
      000408 C0 02            [24] 1428 	push	ar2
      00040A C0 01            [24] 1429 	push	ar1
      00040C C0 00            [24] 1430 	push	ar0
      00040E C0 04            [24] 1431 	push	ar4
      000410 C0 05            [24] 1432 	push	ar5
      000412 C0 06            [24] 1433 	push	ar6
      000414 C0 07            [24] 1434 	push	ar7
      000416 88 82            [24] 1435 	mov	dpl,r0
      000418 89 83            [24] 1436 	mov	dph,r1
      00041A 8A F0            [24] 1437 	mov	b,r2
      00041C EB               [12] 1438 	mov	a,r3
      00041D 12r00r00         [24] 1439 	lcall	___fsmul
      000420 AC 82            [24] 1440 	mov	r4,dpl
      000422 AD 83            [24] 1441 	mov	r5,dph
      000424 AE F0            [24] 1442 	mov	r6,b
      000426 FF               [12] 1443 	mov	r7,a
      000427 E5 81            [12] 1444 	mov	a,sp
      000429 24 FC            [12] 1445 	add	a,#0xfc
      00042B F5 81            [12] 1446 	mov	sp,a
      00042D 8C 82            [24] 1447 	mov	dpl,r4
      00042F 8D 83            [24] 1448 	mov	dph,r5
      000431 8E F0            [24] 1449 	mov	b,r6
      000433 EF               [12] 1450 	mov	a,r7
      000434 12r00r00         [24] 1451 	lcall	___fs2uchar
      000437 85 82*11         [24] 1452 	mov	_FadeInOut_g_65536_100,dpl
                                   1453 ;	./N76_UCS1903.c:232: b = (k / 256.0) * blue;
      00043A 85*0F 82         [24] 1454 	mov	dpl,_FadeInOut_PARM_3
      00043D 12r00r00         [24] 1455 	lcall	___uchar2fs
      000440 AC 82            [24] 1456 	mov	r4,dpl
      000442 AD 83            [24] 1457 	mov	r5,dph
      000444 AE F0            [24] 1458 	mov	r6,b
      000446 FF               [12] 1459 	mov	r7,a
      000447 D0 00            [24] 1460 	pop	ar0
      000449 D0 01            [24] 1461 	pop	ar1
      00044B D0 02            [24] 1462 	pop	ar2
      00044D D0 03            [24] 1463 	pop	ar3
      00044F C0 04            [24] 1464 	push	ar4
      000451 C0 05            [24] 1465 	push	ar5
      000453 C0 06            [24] 1466 	push	ar6
      000455 C0 07            [24] 1467 	push	ar7
      000457 88 82            [24] 1468 	mov	dpl,r0
      000459 89 83            [24] 1469 	mov	dph,r1
      00045B 8A F0            [24] 1470 	mov	b,r2
      00045D EB               [12] 1471 	mov	a,r3
      00045E 12r00r00         [24] 1472 	lcall	___fsmul
      000461 AC 82            [24] 1473 	mov	r4,dpl
      000463 AD 83            [24] 1474 	mov	r5,dph
      000465 AE F0            [24] 1475 	mov	r6,b
      000467 FF               [12] 1476 	mov	r7,a
      000468 E5 81            [12] 1477 	mov	a,sp
      00046A 24 FC            [12] 1478 	add	a,#0xfc
      00046C F5 81            [12] 1479 	mov	sp,a
      00046E 8C 82            [24] 1480 	mov	dpl,r4
      000470 8D 83            [24] 1481 	mov	dph,r5
      000472 8E F0            [24] 1482 	mov	b,r6
      000474 EF               [12] 1483 	mov	a,r7
      000475 12r00r00         [24] 1484 	lcall	___fs2uchar
      000478 85 82*0D         [24] 1485 	mov	_setAll_PARM_3,dpl
                                   1486 ;	./N76_UCS1903.c:233: setAll(g, r, b);
      00047B 85*12*0C         [24] 1487 	mov	_setAll_PARM_2,_FadeInOut_r_65536_100
      00047E 85*11 82         [24] 1488 	mov	dpl,_FadeInOut_g_65536_100
      000481 12r02r13         [24] 1489 	lcall	_setAll
                                   1490 ;	./N76_UCS1903.c:234: showStrip();
      000484 12r01r4A         [24] 1491 	lcall	_showStrip
                                   1492 ;	./N76_UCS1903.c:235: _delay_ms(DELAY2);
      000487 85*00*00         [24] 1493 	mov	__divuint_PARM_2,_NUM_LEDS
      00048A 85*01*01         [24] 1494 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      00048D 90 00 C8         [24] 1495 	mov	dptr,#0x00c8
      000490 12r00r00         [24] 1496 	lcall	__divuint
      000493 85*02*00         [24] 1497 	mov	__mulint_PARM_2,__delay
      000496 85*03*01         [24] 1498 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      000499 12r00r00         [24] 1499 	lcall	__mulint
      00049C 75*00 64         [24] 1500 	mov	__divuint_PARM_2,#0x64
      00049F 75*01 00         [24] 1501 	mov	(__divuint_PARM_2 + 1),#0x00
      0004A2 12r00r00         [24] 1502 	lcall	__divuint
      0004A5 E5 82            [12] 1503 	mov	a,dpl
      0004A7 85 83 F0         [24] 1504 	mov	b,dph
      0004AA 24 01            [12] 1505 	add	a,#0x01
      0004AC FE               [12] 1506 	mov	r6,a
      0004AD E4               [12] 1507 	clr	a
      0004AE 35 F0            [12] 1508 	addc	a,b
      0004B0 FF               [12] 1509 	mov	r7,a
      0004B1 7D 00            [12] 1510 	mov	r5,#0x00
      0004B3 7C 00            [12] 1511 	mov	r4,#0x00
      0004B5 8E 82            [24] 1512 	mov	dpl,r6
      0004B7 8F 83            [24] 1513 	mov	dph,r7
      0004B9 8D F0            [24] 1514 	mov	b,r5
      0004BB EC               [12] 1515 	mov	a,r4
      0004BC 12r00r00         [24] 1516 	lcall	__delay_ms
                                   1517 ;	./N76_UCS1903.c:227: for (int16_t k = 255; k > 0; k = k - NUM_LEDS/25)
      0004BF 85*00 82         [24] 1518 	mov	dpl,_NUM_LEDS
      0004C2 85*01 83         [24] 1519 	mov	dph,(_NUM_LEDS + 1)
      0004C5 75*00 19         [24] 1520 	mov	__divuint_PARM_2,#0x19
      0004C8 75*01 00         [24] 1521 	mov	(__divuint_PARM_2 + 1),#0x00
      0004CB 12r00r00         [24] 1522 	lcall	__divuint
      0004CE AE 82            [24] 1523 	mov	r6,dpl
      0004D0 AF 83            [24] 1524 	mov	r7,dph
      0004D2 AC*14            [24] 1525 	mov	r4,_FadeInOut_k_131072_104
      0004D4 AD*15            [24] 1526 	mov	r5,(_FadeInOut_k_131072_104 + 1)
      0004D6 EC               [12] 1527 	mov	a,r4
      0004D7 C3               [12] 1528 	clr	c
      0004D8 9E               [12] 1529 	subb	a,r6
      0004D9 FE               [12] 1530 	mov	r6,a
      0004DA ED               [12] 1531 	mov	a,r5
      0004DB 9F               [12] 1532 	subb	a,r7
      0004DC FF               [12] 1533 	mov	r7,a
      0004DD 8E*14            [24] 1534 	mov	_FadeInOut_k_131072_104,r6
      0004DF 8F*15            [24] 1535 	mov	(_FadeInOut_k_131072_104 + 1),r7
                                   1536 ;	./N76_UCS1903.c:237: }
      0004E1 02r03r4E         [24] 1537 	ljmp	00111$
                                   1538 ;------------------------------------------------------------
                                   1539 ;Allocation info for local variables in function 'Strobe'
                                   1540 ;------------------------------------------------------------
                                   1541 ;red                       Allocated with name '_Strobe_PARM_2'
                                   1542 ;blue                      Allocated with name '_Strobe_PARM_3'
                                   1543 ;StrobeCount               Allocated with name '_Strobe_PARM_4'
                                   1544 ;FlashDelay                Allocated with name '_Strobe_PARM_5'
                                   1545 ;EndPause                  Allocated with name '_Strobe_PARM_6'
                                   1546 ;green                     Allocated to registers r7 
                                   1547 ;curEffect                 Allocated to registers r6 
                                   1548 ;j                         Allocated to registers r4 r5 
                                   1549 ;------------------------------------------------------------
                                   1550 ;	./N76_UCS1903.c:239: void Strobe(uint8_t green, uint8_t red, uint8_t blue, int16_t StrobeCount, int16_t FlashDelay, int16_t EndPause)
                                   1551 ;	-----------------------------------------
                                   1552 ;	 function Strobe
                                   1553 ;	-----------------------------------------
      0004E4                       1554 _Strobe:
      0004E4 AF 82            [24] 1555 	mov	r7,dpl
                                   1556 ;	./N76_UCS1903.c:241: uint8_t curEffect = effect;
      0004E6 AE*04            [24] 1557 	mov	r6,_effect
                                   1558 ;	./N76_UCS1903.c:242: for (int16_t j = 0; j < StrobeCount; j++)
      0004E8 7C 00            [12] 1559 	mov	r4,#0x00
      0004EA 7D 00            [12] 1560 	mov	r5,#0x00
      0004EC                       1561 00105$:
      0004EC C3               [12] 1562 	clr	c
      0004ED EC               [12] 1563 	mov	a,r4
      0004EE 95*18            [12] 1564 	subb	a,_Strobe_PARM_4
      0004F0 ED               [12] 1565 	mov	a,r5
      0004F1 64 80            [12] 1566 	xrl	a,#0x80
      0004F3 85*19 F0         [24] 1567 	mov	b,(_Strobe_PARM_4 + 1)
      0004F6 63 F0 80         [24] 1568 	xrl	b,#0x80
      0004F9 95 F0            [12] 1569 	subb	a,b
      0004FB 40 03            [24] 1570 	jc	00121$
      0004FD 02r05rB7         [24] 1571 	ljmp	00103$
      000500                       1572 00121$:
                                   1573 ;	./N76_UCS1903.c:244: if (curEffect != effect) {_status=STT_NEW;return;}
      000500 EE               [12] 1574 	mov	a,r6
      000501 B5*04 02         [24] 1575 	cjne	a,_effect,00122$
      000504 80 04            [24] 1576 	sjmp	00102$
      000506                       1577 00122$:
      000506 75*05 12         [24] 1578 	mov	__status,#0x12
      000509 22               [24] 1579 	ret
      00050A                       1580 00102$:
                                   1581 ;	./N76_UCS1903.c:245: setAll(green, red, blue);
      00050A 85*16*0C         [24] 1582 	mov	_setAll_PARM_2,_Strobe_PARM_2
      00050D 85*17*0D         [24] 1583 	mov	_setAll_PARM_3,_Strobe_PARM_3
      000510 8F 82            [24] 1584 	mov	dpl,r7
      000512 C0 07            [24] 1585 	push	ar7
      000514 C0 06            [24] 1586 	push	ar6
      000516 C0 05            [24] 1587 	push	ar5
      000518 C0 04            [24] 1588 	push	ar4
      00051A 12r02r13         [24] 1589 	lcall	_setAll
                                   1590 ;	./N76_UCS1903.c:246: showStrip();
      00051D 12r01r4A         [24] 1591 	lcall	_showStrip
                                   1592 ;	./N76_UCS1903.c:247: _delay_ms(DELAY2);
      000520 85*00*00         [24] 1593 	mov	__divuint_PARM_2,_NUM_LEDS
      000523 85*01*01         [24] 1594 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      000526 90 00 C8         [24] 1595 	mov	dptr,#0x00c8
      000529 12r00r00         [24] 1596 	lcall	__divuint
      00052C 85*02*00         [24] 1597 	mov	__mulint_PARM_2,__delay
      00052F 85*03*01         [24] 1598 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      000532 12r00r00         [24] 1599 	lcall	__mulint
      000535 75*00 64         [24] 1600 	mov	__divuint_PARM_2,#0x64
      000538 75*01 00         [24] 1601 	mov	(__divuint_PARM_2 + 1),#0x00
      00053B 12r00r00         [24] 1602 	lcall	__divuint
      00053E E5 82            [12] 1603 	mov	a,dpl
      000540 85 83 F0         [24] 1604 	mov	b,dph
      000543 24 01            [12] 1605 	add	a,#0x01
      000545 FA               [12] 1606 	mov	r2,a
      000546 E4               [12] 1607 	clr	a
      000547 35 F0            [12] 1608 	addc	a,b
      000549 FB               [12] 1609 	mov	r3,a
      00054A 8A 00            [24] 1610 	mov	ar0,r2
      00054C 8B 01            [24] 1611 	mov	ar1,r3
      00054E 7A 00            [12] 1612 	mov	r2,#0x00
      000550 7B 00            [12] 1613 	mov	r3,#0x00
      000552 88 82            [24] 1614 	mov	dpl,r0
      000554 89 83            [24] 1615 	mov	dph,r1
      000556 8A F0            [24] 1616 	mov	b,r2
      000558 EB               [12] 1617 	mov	a,r3
      000559 12r00r00         [24] 1618 	lcall	__delay_ms
                                   1619 ;	./N76_UCS1903.c:248: setAll(0, 0, 0);
      00055C 75*0C 00         [24] 1620 	mov	_setAll_PARM_2,#0x00
      00055F 75*0D 00         [24] 1621 	mov	_setAll_PARM_3,#0x00
      000562 75 82 00         [24] 1622 	mov	dpl,#0x00
      000565 12r02r13         [24] 1623 	lcall	_setAll
                                   1624 ;	./N76_UCS1903.c:249: showStrip();
      000568 12r01r4A         [24] 1625 	lcall	_showStrip
                                   1626 ;	./N76_UCS1903.c:250: _delay_ms(DELAY2);
      00056B 85*00*00         [24] 1627 	mov	__divuint_PARM_2,_NUM_LEDS
      00056E 85*01*01         [24] 1628 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      000571 90 00 C8         [24] 1629 	mov	dptr,#0x00c8
      000574 12r00r00         [24] 1630 	lcall	__divuint
      000577 85*02*00         [24] 1631 	mov	__mulint_PARM_2,__delay
      00057A 85*03*01         [24] 1632 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      00057D 12r00r00         [24] 1633 	lcall	__mulint
      000580 75*00 64         [24] 1634 	mov	__divuint_PARM_2,#0x64
      000583 75*01 00         [24] 1635 	mov	(__divuint_PARM_2 + 1),#0x00
      000586 12r00r00         [24] 1636 	lcall	__divuint
      000589 E5 82            [12] 1637 	mov	a,dpl
      00058B 85 83 F0         [24] 1638 	mov	b,dph
      00058E 24 01            [12] 1639 	add	a,#0x01
      000590 FA               [12] 1640 	mov	r2,a
      000591 E4               [12] 1641 	clr	a
      000592 35 F0            [12] 1642 	addc	a,b
      000594 FB               [12] 1643 	mov	r3,a
      000595 8A 00            [24] 1644 	mov	ar0,r2
      000597 8B 01            [24] 1645 	mov	ar1,r3
      000599 7A 00            [12] 1646 	mov	r2,#0x00
      00059B 7B 00            [12] 1647 	mov	r3,#0x00
      00059D 88 82            [24] 1648 	mov	dpl,r0
      00059F 89 83            [24] 1649 	mov	dph,r1
      0005A1 8A F0            [24] 1650 	mov	b,r2
      0005A3 EB               [12] 1651 	mov	a,r3
      0005A4 12r00r00         [24] 1652 	lcall	__delay_ms
      0005A7 D0 04            [24] 1653 	pop	ar4
      0005A9 D0 05            [24] 1654 	pop	ar5
      0005AB D0 06            [24] 1655 	pop	ar6
      0005AD D0 07            [24] 1656 	pop	ar7
                                   1657 ;	./N76_UCS1903.c:242: for (int16_t j = 0; j < StrobeCount; j++)
      0005AF 0C               [12] 1658 	inc	r4
      0005B0 BC 00 01         [24] 1659 	cjne	r4,#0x00,00123$
      0005B3 0D               [12] 1660 	inc	r5
      0005B4                       1661 00123$:
      0005B4 02r04rEC         [24] 1662 	ljmp	00105$
      0005B7                       1663 00103$:
                                   1664 ;	./N76_UCS1903.c:252: _delay_ms(EndPause);
      0005B7 AC*1C            [24] 1665 	mov	r4,_Strobe_PARM_6
      0005B9 E5*1D            [12] 1666 	mov	a,(_Strobe_PARM_6 + 1)
      0005BB FD               [12] 1667 	mov	r5,a
      0005BC 33               [12] 1668 	rlc	a
      0005BD 95 E0            [12] 1669 	subb	a,acc
      0005BF FE               [12] 1670 	mov	r6,a
      0005C0 8C 82            [24] 1671 	mov	dpl,r4
      0005C2 8D 83            [24] 1672 	mov	dph,r5
      0005C4 8E F0            [24] 1673 	mov	b,r6
                                   1674 ;	./N76_UCS1903.c:253: }
      0005C6 02r00r00         [24] 1675 	ljmp	__delay_ms
                                   1676 ;------------------------------------------------------------
                                   1677 ;Allocation info for local variables in function 'CylonBounce'
                                   1678 ;------------------------------------------------------------
                                   1679 ;red                       Allocated with name '_CylonBounce_PARM_2'
                                   1680 ;blue                      Allocated with name '_CylonBounce_PARM_3'
                                   1681 ;EyeSize                   Allocated with name '_CylonBounce_PARM_4'
                                   1682 ;SpeedDelay                Allocated with name '_CylonBounce_PARM_5'
                                   1683 ;ReturnDelay               Allocated with name '_CylonBounce_PARM_6'
                                   1684 ;green                     Allocated with name '_CylonBounce_green_65536_112'
                                   1685 ;curEffect                 Allocated with name '_CylonBounce_curEffect_65536_113'
                                   1686 ;i                         Allocated with name '_CylonBounce_i_131072_114'
                                   1687 ;j                         Allocated to registers r5 r7 
                                   1688 ;i                         Allocated to registers 
                                   1689 ;j                         Allocated with name '_CylonBounce_j_262144_121'
                                   1690 ;sloc0                     Allocated with name '_CylonBounce_sloc0_1_0'
                                   1691 ;sloc1                     Allocated with name '_CylonBounce_sloc1_1_0'
                                   1692 ;------------------------------------------------------------
                                   1693 ;	./N76_UCS1903.c:255: void CylonBounce(uint8_t green, uint8_t red, uint8_t blue, int16_t EyeSize, int16_t SpeedDelay, int16_t ReturnDelay)
                                   1694 ;	-----------------------------------------
                                   1695 ;	 function CylonBounce
                                   1696 ;	-----------------------------------------
      0005C9                       1697 _CylonBounce:
      0005C9 85 82*26         [24] 1698 	mov	_CylonBounce_green_65536_112,dpl
                                   1699 ;	./N76_UCS1903.c:257: uint8_t curEffect = effect;
      0005CC 85*04*27         [24] 1700 	mov	_CylonBounce_curEffect_65536_113,_effect
                                   1701 ;	./N76_UCS1903.c:258: for (int16_t i = 0; i < NUM_LEDS - EyeSize - 2; i++)
      0005CF E4               [12] 1702 	clr	a
      0005D0 F5*28            [12] 1703 	mov	_CylonBounce_i_131072_114,a
      0005D2 F5*29            [12] 1704 	mov	(_CylonBounce_i_131072_114 + 1),a
      0005D4                       1705 00113$:
      0005D4 AA*20            [24] 1706 	mov	r2,_CylonBounce_PARM_4
      0005D6 AB*21            [24] 1707 	mov	r3,(_CylonBounce_PARM_4 + 1)
      0005D8 E5*00            [12] 1708 	mov	a,_NUM_LEDS
      0005DA C3               [12] 1709 	clr	c
      0005DB 9A               [12] 1710 	subb	a,r2
      0005DC F8               [12] 1711 	mov	r0,a
      0005DD E5*01            [12] 1712 	mov	a,(_NUM_LEDS + 1)
      0005DF 9B               [12] 1713 	subb	a,r3
      0005E0 F9               [12] 1714 	mov	r1,a
      0005E1 E8               [12] 1715 	mov	a,r0
      0005E2 24 FE            [12] 1716 	add	a,#0xfe
      0005E4 F8               [12] 1717 	mov	r0,a
      0005E5 E9               [12] 1718 	mov	a,r1
      0005E6 34 FF            [12] 1719 	addc	a,#0xff
      0005E8 F9               [12] 1720 	mov	r1,a
      0005E9 AE*28            [24] 1721 	mov	r6,_CylonBounce_i_131072_114
      0005EB AF*29            [24] 1722 	mov	r7,(_CylonBounce_i_131072_114 + 1)
      0005ED C3               [12] 1723 	clr	c
      0005EE EE               [12] 1724 	mov	a,r6
      0005EF 98               [12] 1725 	subb	a,r0
      0005F0 EF               [12] 1726 	mov	a,r7
      0005F1 99               [12] 1727 	subb	a,r1
      0005F2 40 03            [24] 1728 	jc	00163$
      0005F4 02r07r0F         [24] 1729 	ljmp	00104$
      0005F7                       1730 00163$:
                                   1731 ;	./N76_UCS1903.c:260: setAll(0, 0, 0);
      0005F7 75*0C 00         [24] 1732 	mov	_setAll_PARM_2,#0x00
      0005FA 75*0D 00         [24] 1733 	mov	_setAll_PARM_3,#0x00
      0005FD 75 82 00         [24] 1734 	mov	dpl,#0x00
      000600 12r02r13         [24] 1735 	lcall	_setAll
                                   1736 ;	./N76_UCS1903.c:261: setPixel(i, red / 10, green / 10, blue / 10);
      000603 AE*1E            [24] 1737 	mov	r6,_CylonBounce_PARM_2
      000605 7F 00            [12] 1738 	mov	r7,#0x00
      000607 75*00 0A         [24] 1739 	mov	__divsint_PARM_2,#0x0a
                                   1740 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00060A 8F*01            [24] 1741 	mov	(__divsint_PARM_2 + 1),r7
      00060C 8E 82            [24] 1742 	mov	dpl,r6
      00060E 8F 83            [24] 1743 	mov	dph,r7
      000610 12r00r00         [24] 1744 	lcall	__divsint
      000613 AE 82            [24] 1745 	mov	r6,dpl
      000615 A9*26            [24] 1746 	mov	r1,_CylonBounce_green_65536_112
      000617 7F 00            [12] 1747 	mov	r7,#0x00
      000619 75*00 0A         [24] 1748 	mov	__divsint_PARM_2,#0x0a
                                   1749 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00061C 8F*01            [24] 1750 	mov	(__divsint_PARM_2 + 1),r7
      00061E 89 82            [24] 1751 	mov	dpl,r1
      000620 8F 83            [24] 1752 	mov	dph,r7
      000622 C0 06            [24] 1753 	push	ar6
      000624 12r00r00         [24] 1754 	lcall	__divsint
      000627 A9 82            [24] 1755 	mov	r1,dpl
      000629 A8*1F            [24] 1756 	mov	r0,_CylonBounce_PARM_3
      00062B 7F 00            [12] 1757 	mov	r7,#0x00
      00062D 75*00 0A         [24] 1758 	mov	__divsint_PARM_2,#0x0a
                                   1759 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      000630 8F*01            [24] 1760 	mov	(__divsint_PARM_2 + 1),r7
      000632 88 82            [24] 1761 	mov	dpl,r0
      000634 8F 83            [24] 1762 	mov	dph,r7
      000636 C0 01            [24] 1763 	push	ar1
      000638 12r00r00         [24] 1764 	lcall	__divsint
      00063B A8 82            [24] 1765 	mov	r0,dpl
      00063D D0 01            [24] 1766 	pop	ar1
      00063F D0 06            [24] 1767 	pop	ar6
      000641 8E*09            [24] 1768 	mov	_setPixel_PARM_2,r6
      000643 89*0A            [24] 1769 	mov	_setPixel_PARM_3,r1
      000645 88*0B            [24] 1770 	mov	_setPixel_PARM_4,r0
      000647 85*28 82         [24] 1771 	mov	dpl,_CylonBounce_i_131072_114
      00064A 85*29 83         [24] 1772 	mov	dph,(_CylonBounce_i_131072_114 + 1)
      00064D C0 06            [24] 1773 	push	ar6
      00064F C0 01            [24] 1774 	push	ar1
      000651 C0 00            [24] 1775 	push	ar0
      000653 12r01rC9         [24] 1776 	lcall	_setPixel
      000656 D0 00            [24] 1777 	pop	ar0
      000658 D0 01            [24] 1778 	pop	ar1
      00065A D0 06            [24] 1779 	pop	ar6
                                   1780 ;	./N76_UCS1903.c:262: for (int16_t j = 1; j <= EyeSize; j++)
      00065C 7D 01            [12] 1781 	mov	r5,#0x01
      00065E 7F 00            [12] 1782 	mov	r7,#0x00
      000660                       1783 00110$:
      000660 C3               [12] 1784 	clr	c
      000661 E5*20            [12] 1785 	mov	a,_CylonBounce_PARM_4
      000663 9D               [12] 1786 	subb	a,r5
      000664 E5*21            [12] 1787 	mov	a,(_CylonBounce_PARM_4 + 1)
      000666 64 80            [12] 1788 	xrl	a,#0x80
      000668 8F F0            [24] 1789 	mov	b,r7
      00066A 63 F0 80         [24] 1790 	xrl	b,#0x80
      00066D 95 F0            [12] 1791 	subb	a,b
      00066F 40 3C            [24] 1792 	jc	00103$
                                   1793 ;	./N76_UCS1903.c:264: if (curEffect != effect) {_status=STT_NEW;return;}
      000671 E5*04            [12] 1794 	mov	a,_effect
      000673 B5*27 02         [24] 1795 	cjne	a,_CylonBounce_curEffect_65536_113,00165$
      000676 80 04            [24] 1796 	sjmp	00102$
      000678                       1797 00165$:
      000678 75*05 12         [24] 1798 	mov	__status,#0x12
      00067B 22               [24] 1799 	ret
      00067C                       1800 00102$:
                                   1801 ;	./N76_UCS1903.c:265: setPixel(i + j, green, red, blue);
      00067C ED               [12] 1802 	mov	a,r5
      00067D 25*28            [12] 1803 	add	a,_CylonBounce_i_131072_114
      00067F F5 82            [12] 1804 	mov	dpl,a
      000681 EF               [12] 1805 	mov	a,r7
      000682 35*29            [12] 1806 	addc	a,(_CylonBounce_i_131072_114 + 1)
      000684 F5 83            [12] 1807 	mov	dph,a
      000686 85*26*09         [24] 1808 	mov	_setPixel_PARM_2,_CylonBounce_green_65536_112
      000689 85*1E*0A         [24] 1809 	mov	_setPixel_PARM_3,_CylonBounce_PARM_2
      00068C 85*1F*0B         [24] 1810 	mov	_setPixel_PARM_4,_CylonBounce_PARM_3
      00068F C0 07            [24] 1811 	push	ar7
      000691 C0 06            [24] 1812 	push	ar6
      000693 C0 05            [24] 1813 	push	ar5
      000695 C0 01            [24] 1814 	push	ar1
      000697 C0 00            [24] 1815 	push	ar0
      000699 12r01rC9         [24] 1816 	lcall	_setPixel
      00069C D0 00            [24] 1817 	pop	ar0
      00069E D0 01            [24] 1818 	pop	ar1
      0006A0 D0 05            [24] 1819 	pop	ar5
      0006A2 D0 06            [24] 1820 	pop	ar6
      0006A4 D0 07            [24] 1821 	pop	ar7
                                   1822 ;	./N76_UCS1903.c:262: for (int16_t j = 1; j <= EyeSize; j++)
      0006A6 0D               [12] 1823 	inc	r5
      0006A7 BD 00 B6         [24] 1824 	cjne	r5,#0x00,00110$
      0006AA 0F               [12] 1825 	inc	r7
      0006AB 80 B3            [24] 1826 	sjmp	00110$
      0006AD                       1827 00103$:
                                   1828 ;	./N76_UCS1903.c:267: setPixel(i + EyeSize + 1, red / 10, green / 10, blue / 10);
      0006AD E5*20            [12] 1829 	mov	a,_CylonBounce_PARM_4
      0006AF 25*28            [12] 1830 	add	a,_CylonBounce_i_131072_114
      0006B1 FD               [12] 1831 	mov	r5,a
      0006B2 E5*21            [12] 1832 	mov	a,(_CylonBounce_PARM_4 + 1)
      0006B4 35*29            [12] 1833 	addc	a,(_CylonBounce_i_131072_114 + 1)
      0006B6 FF               [12] 1834 	mov	r7,a
      0006B7 0D               [12] 1835 	inc	r5
      0006B8 BD 00 01         [24] 1836 	cjne	r5,#0x00,00167$
      0006BB 0F               [12] 1837 	inc	r7
      0006BC                       1838 00167$:
      0006BC 8D 82            [24] 1839 	mov	dpl,r5
      0006BE 8F 83            [24] 1840 	mov	dph,r7
      0006C0 8E*09            [24] 1841 	mov	_setPixel_PARM_2,r6
      0006C2 89*0A            [24] 1842 	mov	_setPixel_PARM_3,r1
      0006C4 88*0B            [24] 1843 	mov	_setPixel_PARM_4,r0
      0006C6 12r01rC9         [24] 1844 	lcall	_setPixel
                                   1845 ;	./N76_UCS1903.c:268: showStrip();
      0006C9 12r01r4A         [24] 1846 	lcall	_showStrip
                                   1847 ;	./N76_UCS1903.c:269: _delay_ms(DELAY2);
      0006CC 85*00*00         [24] 1848 	mov	__divuint_PARM_2,_NUM_LEDS
      0006CF 85*01*01         [24] 1849 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      0006D2 90 00 C8         [24] 1850 	mov	dptr,#0x00c8
      0006D5 12r00r00         [24] 1851 	lcall	__divuint
      0006D8 85*02*00         [24] 1852 	mov	__mulint_PARM_2,__delay
      0006DB 85*03*01         [24] 1853 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      0006DE 12r00r00         [24] 1854 	lcall	__mulint
      0006E1 75*00 64         [24] 1855 	mov	__divuint_PARM_2,#0x64
      0006E4 75*01 00         [24] 1856 	mov	(__divuint_PARM_2 + 1),#0x00
      0006E7 12r00r00         [24] 1857 	lcall	__divuint
      0006EA E5 82            [12] 1858 	mov	a,dpl
      0006EC 85 83 F0         [24] 1859 	mov	b,dph
      0006EF 24 01            [12] 1860 	add	a,#0x01
      0006F1 FE               [12] 1861 	mov	r6,a
      0006F2 E4               [12] 1862 	clr	a
      0006F3 35 F0            [12] 1863 	addc	a,b
      0006F5 FF               [12] 1864 	mov	r7,a
      0006F6 7D 00            [12] 1865 	mov	r5,#0x00
      0006F8 7C 00            [12] 1866 	mov	r4,#0x00
      0006FA 8E 82            [24] 1867 	mov	dpl,r6
      0006FC 8F 83            [24] 1868 	mov	dph,r7
      0006FE 8D F0            [24] 1869 	mov	b,r5
      000700 EC               [12] 1870 	mov	a,r4
      000701 12r00r00         [24] 1871 	lcall	__delay_ms
                                   1872 ;	./N76_UCS1903.c:258: for (int16_t i = 0; i < NUM_LEDS - EyeSize - 2; i++)
      000704 05*28            [12] 1873 	inc	_CylonBounce_i_131072_114
      000706 E4               [12] 1874 	clr	a
      000707 B5*28 02         [24] 1875 	cjne	a,_CylonBounce_i_131072_114,00168$
      00070A 05*29            [12] 1876 	inc	(_CylonBounce_i_131072_114 + 1)
      00070C                       1877 00168$:
      00070C 02r05rD4         [24] 1878 	ljmp	00113$
      00070F                       1879 00104$:
                                   1880 ;	./N76_UCS1903.c:272: _delay_ms(ReturnDelay);
      00070F AC*24            [24] 1881 	mov	r4,_CylonBounce_PARM_6
      000711 E5*25            [12] 1882 	mov	a,(_CylonBounce_PARM_6 + 1)
      000713 FD               [12] 1883 	mov	r5,a
      000714 33               [12] 1884 	rlc	a
      000715 95 E0            [12] 1885 	subb	a,acc
      000717 FE               [12] 1886 	mov	r6,a
      000718 FF               [12] 1887 	mov	r7,a
      000719 8C 82            [24] 1888 	mov	dpl,r4
      00071B 8D 83            [24] 1889 	mov	dph,r5
      00071D 8E F0            [24] 1890 	mov	b,r6
      00071F C0 07            [24] 1891 	push	ar7
      000721 C0 06            [24] 1892 	push	ar6
      000723 C0 05            [24] 1893 	push	ar5
      000725 C0 04            [24] 1894 	push	ar4
      000727 C0 03            [24] 1895 	push	ar3
      000729 C0 02            [24] 1896 	push	ar2
      00072B 12r00r00         [24] 1897 	lcall	__delay_ms
      00072E D0 02            [24] 1898 	pop	ar2
      000730 D0 03            [24] 1899 	pop	ar3
      000732 D0 04            [24] 1900 	pop	ar4
      000734 D0 05            [24] 1901 	pop	ar5
      000736 D0 06            [24] 1902 	pop	ar6
      000738 D0 07            [24] 1903 	pop	ar7
                                   1904 ;	./N76_UCS1903.c:274: for (int16_t i = NUM_LEDS - EyeSize - 2; i > 0; i--)
      00073A E5*00            [12] 1905 	mov	a,_NUM_LEDS
      00073C C3               [12] 1906 	clr	c
      00073D 9A               [12] 1907 	subb	a,r2
      00073E FA               [12] 1908 	mov	r2,a
      00073F E5*01            [12] 1909 	mov	a,(_NUM_LEDS + 1)
      000741 9B               [12] 1910 	subb	a,r3
      000742 FB               [12] 1911 	mov	r3,a
      000743 EA               [12] 1912 	mov	a,r2
      000744 24 FE            [12] 1913 	add	a,#0xfe
      000746 FA               [12] 1914 	mov	r2,a
      000747 EB               [12] 1915 	mov	a,r3
      000748 34 FF            [12] 1916 	addc	a,#0xff
      00074A FB               [12] 1917 	mov	r3,a
      00074B                       1918 00119$:
      00074B 8A 00            [24] 1919 	mov	ar0,r2
      00074D 8B 01            [24] 1920 	mov	ar1,r3
      00074F C3               [12] 1921 	clr	c
      000750 E4               [12] 1922 	clr	a
      000751 98               [12] 1923 	subb	a,r0
      000752 74 80            [12] 1924 	mov	a,#(0x00 ^ 0x80)
      000754 89 F0            [24] 1925 	mov	b,r1
      000756 63 F0 80         [24] 1926 	xrl	b,#0x80
      000759 95 F0            [12] 1927 	subb	a,b
      00075B 40 03            [24] 1928 	jc	00169$
      00075D 02r09r3E         [24] 1929 	ljmp	00108$
      000760                       1930 00169$:
                                   1931 ;	./N76_UCS1903.c:276: setAll(0, 0, 0);
      000760 C0 04            [24] 1932 	push	ar4
      000762 C0 05            [24] 1933 	push	ar5
      000764 C0 06            [24] 1934 	push	ar6
      000766 C0 07            [24] 1935 	push	ar7
      000768 75*0C 00         [24] 1936 	mov	_setAll_PARM_2,#0x00
      00076B 75*0D 00         [24] 1937 	mov	_setAll_PARM_3,#0x00
      00076E 75 82 00         [24] 1938 	mov	dpl,#0x00
      000771 C0 07            [24] 1939 	push	ar7
      000773 C0 06            [24] 1940 	push	ar6
      000775 C0 05            [24] 1941 	push	ar5
      000777 C0 04            [24] 1942 	push	ar4
      000779 C0 03            [24] 1943 	push	ar3
      00077B C0 02            [24] 1944 	push	ar2
      00077D 12r02r13         [24] 1945 	lcall	_setAll
                                   1946 ;	./N76_UCS1903.c:277: setPixel(i, red / 10, green / 10, blue / 10);
      000780 A8*1E            [24] 1947 	mov	r0,_CylonBounce_PARM_2
      000782 79 00            [12] 1948 	mov	r1,#0x00
      000784 75*00 0A         [24] 1949 	mov	__divsint_PARM_2,#0x0a
                                   1950 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      000787 89*01            [24] 1951 	mov	(__divsint_PARM_2 + 1),r1
      000789 88 82            [24] 1952 	mov	dpl,r0
      00078B 89 83            [24] 1953 	mov	dph,r1
      00078D 12r00r00         [24] 1954 	lcall	__divsint
      000790 A8 82            [24] 1955 	mov	r0,dpl
      000792 D0 02            [24] 1956 	pop	ar2
      000794 D0 03            [24] 1957 	pop	ar3
      000796 D0 04            [24] 1958 	pop	ar4
      000798 D0 05            [24] 1959 	pop	ar5
      00079A D0 06            [24] 1960 	pop	ar6
      00079C D0 07            [24] 1961 	pop	ar7
      00079E A9*26            [24] 1962 	mov	r1,_CylonBounce_green_65536_112
      0007A0 7F 00            [12] 1963 	mov	r7,#0x00
      0007A2 75*00 0A         [24] 1964 	mov	__divsint_PARM_2,#0x0a
                                   1965 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0007A5 8F*01            [24] 1966 	mov	(__divsint_PARM_2 + 1),r7
      0007A7 89 82            [24] 1967 	mov	dpl,r1
      0007A9 8F 83            [24] 1968 	mov	dph,r7
      0007AB C0 05            [24] 1969 	push	ar5
      0007AD C0 04            [24] 1970 	push	ar4
      0007AF C0 03            [24] 1971 	push	ar3
      0007B1 C0 02            [24] 1972 	push	ar2
      0007B3 C0 00            [24] 1973 	push	ar0
      0007B5 12r00r00         [24] 1974 	lcall	__divsint
      0007B8 AE 82            [24] 1975 	mov	r6,dpl
      0007BA 8E*2C            [24] 1976 	mov	_CylonBounce_sloc0_1_0,r6
      0007BC AE*1F            [24] 1977 	mov	r6,_CylonBounce_PARM_3
      0007BE 7F 00            [12] 1978 	mov	r7,#0x00
      0007C0 75*00 0A         [24] 1979 	mov	__divsint_PARM_2,#0x0a
                                   1980 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0007C3 8F*01            [24] 1981 	mov	(__divsint_PARM_2 + 1),r7
      0007C5 8E 82            [24] 1982 	mov	dpl,r6
      0007C7 8F 83            [24] 1983 	mov	dph,r7
      0007C9 12r00r00         [24] 1984 	lcall	__divsint
      0007CC AE 82            [24] 1985 	mov	r6,dpl
      0007CE AF 83            [24] 1986 	mov	r7,dph
      0007D0 D0 00            [24] 1987 	pop	ar0
      0007D2 D0 02            [24] 1988 	pop	ar2
      0007D4 D0 03            [24] 1989 	pop	ar3
      0007D6 D0 04            [24] 1990 	pop	ar4
      0007D8 D0 05            [24] 1991 	pop	ar5
      0007DA 8E*2D            [24] 1992 	mov	_CylonBounce_sloc1_1_0,r6
      0007DC 88*09            [24] 1993 	mov	_setPixel_PARM_2,r0
      0007DE 85*2C*0A         [24] 1994 	mov	_setPixel_PARM_3,_CylonBounce_sloc0_1_0
      0007E1 85*2D*0B         [24] 1995 	mov	_setPixel_PARM_4,_CylonBounce_sloc1_1_0
      0007E4 8A 82            [24] 1996 	mov	dpl,r2
      0007E6 8B 83            [24] 1997 	mov	dph,r3
      0007E8 C0 07            [24] 1998 	push	ar7
      0007EA C0 06            [24] 1999 	push	ar6
      0007EC C0 05            [24] 2000 	push	ar5
      0007EE C0 04            [24] 2001 	push	ar4
      0007F0 C0 03            [24] 2002 	push	ar3
      0007F2 C0 02            [24] 2003 	push	ar2
      0007F4 C0 00            [24] 2004 	push	ar0
      0007F6 12r01rC9         [24] 2005 	lcall	_setPixel
      0007F9 D0 00            [24] 2006 	pop	ar0
      0007FB D0 02            [24] 2007 	pop	ar2
      0007FD D0 03            [24] 2008 	pop	ar3
      0007FF D0 04            [24] 2009 	pop	ar4
      000801 D0 05            [24] 2010 	pop	ar5
      000803 D0 06            [24] 2011 	pop	ar6
      000805 D0 07            [24] 2012 	pop	ar7
                                   2013 ;	./N76_UCS1903.c:278: for (int16_t j = 1; j <= EyeSize; j++)
      000807 75*2A 01         [24] 2014 	mov	_CylonBounce_j_262144_121,#0x01
      00080A 75*2B 00         [24] 2015 	mov	(_CylonBounce_j_262144_121 + 1),#0x00
                                   2016 ;	./N76_UCS1903.c:288: _delay_ms(ReturnDelay);
      00080D D0 07            [24] 2017 	pop	ar7
      00080F D0 06            [24] 2018 	pop	ar6
      000811 D0 05            [24] 2019 	pop	ar5
      000813 D0 04            [24] 2020 	pop	ar4
                                   2021 ;	./N76_UCS1903.c:278: for (int16_t j = 1; j <= EyeSize; j++)
      000815                       2022 00116$:
      000815 C3               [12] 2023 	clr	c
      000816 E5*20            [12] 2024 	mov	a,_CylonBounce_PARM_4
      000818 95*2A            [12] 2025 	subb	a,_CylonBounce_j_262144_121
      00081A E5*21            [12] 2026 	mov	a,(_CylonBounce_PARM_4 + 1)
      00081C 64 80            [12] 2027 	xrl	a,#0x80
      00081E 85*2B F0         [24] 2028 	mov	b,(_CylonBounce_j_262144_121 + 1)
      000821 63 F0 80         [24] 2029 	xrl	b,#0x80
      000824 95 F0            [12] 2030 	subb	a,b
      000826 40 47            [24] 2031 	jc	00107$
                                   2032 ;	./N76_UCS1903.c:280: if (curEffect != effect) {_status=STT_NEW;return;}
      000828 E5*04            [12] 2033 	mov	a,_effect
      00082A B5*27 02         [24] 2034 	cjne	a,_CylonBounce_curEffect_65536_113,00171$
      00082D 80 04            [24] 2035 	sjmp	00106$
      00082F                       2036 00171$:
      00082F 75*05 12         [24] 2037 	mov	__status,#0x12
      000832 22               [24] 2038 	ret
      000833                       2039 00106$:
                                   2040 ;	./N76_UCS1903.c:281: setPixel(i + j, green, red, blue);
      000833 E5*2A            [12] 2041 	mov	a,_CylonBounce_j_262144_121
      000835 2A               [12] 2042 	add	a,r2
      000836 F5 82            [12] 2043 	mov	dpl,a
      000838 E5*2B            [12] 2044 	mov	a,(_CylonBounce_j_262144_121 + 1)
      00083A 3B               [12] 2045 	addc	a,r3
      00083B F5 83            [12] 2046 	mov	dph,a
      00083D 85*26*09         [24] 2047 	mov	_setPixel_PARM_2,_CylonBounce_green_65536_112
      000840 85*1E*0A         [24] 2048 	mov	_setPixel_PARM_3,_CylonBounce_PARM_2
      000843 85*1F*0B         [24] 2049 	mov	_setPixel_PARM_4,_CylonBounce_PARM_3
      000846 C0 07            [24] 2050 	push	ar7
      000848 C0 06            [24] 2051 	push	ar6
      00084A C0 05            [24] 2052 	push	ar5
      00084C C0 04            [24] 2053 	push	ar4
      00084E C0 03            [24] 2054 	push	ar3
      000850 C0 02            [24] 2055 	push	ar2
      000852 C0 00            [24] 2056 	push	ar0
      000854 12r01rC9         [24] 2057 	lcall	_setPixel
      000857 D0 00            [24] 2058 	pop	ar0
      000859 D0 02            [24] 2059 	pop	ar2
      00085B D0 03            [24] 2060 	pop	ar3
      00085D D0 04            [24] 2061 	pop	ar4
      00085F D0 05            [24] 2062 	pop	ar5
      000861 D0 06            [24] 2063 	pop	ar6
      000863 D0 07            [24] 2064 	pop	ar7
                                   2065 ;	./N76_UCS1903.c:278: for (int16_t j = 1; j <= EyeSize; j++)
      000865 05*2A            [12] 2066 	inc	_CylonBounce_j_262144_121
      000867 E4               [12] 2067 	clr	a
      000868 B5*2A AA         [24] 2068 	cjne	a,_CylonBounce_j_262144_121,00116$
      00086B 05*2B            [12] 2069 	inc	(_CylonBounce_j_262144_121 + 1)
      00086D 80 A6            [24] 2070 	sjmp	00116$
      00086F                       2071 00107$:
                                   2072 ;	./N76_UCS1903.c:283: setPixel(i + EyeSize + 1, red / 10, green / 10, blue / 10);
      00086F C0 04            [24] 2073 	push	ar4
      000871 C0 05            [24] 2074 	push	ar5
      000873 C0 06            [24] 2075 	push	ar6
      000875 C0 07            [24] 2076 	push	ar7
      000877 E5*20            [12] 2077 	mov	a,_CylonBounce_PARM_4
      000879 2A               [12] 2078 	add	a,r2
      00087A F9               [12] 2079 	mov	r1,a
      00087B E5*21            [12] 2080 	mov	a,(_CylonBounce_PARM_4 + 1)
      00087D 3B               [12] 2081 	addc	a,r3
      00087E FF               [12] 2082 	mov	r7,a
      00087F 09               [12] 2083 	inc	r1
      000880 B9 00 01         [24] 2084 	cjne	r1,#0x00,00173$
      000883 0F               [12] 2085 	inc	r7
      000884                       2086 00173$:
      000884 89 82            [24] 2087 	mov	dpl,r1
      000886 8F 83            [24] 2088 	mov	dph,r7
      000888 88*09            [24] 2089 	mov	_setPixel_PARM_2,r0
      00088A 85*2C*0A         [24] 2090 	mov	_setPixel_PARM_3,_CylonBounce_sloc0_1_0
      00088D 85*2D*0B         [24] 2091 	mov	_setPixel_PARM_4,_CylonBounce_sloc1_1_0
      000890 C0 07            [24] 2092 	push	ar7
      000892 C0 06            [24] 2093 	push	ar6
      000894 C0 05            [24] 2094 	push	ar5
      000896 C0 04            [24] 2095 	push	ar4
      000898 C0 03            [24] 2096 	push	ar3
      00089A C0 02            [24] 2097 	push	ar2
      00089C 12r01rC9         [24] 2098 	lcall	_setPixel
                                   2099 ;	./N76_UCS1903.c:284: showStrip();
      00089F 12r01r4A         [24] 2100 	lcall	_showStrip
                                   2101 ;	./N76_UCS1903.c:285: _delay_ms(DELAY2);
      0008A2 85*00*00         [24] 2102 	mov	__divuint_PARM_2,_NUM_LEDS
      0008A5 85*01*01         [24] 2103 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      0008A8 90 00 C8         [24] 2104 	mov	dptr,#0x00c8
      0008AB 12r00r00         [24] 2105 	lcall	__divuint
      0008AE D0 02            [24] 2106 	pop	ar2
      0008B0 D0 03            [24] 2107 	pop	ar3
      0008B2 D0 04            [24] 2108 	pop	ar4
      0008B4 D0 05            [24] 2109 	pop	ar5
      0008B6 D0 06            [24] 2110 	pop	ar6
      0008B8 D0 07            [24] 2111 	pop	ar7
      0008BA 85*02*00         [24] 2112 	mov	__mulint_PARM_2,__delay
      0008BD 85*03*01         [24] 2113 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      0008C0 C0 05            [24] 2114 	push	ar5
      0008C2 C0 04            [24] 2115 	push	ar4
      0008C4 C0 03            [24] 2116 	push	ar3
      0008C6 C0 02            [24] 2117 	push	ar2
      0008C8 12r00r00         [24] 2118 	lcall	__mulint
      0008CB AE 82            [24] 2119 	mov	r6,dpl
      0008CD AF 83            [24] 2120 	mov	r7,dph
      0008CF D0 02            [24] 2121 	pop	ar2
      0008D1 D0 03            [24] 2122 	pop	ar3
      0008D3 D0 04            [24] 2123 	pop	ar4
      0008D5 D0 05            [24] 2124 	pop	ar5
      0008D7 8E 82            [24] 2125 	mov	dpl,r6
      0008D9 8F 83            [24] 2126 	mov	dph,r7
      0008DB 75*00 64         [24] 2127 	mov	__divuint_PARM_2,#0x64
      0008DE 75*01 00         [24] 2128 	mov	(__divuint_PARM_2 + 1),#0x00
      0008E1 C0 07            [24] 2129 	push	ar7
      0008E3 C0 06            [24] 2130 	push	ar6
      0008E5 C0 05            [24] 2131 	push	ar5
      0008E7 C0 04            [24] 2132 	push	ar4
      0008E9 C0 03            [24] 2133 	push	ar3
      0008EB C0 02            [24] 2134 	push	ar2
      0008ED 12r00r00         [24] 2135 	lcall	__divuint
      0008F0 E5 82            [12] 2136 	mov	a,dpl
      0008F2 85 83 F0         [24] 2137 	mov	b,dph
      0008F5 D0 02            [24] 2138 	pop	ar2
      0008F7 D0 03            [24] 2139 	pop	ar3
      0008F9 D0 04            [24] 2140 	pop	ar4
      0008FB D0 05            [24] 2141 	pop	ar5
      0008FD D0 06            [24] 2142 	pop	ar6
      0008FF D0 07            [24] 2143 	pop	ar7
      000901 24 01            [12] 2144 	add	a,#0x01
      000903 FE               [12] 2145 	mov	r6,a
      000904 E4               [12] 2146 	clr	a
      000905 35 F0            [12] 2147 	addc	a,b
      000907 FF               [12] 2148 	mov	r7,a
      000908 7D 00            [12] 2149 	mov	r5,#0x00
      00090A 7C 00            [12] 2150 	mov	r4,#0x00
      00090C 8E 82            [24] 2151 	mov	dpl,r6
      00090E 8F 83            [24] 2152 	mov	dph,r7
      000910 8D F0            [24] 2153 	mov	b,r5
      000912 EC               [12] 2154 	mov	a,r4
      000913 C0 07            [24] 2155 	push	ar7
      000915 C0 06            [24] 2156 	push	ar6
      000917 C0 05            [24] 2157 	push	ar5
      000919 C0 04            [24] 2158 	push	ar4
      00091B C0 03            [24] 2159 	push	ar3
      00091D C0 02            [24] 2160 	push	ar2
      00091F 12r00r00         [24] 2161 	lcall	__delay_ms
      000922 D0 02            [24] 2162 	pop	ar2
      000924 D0 03            [24] 2163 	pop	ar3
      000926 D0 04            [24] 2164 	pop	ar4
      000928 D0 05            [24] 2165 	pop	ar5
      00092A D0 06            [24] 2166 	pop	ar6
      00092C D0 07            [24] 2167 	pop	ar7
                                   2168 ;	./N76_UCS1903.c:274: for (int16_t i = NUM_LEDS - EyeSize - 2; i > 0; i--)
      00092E 1A               [12] 2169 	dec	r2
      00092F BA FF 01         [24] 2170 	cjne	r2,#0xff,00174$
      000932 1B               [12] 2171 	dec	r3
      000933                       2172 00174$:
      000933 D0 07            [24] 2173 	pop	ar7
      000935 D0 06            [24] 2174 	pop	ar6
      000937 D0 05            [24] 2175 	pop	ar5
      000939 D0 04            [24] 2176 	pop	ar4
      00093B 02r07r4B         [24] 2177 	ljmp	00119$
      00093E                       2178 00108$:
                                   2179 ;	./N76_UCS1903.c:288: _delay_ms(ReturnDelay);
      00093E 8C 82            [24] 2180 	mov	dpl,r4
      000940 8D 83            [24] 2181 	mov	dph,r5
      000942 8E F0            [24] 2182 	mov	b,r6
      000944 EF               [12] 2183 	mov	a,r7
                                   2184 ;	./N76_UCS1903.c:289: }
      000945 02r00r00         [24] 2185 	ljmp	__delay_ms
                                   2186 ;------------------------------------------------------------
                                   2187 ;Allocation info for local variables in function 'Twinkle'
                                   2188 ;------------------------------------------------------------
                                   2189 ;red                       Allocated with name '_Twinkle_PARM_2'
                                   2190 ;blue                      Allocated with name '_Twinkle_PARM_3'
                                   2191 ;Count                     Allocated with name '_Twinkle_PARM_4'
                                   2192 ;SpeedDelay                Allocated with name '_Twinkle_PARM_5'
                                   2193 ;OnlyOne                   Allocated with name '_Twinkle_PARM_6'
                                   2194 ;green                     Allocated to registers r7 
                                   2195 ;curEffect                 Allocated to registers r6 
                                   2196 ;i                         Allocated to registers r4 r5 
                                   2197 ;------------------------------------------------------------
                                   2198 ;	./N76_UCS1903.c:291: void Twinkle(uint8_t green, uint8_t red, uint8_t blue, int16_t Count, int16_t SpeedDelay, uint8_t OnlyOne)
                                   2199 ;	-----------------------------------------
                                   2200 ;	 function Twinkle
                                   2201 ;	-----------------------------------------
      000948                       2202 _Twinkle:
      000948 AF 82            [24] 2203 	mov	r7,dpl
                                   2204 ;	./N76_UCS1903.c:293: uint8_t curEffect = effect;
      00094A AE*04            [24] 2205 	mov	r6,_effect
                                   2206 ;	./N76_UCS1903.c:294: setAll(0, 0, 0);
      00094C 75*0C 00         [24] 2207 	mov	_setAll_PARM_2,#0x00
      00094F 75*0D 00         [24] 2208 	mov	_setAll_PARM_3,#0x00
      000952 75 82 00         [24] 2209 	mov	dpl,#0x00
      000955 C0 07            [24] 2210 	push	ar7
      000957 C0 06            [24] 2211 	push	ar6
      000959 12r02r13         [24] 2212 	lcall	_setAll
      00095C D0 06            [24] 2213 	pop	ar6
      00095E D0 07            [24] 2214 	pop	ar7
                                   2215 ;	./N76_UCS1903.c:295: for (int16_t i = 0; i < Count; i++)
      000960 7C 00            [12] 2216 	mov	r4,#0x00
      000962 7D 00            [12] 2217 	mov	r5,#0x00
      000964                       2218 00107$:
      000964 C3               [12] 2219 	clr	c
      000965 EC               [12] 2220 	mov	a,r4
      000966 95*30            [12] 2221 	subb	a,_Twinkle_PARM_4
      000968 ED               [12] 2222 	mov	a,r5
      000969 64 80            [12] 2223 	xrl	a,#0x80
      00096B 85*31 F0         [24] 2224 	mov	b,(_Twinkle_PARM_4 + 1)
      00096E 63 F0 80         [24] 2225 	xrl	b,#0x80
      000971 95 F0            [12] 2226 	subb	a,b
      000973 50 7B            [24] 2227 	jnc	00105$
                                   2228 ;	./N76_UCS1903.c:297: if (curEffect != effect) {_status=STT_NEW;return;}
      000975 EE               [12] 2229 	mov	a,r6
      000976 B5*04 02         [24] 2230 	cjne	a,_effect,00128$
      000979 80 04            [24] 2231 	sjmp	00102$
      00097B                       2232 00128$:
      00097B 75*05 12         [24] 2233 	mov	__status,#0x12
      00097E 22               [24] 2234 	ret
      00097F                       2235 00102$:
                                   2236 ;	./N76_UCS1903.c:298: setPixel(random(NUM_LEDS), green, red, blue);
      00097F 85*00 82         [24] 2237 	mov	dpl,_NUM_LEDS
      000982 85*01 83         [24] 2238 	mov	dph,(_NUM_LEDS + 1)
      000985 C0 07            [24] 2239 	push	ar7
      000987 C0 06            [24] 2240 	push	ar6
      000989 C0 05            [24] 2241 	push	ar5
      00098B C0 04            [24] 2242 	push	ar4
      00098D 12r00r00         [24] 2243 	lcall	_random
      000990 D0 04            [24] 2244 	pop	ar4
      000992 D0 05            [24] 2245 	pop	ar5
      000994 D0 06            [24] 2246 	pop	ar6
      000996 D0 07            [24] 2247 	pop	ar7
      000998 8F*09            [24] 2248 	mov	_setPixel_PARM_2,r7
      00099A 85*2E*0A         [24] 2249 	mov	_setPixel_PARM_3,_Twinkle_PARM_2
      00099D 85*2F*0B         [24] 2250 	mov	_setPixel_PARM_4,_Twinkle_PARM_3
      0009A0 C0 07            [24] 2251 	push	ar7
      0009A2 C0 06            [24] 2252 	push	ar6
      0009A4 C0 05            [24] 2253 	push	ar5
      0009A6 C0 04            [24] 2254 	push	ar4
      0009A8 12r01rC9         [24] 2255 	lcall	_setPixel
                                   2256 ;	./N76_UCS1903.c:299: showStrip();
      0009AB 12r01r4A         [24] 2257 	lcall	_showStrip
                                   2258 ;	./N76_UCS1903.c:300: _delay_ms(SpeedDelay);
      0009AE A8*32            [24] 2259 	mov	r0,_Twinkle_PARM_5
      0009B0 E5*33            [12] 2260 	mov	a,(_Twinkle_PARM_5 + 1)
      0009B2 F9               [12] 2261 	mov	r1,a
      0009B3 33               [12] 2262 	rlc	a
      0009B4 95 E0            [12] 2263 	subb	a,acc
      0009B6 FA               [12] 2264 	mov	r2,a
      0009B7 88 82            [24] 2265 	mov	dpl,r0
      0009B9 89 83            [24] 2266 	mov	dph,r1
      0009BB 8A F0            [24] 2267 	mov	b,r2
      0009BD 12r00r00         [24] 2268 	lcall	__delay_ms
      0009C0 D0 04            [24] 2269 	pop	ar4
      0009C2 D0 05            [24] 2270 	pop	ar5
      0009C4 D0 06            [24] 2271 	pop	ar6
      0009C6 D0 07            [24] 2272 	pop	ar7
                                   2273 ;	./N76_UCS1903.c:301: if (OnlyOne)
      0009C8 E5*34            [12] 2274 	mov	a,_Twinkle_PARM_6
      0009CA 60 1C            [24] 2275 	jz	00108$
                                   2276 ;	./N76_UCS1903.c:303: setAll(0, 0, 0);
      0009CC 75*0C 00         [24] 2277 	mov	_setAll_PARM_2,#0x00
      0009CF 75*0D 00         [24] 2278 	mov	_setAll_PARM_3,#0x00
      0009D2 75 82 00         [24] 2279 	mov	dpl,#0x00
      0009D5 C0 07            [24] 2280 	push	ar7
      0009D7 C0 06            [24] 2281 	push	ar6
      0009D9 C0 05            [24] 2282 	push	ar5
      0009DB C0 04            [24] 2283 	push	ar4
      0009DD 12r02r13         [24] 2284 	lcall	_setAll
      0009E0 D0 04            [24] 2285 	pop	ar4
      0009E2 D0 05            [24] 2286 	pop	ar5
      0009E4 D0 06            [24] 2287 	pop	ar6
      0009E6 D0 07            [24] 2288 	pop	ar7
      0009E8                       2289 00108$:
                                   2290 ;	./N76_UCS1903.c:295: for (int16_t i = 0; i < Count; i++)
      0009E8 0C               [12] 2291 	inc	r4
      0009E9 BC 00 01         [24] 2292 	cjne	r4,#0x00,00130$
      0009EC 0D               [12] 2293 	inc	r5
      0009ED                       2294 00130$:
      0009ED 02r09r64         [24] 2295 	ljmp	00107$
      0009F0                       2296 00105$:
                                   2297 ;	./N76_UCS1903.c:307: _delay_ms(SpeedDelay);
      0009F0 AC*32            [24] 2298 	mov	r4,_Twinkle_PARM_5
      0009F2 E5*33            [12] 2299 	mov	a,(_Twinkle_PARM_5 + 1)
      0009F4 FD               [12] 2300 	mov	r5,a
      0009F5 33               [12] 2301 	rlc	a
      0009F6 95 E0            [12] 2302 	subb	a,acc
      0009F8 FE               [12] 2303 	mov	r6,a
      0009F9 8C 82            [24] 2304 	mov	dpl,r4
      0009FB 8D 83            [24] 2305 	mov	dph,r5
      0009FD 8E F0            [24] 2306 	mov	b,r6
                                   2307 ;	./N76_UCS1903.c:308: }
      0009FF 02r00r00         [24] 2308 	ljmp	__delay_ms
                                   2309 ;------------------------------------------------------------
                                   2310 ;Allocation info for local variables in function 'TwinkleRandom'
                                   2311 ;------------------------------------------------------------
                                   2312 ;SpeedDelay                Allocated with name '_TwinkleRandom_PARM_2'
                                   2313 ;OnlyOne                   Allocated with name '_TwinkleRandom_PARM_3'
                                   2314 ;Count                     Allocated with name '_TwinkleRandom_Count_65536_130'
                                   2315 ;curEffect                 Allocated with name '_TwinkleRandom_curEffect_65536_131'
                                   2316 ;i                         Allocated to registers r3 r4 
                                   2317 ;------------------------------------------------------------
                                   2318 ;	./N76_UCS1903.c:310: void TwinkleRandom(int16_t Count, int16_t SpeedDelay, uint8_t OnlyOne)
                                   2319 ;	-----------------------------------------
                                   2320 ;	 function TwinkleRandom
                                   2321 ;	-----------------------------------------
      000A02                       2322 _TwinkleRandom:
      000A02 85 82*38         [24] 2323 	mov	_TwinkleRandom_Count_65536_130,dpl
      000A05 85 83*39         [24] 2324 	mov	(_TwinkleRandom_Count_65536_130 + 1),dph
                                   2325 ;	./N76_UCS1903.c:312: uint8_t curEffect = effect;
      000A08 85*04*3A         [24] 2326 	mov	_TwinkleRandom_curEffect_65536_131,_effect
                                   2327 ;	./N76_UCS1903.c:313: setAll(0, 0, 0);
      000A0B 75*0C 00         [24] 2328 	mov	_setAll_PARM_2,#0x00
      000A0E 75*0D 00         [24] 2329 	mov	_setAll_PARM_3,#0x00
      000A11 75 82 00         [24] 2330 	mov	dpl,#0x00
      000A14 12r02r13         [24] 2331 	lcall	_setAll
                                   2332 ;	./N76_UCS1903.c:314: showStrip();
      000A17 12r01r4A         [24] 2333 	lcall	_showStrip
                                   2334 ;	./N76_UCS1903.c:315: for (int16_t i = 0; i < Count; i++)
      000A1A 7B 00            [12] 2335 	mov	r3,#0x00
      000A1C 7C 00            [12] 2336 	mov	r4,#0x00
      000A1E                       2337 00107$:
      000A1E C3               [12] 2338 	clr	c
      000A1F EB               [12] 2339 	mov	a,r3
      000A20 95*38            [12] 2340 	subb	a,_TwinkleRandom_Count_65536_130
      000A22 EC               [12] 2341 	mov	a,r4
      000A23 64 80            [12] 2342 	xrl	a,#0x80
      000A25 85*39 F0         [24] 2343 	mov	b,(_TwinkleRandom_Count_65536_130 + 1)
      000A28 63 F0 80         [24] 2344 	xrl	b,#0x80
      000A2B 95 F0            [12] 2345 	subb	a,b
      000A2D 40 03            [24] 2346 	jc	00127$
      000A2F 02r0ArFE         [24] 2347 	ljmp	00105$
      000A32                       2348 00127$:
                                   2349 ;	./N76_UCS1903.c:317: if (curEffect != effect) {_status=STT_NEW;return;}
      000A32 E5*04            [12] 2350 	mov	a,_effect
      000A34 B5*3A 02         [24] 2351 	cjne	a,_TwinkleRandom_curEffect_65536_131,00128$
      000A37 80 04            [24] 2352 	sjmp	00102$
      000A39                       2353 00128$:
      000A39 75*05 12         [24] 2354 	mov	__status,#0x12
      000A3C 22               [24] 2355 	ret
      000A3D                       2356 00102$:
                                   2357 ;	./N76_UCS1903.c:318: setPixel(random(NUM_LEDS), random(255), random(255), random(255));
      000A3D 85*00 82         [24] 2358 	mov	dpl,_NUM_LEDS
      000A40 85*01 83         [24] 2359 	mov	dph,(_NUM_LEDS + 1)
      000A43 C0 04            [24] 2360 	push	ar4
      000A45 C0 03            [24] 2361 	push	ar3
      000A47 12r00r00         [24] 2362 	lcall	_random
      000A4A A9 82            [24] 2363 	mov	r1,dpl
      000A4C AA 83            [24] 2364 	mov	r2,dph
      000A4E 90 00 FF         [24] 2365 	mov	dptr,#0x00ff
      000A51 C0 02            [24] 2366 	push	ar2
      000A53 C0 01            [24] 2367 	push	ar1
      000A55 12r00r00         [24] 2368 	lcall	_random
      000A58 A8 82            [24] 2369 	mov	r0,dpl
      000A5A 90 00 FF         [24] 2370 	mov	dptr,#0x00ff
      000A5D C0 00            [24] 2371 	push	ar0
      000A5F 12r00r00         [24] 2372 	lcall	_random
      000A62 AD 82            [24] 2373 	mov	r5,dpl
      000A64 D0 00            [24] 2374 	pop	ar0
      000A66 D0 01            [24] 2375 	pop	ar1
      000A68 D0 02            [24] 2376 	pop	ar2
      000A6A D0 03            [24] 2377 	pop	ar3
      000A6C D0 04            [24] 2378 	pop	ar4
      000A6E 90 00 FF         [24] 2379 	mov	dptr,#0x00ff
      000A71 C0 05            [24] 2380 	push	ar5
      000A73 C0 04            [24] 2381 	push	ar4
      000A75 C0 03            [24] 2382 	push	ar3
      000A77 C0 02            [24] 2383 	push	ar2
      000A79 C0 01            [24] 2384 	push	ar1
      000A7B C0 00            [24] 2385 	push	ar0
      000A7D 12r00r00         [24] 2386 	lcall	_random
      000A80 AE 82            [24] 2387 	mov	r6,dpl
      000A82 D0 00            [24] 2388 	pop	ar0
      000A84 D0 01            [24] 2389 	pop	ar1
      000A86 D0 02            [24] 2390 	pop	ar2
      000A88 D0 03            [24] 2391 	pop	ar3
      000A8A D0 04            [24] 2392 	pop	ar4
      000A8C D0 05            [24] 2393 	pop	ar5
      000A8E 8E*0B            [24] 2394 	mov	_setPixel_PARM_4,r6
      000A90 88*09            [24] 2395 	mov	_setPixel_PARM_2,r0
      000A92 8D*0A            [24] 2396 	mov	_setPixel_PARM_3,r5
      000A94 89 82            [24] 2397 	mov	dpl,r1
      000A96 8A 83            [24] 2398 	mov	dph,r2
      000A98 C0 04            [24] 2399 	push	ar4
      000A9A C0 03            [24] 2400 	push	ar3
      000A9C 12r01rC9         [24] 2401 	lcall	_setPixel
                                   2402 ;	./N76_UCS1903.c:319: showStrip();
      000A9F 12r01r4A         [24] 2403 	lcall	_showStrip
                                   2404 ;	./N76_UCS1903.c:320: _delay_ms(DELAY);
      000AA2 85*00*00         [24] 2405 	mov	__divuint_PARM_2,_NUM_LEDS
      000AA5 85*01*01         [24] 2406 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      000AA8 90 00 C8         [24] 2407 	mov	dptr,#0x00c8
      000AAB 12r00r00         [24] 2408 	lcall	__divuint
      000AAE 85*02*00         [24] 2409 	mov	__mulint_PARM_2,__delay
      000AB1 85*03*01         [24] 2410 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      000AB4 12r00r00         [24] 2411 	lcall	__mulint
      000AB7 75*00 0A         [24] 2412 	mov	__divuint_PARM_2,#0x0a
      000ABA 75*01 00         [24] 2413 	mov	(__divuint_PARM_2 + 1),#0x00
      000ABD 12r00r00         [24] 2414 	lcall	__divuint
      000AC0 E5 82            [12] 2415 	mov	a,dpl
      000AC2 85 83 F0         [24] 2416 	mov	b,dph
      000AC5 24 01            [12] 2417 	add	a,#0x01
      000AC7 FE               [12] 2418 	mov	r6,a
      000AC8 E4               [12] 2419 	clr	a
      000AC9 35 F0            [12] 2420 	addc	a,b
      000ACB FF               [12] 2421 	mov	r7,a
      000ACC 7D 00            [12] 2422 	mov	r5,#0x00
      000ACE 7A 00            [12] 2423 	mov	r2,#0x00
      000AD0 8E 82            [24] 2424 	mov	dpl,r6
      000AD2 8F 83            [24] 2425 	mov	dph,r7
      000AD4 8D F0            [24] 2426 	mov	b,r5
      000AD6 EA               [12] 2427 	mov	a,r2
      000AD7 12r00r00         [24] 2428 	lcall	__delay_ms
      000ADA D0 03            [24] 2429 	pop	ar3
      000ADC D0 04            [24] 2430 	pop	ar4
                                   2431 ;	./N76_UCS1903.c:321: if (OnlyOne)
      000ADE E5*37            [12] 2432 	mov	a,_TwinkleRandom_PARM_3
      000AE0 60 14            [24] 2433 	jz	00108$
                                   2434 ;	./N76_UCS1903.c:323: setAll(0, 0, 0);
      000AE2 75*0C 00         [24] 2435 	mov	_setAll_PARM_2,#0x00
      000AE5 75*0D 00         [24] 2436 	mov	_setAll_PARM_3,#0x00
      000AE8 75 82 00         [24] 2437 	mov	dpl,#0x00
      000AEB C0 04            [24] 2438 	push	ar4
      000AED C0 03            [24] 2439 	push	ar3
      000AEF 12r02r13         [24] 2440 	lcall	_setAll
      000AF2 D0 03            [24] 2441 	pop	ar3
      000AF4 D0 04            [24] 2442 	pop	ar4
      000AF6                       2443 00108$:
                                   2444 ;	./N76_UCS1903.c:315: for (int16_t i = 0; i < Count; i++)
      000AF6 0B               [12] 2445 	inc	r3
      000AF7 BB 00 01         [24] 2446 	cjne	r3,#0x00,00130$
      000AFA 0C               [12] 2447 	inc	r4
      000AFB                       2448 00130$:
      000AFB 02r0Ar1E         [24] 2449 	ljmp	00107$
      000AFE                       2450 00105$:
                                   2451 ;	./N76_UCS1903.c:327: _delay_us(SpeedDelay);
      000AFE AC*35            [24] 2452 	mov	r4,_TwinkleRandom_PARM_2
      000B00 E5*36            [12] 2453 	mov	a,(_TwinkleRandom_PARM_2 + 1)
      000B02 FD               [12] 2454 	mov	r5,a
      000B03 33               [12] 2455 	rlc	a
      000B04 95 E0            [12] 2456 	subb	a,acc
      000B06 FE               [12] 2457 	mov	r6,a
      000B07 8C 82            [24] 2458 	mov	dpl,r4
      000B09 8D 83            [24] 2459 	mov	dph,r5
      000B0B 8E F0            [24] 2460 	mov	b,r6
                                   2461 ;	./N76_UCS1903.c:328: }
      000B0D 02r00r00         [24] 2462 	ljmp	__delay_us
                                   2463 ;------------------------------------------------------------
                                   2464 ;Allocation info for local variables in function 'Sparkle'
                                   2465 ;------------------------------------------------------------
                                   2466 ;red                       Allocated with name '_Sparkle_PARM_2'
                                   2467 ;blue                      Allocated with name '_Sparkle_PARM_3'
                                   2468 ;SpeedDelay                Allocated with name '_Sparkle_PARM_4'
                                   2469 ;green                     Allocated to registers r7 
                                   2470 ;Pixel                     Allocated to registers r5 r6 
                                   2471 ;------------------------------------------------------------
                                   2472 ;	./N76_UCS1903.c:330: void Sparkle(uint8_t green, uint8_t red, uint8_t blue, int16_t SpeedDelay)
                                   2473 ;	-----------------------------------------
                                   2474 ;	 function Sparkle
                                   2475 ;	-----------------------------------------
      000B10                       2476 _Sparkle:
      000B10 AF 82            [24] 2477 	mov	r7,dpl
                                   2478 ;	./N76_UCS1903.c:332: int16_t Pixel = random(NUM_LEDS);
      000B12 85*00 82         [24] 2479 	mov	dpl,_NUM_LEDS
      000B15 85*01 83         [24] 2480 	mov	dph,(_NUM_LEDS + 1)
      000B18 C0 07            [24] 2481 	push	ar7
      000B1A 12r00r00         [24] 2482 	lcall	_random
      000B1D AD 82            [24] 2483 	mov	r5,dpl
      000B1F AE 83            [24] 2484 	mov	r6,dph
      000B21 D0 07            [24] 2485 	pop	ar7
                                   2486 ;	./N76_UCS1903.c:333: setPixel(Pixel, green, red, blue);
      000B23 8F*09            [24] 2487 	mov	_setPixel_PARM_2,r7
      000B25 85*3B*0A         [24] 2488 	mov	_setPixel_PARM_3,_Sparkle_PARM_2
      000B28 85*3C*0B         [24] 2489 	mov	_setPixel_PARM_4,_Sparkle_PARM_3
      000B2B 8D 82            [24] 2490 	mov	dpl,r5
      000B2D 8E 83            [24] 2491 	mov	dph,r6
      000B2F C0 06            [24] 2492 	push	ar6
      000B31 C0 05            [24] 2493 	push	ar5
      000B33 12r01rC9         [24] 2494 	lcall	_setPixel
                                   2495 ;	./N76_UCS1903.c:334: showStrip();
      000B36 12r01r4A         [24] 2496 	lcall	_showStrip
                                   2497 ;	./N76_UCS1903.c:335: _delay_ms(DELAY);
      000B39 85*00*00         [24] 2498 	mov	__divuint_PARM_2,_NUM_LEDS
      000B3C 85*01*01         [24] 2499 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      000B3F 90 00 C8         [24] 2500 	mov	dptr,#0x00c8
      000B42 12r00r00         [24] 2501 	lcall	__divuint
      000B45 85*02*00         [24] 2502 	mov	__mulint_PARM_2,__delay
      000B48 85*03*01         [24] 2503 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      000B4B 12r00r00         [24] 2504 	lcall	__mulint
      000B4E 75*00 0A         [24] 2505 	mov	__divuint_PARM_2,#0x0a
      000B51 75*01 00         [24] 2506 	mov	(__divuint_PARM_2 + 1),#0x00
      000B54 12r00r00         [24] 2507 	lcall	__divuint
      000B57 E5 82            [12] 2508 	mov	a,dpl
      000B59 85 83 F0         [24] 2509 	mov	b,dph
      000B5C 24 01            [12] 2510 	add	a,#0x01
      000B5E FC               [12] 2511 	mov	r4,a
      000B5F E4               [12] 2512 	clr	a
      000B60 35 F0            [12] 2513 	addc	a,b
      000B62 FF               [12] 2514 	mov	r7,a
      000B63 7B 00            [12] 2515 	mov	r3,#0x00
      000B65 7A 00            [12] 2516 	mov	r2,#0x00
      000B67 8C 82            [24] 2517 	mov	dpl,r4
      000B69 8F 83            [24] 2518 	mov	dph,r7
      000B6B 8B F0            [24] 2519 	mov	b,r3
      000B6D EA               [12] 2520 	mov	a,r2
      000B6E 12r00r00         [24] 2521 	lcall	__delay_ms
      000B71 D0 05            [24] 2522 	pop	ar5
      000B73 D0 06            [24] 2523 	pop	ar6
                                   2524 ;	./N76_UCS1903.c:336: setPixel(Pixel, 0, 0, 0);
      000B75 75*09 00         [24] 2525 	mov	_setPixel_PARM_2,#0x00
      000B78 75*0A 00         [24] 2526 	mov	_setPixel_PARM_3,#0x00
      000B7B 75*0B 00         [24] 2527 	mov	_setPixel_PARM_4,#0x00
      000B7E 8D 82            [24] 2528 	mov	dpl,r5
      000B80 8E 83            [24] 2529 	mov	dph,r6
                                   2530 ;	./N76_UCS1903.c:337: }
      000B82 02r01rC9         [24] 2531 	ljmp	_setPixel
                                   2532 ;------------------------------------------------------------
                                   2533 ;Allocation info for local variables in function 'SnowSparkle'
                                   2534 ;------------------------------------------------------------
                                   2535 ;red                       Allocated with name '_SnowSparkle_PARM_2'
                                   2536 ;blue                      Allocated with name '_SnowSparkle_PARM_3'
                                   2537 ;SparkleDelay              Allocated with name '_SnowSparkle_PARM_4'
                                   2538 ;SpeedDelay                Allocated with name '_SnowSparkle_PARM_5'
                                   2539 ;green                     Allocated to registers r7 
                                   2540 ;Pixel                     Allocated to registers r5 r6 
                                   2541 ;------------------------------------------------------------
                                   2542 ;	./N76_UCS1903.c:339: void SnowSparkle(uint8_t green, uint8_t red, uint8_t blue, int16_t SparkleDelay, int16_t SpeedDelay)
                                   2543 ;	-----------------------------------------
                                   2544 ;	 function SnowSparkle
                                   2545 ;	-----------------------------------------
      000B85                       2546 _SnowSparkle:
      000B85 AF 82            [24] 2547 	mov	r7,dpl
                                   2548 ;	./N76_UCS1903.c:341: setAll(green, red, blue);
      000B87 85*3F*0C         [24] 2549 	mov	_setAll_PARM_2,_SnowSparkle_PARM_2
      000B8A 85*40*0D         [24] 2550 	mov	_setAll_PARM_3,_SnowSparkle_PARM_3
      000B8D 8F 82            [24] 2551 	mov	dpl,r7
      000B8F C0 07            [24] 2552 	push	ar7
      000B91 12r02r13         [24] 2553 	lcall	_setAll
                                   2554 ;	./N76_UCS1903.c:343: int16_t Pixel = random(NUM_LEDS);
      000B94 85*00 82         [24] 2555 	mov	dpl,_NUM_LEDS
      000B97 85*01 83         [24] 2556 	mov	dph,(_NUM_LEDS + 1)
      000B9A 12r00r00         [24] 2557 	lcall	_random
      000B9D AD 82            [24] 2558 	mov	r5,dpl
      000B9F AE 83            [24] 2559 	mov	r6,dph
                                   2560 ;	./N76_UCS1903.c:344: setPixel(Pixel, 0xFF, 0xFF, 0xFF);
      000BA1 75*09 FF         [24] 2561 	mov	_setPixel_PARM_2,#0xff
      000BA4 75*0A FF         [24] 2562 	mov	_setPixel_PARM_3,#0xff
      000BA7 75*0B FF         [24] 2563 	mov	_setPixel_PARM_4,#0xff
      000BAA 8D 82            [24] 2564 	mov	dpl,r5
      000BAC 8E 83            [24] 2565 	mov	dph,r6
      000BAE C0 06            [24] 2566 	push	ar6
      000BB0 C0 05            [24] 2567 	push	ar5
      000BB2 12r01rC9         [24] 2568 	lcall	_setPixel
                                   2569 ;	./N76_UCS1903.c:345: showStrip();
      000BB5 12r01r4A         [24] 2570 	lcall	_showStrip
                                   2571 ;	./N76_UCS1903.c:346: _delay_ms(SparkleDelay);
      000BB8 A9*41            [24] 2572 	mov	r1,_SnowSparkle_PARM_4
      000BBA E5*42            [12] 2573 	mov	a,(_SnowSparkle_PARM_4 + 1)
      000BBC FA               [12] 2574 	mov	r2,a
      000BBD 33               [12] 2575 	rlc	a
      000BBE 95 E0            [12] 2576 	subb	a,acc
      000BC0 FB               [12] 2577 	mov	r3,a
      000BC1 89 82            [24] 2578 	mov	dpl,r1
      000BC3 8A 83            [24] 2579 	mov	dph,r2
      000BC5 8B F0            [24] 2580 	mov	b,r3
      000BC7 12r00r00         [24] 2581 	lcall	__delay_ms
      000BCA D0 05            [24] 2582 	pop	ar5
      000BCC D0 06            [24] 2583 	pop	ar6
      000BCE D0 07            [24] 2584 	pop	ar7
                                   2585 ;	./N76_UCS1903.c:347: setPixel(Pixel, green, red, blue);
      000BD0 8F*09            [24] 2586 	mov	_setPixel_PARM_2,r7
      000BD2 85*3F*0A         [24] 2587 	mov	_setPixel_PARM_3,_SnowSparkle_PARM_2
      000BD5 85*40*0B         [24] 2588 	mov	_setPixel_PARM_4,_SnowSparkle_PARM_3
      000BD8 8D 82            [24] 2589 	mov	dpl,r5
      000BDA 8E 83            [24] 2590 	mov	dph,r6
      000BDC 12r01rC9         [24] 2591 	lcall	_setPixel
                                   2592 ;	./N76_UCS1903.c:348: showStrip();
      000BDF 12r01r4A         [24] 2593 	lcall	_showStrip
                                   2594 ;	./N76_UCS1903.c:349: _delay_ms(DELAY);
      000BE2 85*00*00         [24] 2595 	mov	__divuint_PARM_2,_NUM_LEDS
      000BE5 85*01*01         [24] 2596 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      000BE8 90 00 C8         [24] 2597 	mov	dptr,#0x00c8
      000BEB 12r00r00         [24] 2598 	lcall	__divuint
      000BEE 85*02*00         [24] 2599 	mov	__mulint_PARM_2,__delay
      000BF1 85*03*01         [24] 2600 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      000BF4 12r00r00         [24] 2601 	lcall	__mulint
      000BF7 75*00 0A         [24] 2602 	mov	__divuint_PARM_2,#0x0a
      000BFA 75*01 00         [24] 2603 	mov	(__divuint_PARM_2 + 1),#0x00
      000BFD 12r00r00         [24] 2604 	lcall	__divuint
      000C00 E5 82            [12] 2605 	mov	a,dpl
      000C02 85 83 F0         [24] 2606 	mov	b,dph
      000C05 24 01            [12] 2607 	add	a,#0x01
      000C07 FE               [12] 2608 	mov	r6,a
      000C08 E4               [12] 2609 	clr	a
      000C09 35 F0            [12] 2610 	addc	a,b
      000C0B FF               [12] 2611 	mov	r7,a
      000C0C 7D 00            [12] 2612 	mov	r5,#0x00
      000C0E 7C 00            [12] 2613 	mov	r4,#0x00
      000C10 8E 82            [24] 2614 	mov	dpl,r6
      000C12 8F 83            [24] 2615 	mov	dph,r7
      000C14 8D F0            [24] 2616 	mov	b,r5
      000C16 EC               [12] 2617 	mov	a,r4
                                   2618 ;	./N76_UCS1903.c:350: }
      000C17 02r00r00         [24] 2619 	ljmp	__delay_ms
                                   2620 ;------------------------------------------------------------
                                   2621 ;Allocation info for local variables in function 'colorWipe'
                                   2622 ;------------------------------------------------------------
                                   2623 ;red                       Allocated with name '_colorWipe_PARM_2'
                                   2624 ;blue                      Allocated with name '_colorWipe_PARM_3'
                                   2625 ;SpeedDelay                Allocated with name '_colorWipe_PARM_4'
                                   2626 ;green                     Allocated to registers r7 
                                   2627 ;curEffect                 Allocated to registers r6 
                                   2628 ;i                         Allocated to registers r4 r5 
                                   2629 ;------------------------------------------------------------
                                   2630 ;	./N76_UCS1903.c:352: void colorWipe(uint8_t green, uint8_t red, uint8_t blue, int16_t SpeedDelay)
                                   2631 ;	-----------------------------------------
                                   2632 ;	 function colorWipe
                                   2633 ;	-----------------------------------------
      000C1A                       2634 _colorWipe:
      000C1A AF 82            [24] 2635 	mov	r7,dpl
                                   2636 ;	./N76_UCS1903.c:354: uint8_t curEffect = effect;
      000C1C AE*04            [24] 2637 	mov	r6,_effect
                                   2638 ;	./N76_UCS1903.c:355: for (uint16_t i = 0; i < NUM_LEDS; i++)
      000C1E 7C 00            [12] 2639 	mov	r4,#0x00
      000C20 7D 00            [12] 2640 	mov	r5,#0x00
      000C22                       2641 00105$:
      000C22 C3               [12] 2642 	clr	c
      000C23 EC               [12] 2643 	mov	a,r4
      000C24 95*00            [12] 2644 	subb	a,_NUM_LEDS
      000C26 ED               [12] 2645 	mov	a,r5
      000C27 95*01            [12] 2646 	subb	a,(_NUM_LEDS + 1)
      000C29 40 01            [24] 2647 	jc	00121$
      000C2B 22               [24] 2648 	ret
      000C2C                       2649 00121$:
                                   2650 ;	./N76_UCS1903.c:357: if (curEffect != effect) {_status=STT_NEW;return;}
      000C2C EE               [12] 2651 	mov	a,r6
      000C2D B5*04 02         [24] 2652 	cjne	a,_effect,00122$
      000C30 80 04            [24] 2653 	sjmp	00102$
      000C32                       2654 00122$:
      000C32 75*05 12         [24] 2655 	mov	__status,#0x12
      000C35 22               [24] 2656 	ret
      000C36                       2657 00102$:
                                   2658 ;	./N76_UCS1903.c:358: setPixel(i, green, red, blue);
      000C36 8F*09            [24] 2659 	mov	_setPixel_PARM_2,r7
      000C38 85*45*0A         [24] 2660 	mov	_setPixel_PARM_3,_colorWipe_PARM_2
      000C3B 85*46*0B         [24] 2661 	mov	_setPixel_PARM_4,_colorWipe_PARM_3
      000C3E 8C 82            [24] 2662 	mov	dpl,r4
      000C40 8D 83            [24] 2663 	mov	dph,r5
      000C42 C0 07            [24] 2664 	push	ar7
      000C44 C0 06            [24] 2665 	push	ar6
      000C46 C0 05            [24] 2666 	push	ar5
      000C48 C0 04            [24] 2667 	push	ar4
      000C4A 12r01rC9         [24] 2668 	lcall	_setPixel
                                   2669 ;	./N76_UCS1903.c:359: showStrip();
      000C4D 12r01r4A         [24] 2670 	lcall	_showStrip
                                   2671 ;	./N76_UCS1903.c:360: _delay_ms(DELAY2+1);
      000C50 85*00*00         [24] 2672 	mov	__divuint_PARM_2,_NUM_LEDS
      000C53 85*01*01         [24] 2673 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      000C56 90 00 C8         [24] 2674 	mov	dptr,#0x00c8
      000C59 12r00r00         [24] 2675 	lcall	__divuint
      000C5C 85*02*00         [24] 2676 	mov	__mulint_PARM_2,__delay
      000C5F 85*03*01         [24] 2677 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      000C62 12r00r00         [24] 2678 	lcall	__mulint
      000C65 75*00 64         [24] 2679 	mov	__divuint_PARM_2,#0x64
      000C68 75*01 00         [24] 2680 	mov	(__divuint_PARM_2 + 1),#0x00
      000C6B 12r00r00         [24] 2681 	lcall	__divuint
      000C6E E5 82            [12] 2682 	mov	a,dpl
      000C70 85 83 F0         [24] 2683 	mov	b,dph
      000C73 24 02            [12] 2684 	add	a,#0x02
      000C75 FA               [12] 2685 	mov	r2,a
      000C76 E4               [12] 2686 	clr	a
      000C77 35 F0            [12] 2687 	addc	a,b
      000C79 FB               [12] 2688 	mov	r3,a
      000C7A 8A 00            [24] 2689 	mov	ar0,r2
      000C7C 8B 01            [24] 2690 	mov	ar1,r3
      000C7E 7A 00            [12] 2691 	mov	r2,#0x00
      000C80 7B 00            [12] 2692 	mov	r3,#0x00
      000C82 88 82            [24] 2693 	mov	dpl,r0
      000C84 89 83            [24] 2694 	mov	dph,r1
      000C86 8A F0            [24] 2695 	mov	b,r2
      000C88 EB               [12] 2696 	mov	a,r3
      000C89 12r00r00         [24] 2697 	lcall	__delay_ms
      000C8C D0 04            [24] 2698 	pop	ar4
      000C8E D0 05            [24] 2699 	pop	ar5
      000C90 D0 06            [24] 2700 	pop	ar6
      000C92 D0 07            [24] 2701 	pop	ar7
                                   2702 ;	./N76_UCS1903.c:355: for (uint16_t i = 0; i < NUM_LEDS; i++)
      000C94 0C               [12] 2703 	inc	r4
      000C95 BC 00 01         [24] 2704 	cjne	r4,#0x00,00123$
      000C98 0D               [12] 2705 	inc	r5
      000C99                       2706 00123$:
                                   2707 ;	./N76_UCS1903.c:362: }
      000C99 02r0Cr22         [24] 2708 	ljmp	00105$
                                   2709 ;------------------------------------------------------------
                                   2710 ;Allocation info for local variables in function 'rainbowCycle'
                                   2711 ;------------------------------------------------------------
                                   2712 ;SpeedDelay                Allocated to registers 
                                   2713 ;c                         Allocated to registers r0 r1 r2 
                                   2714 ;i                         Allocated to registers r3 r4 
                                   2715 ;j                         Allocated with name '_rainbowCycle_j_65536_147'
                                   2716 ;curEffect                 Allocated with name '_rainbowCycle_curEffect_65536_147'
                                   2717 ;------------------------------------------------------------
                                   2718 ;	./N76_UCS1903.c:364: void rainbowCycle(int16_t SpeedDelay)
                                   2719 ;	-----------------------------------------
                                   2720 ;	 function rainbowCycle
                                   2721 ;	-----------------------------------------
      000C9C                       2722 _rainbowCycle:
                                   2723 ;	./N76_UCS1903.c:368: uint8_t curEffect = effect;
      000C9C 85*04*4B         [24] 2724 	mov	_rainbowCycle_curEffect_65536_147,_effect
                                   2725 ;	./N76_UCS1903.c:370: for (j = 0; j < 256 * 5; j++)
      000C9F E4               [12] 2726 	clr	a
      000CA0 F5*49            [12] 2727 	mov	_rainbowCycle_j_65536_147,a
      000CA2 F5*4A            [12] 2728 	mov	(_rainbowCycle_j_65536_147 + 1),a
                                   2729 ;	./N76_UCS1903.c:372: for (i = 0; i < NUM_LEDS; i++)
      000CA4                       2730 00114$:
      000CA4 7B 00            [12] 2731 	mov	r3,#0x00
      000CA6 7C 00            [12] 2732 	mov	r4,#0x00
      000CA8                       2733 00106$:
      000CA8 C3               [12] 2734 	clr	c
      000CA9 EB               [12] 2735 	mov	a,r3
      000CAA 95*00            [12] 2736 	subb	a,_NUM_LEDS
      000CAC EC               [12] 2737 	mov	a,r4
      000CAD 95*01            [12] 2738 	subb	a,(_NUM_LEDS + 1)
      000CAF 40 03            [24] 2739 	jc	00128$
      000CB1 02r0Dr32         [24] 2740 	ljmp	00103$
      000CB4                       2741 00128$:
                                   2742 ;	./N76_UCS1903.c:374: if (curEffect != effect) {_status=STT_NEW;return;}
      000CB4 E5*04            [12] 2743 	mov	a,_effect
      000CB6 B5*4B 02         [24] 2744 	cjne	a,_rainbowCycle_curEffect_65536_147,00129$
      000CB9 80 04            [24] 2745 	sjmp	00102$
      000CBB                       2746 00129$:
      000CBB 75*05 12         [24] 2747 	mov	__status,#0x12
      000CBE 22               [24] 2748 	ret
      000CBF                       2749 00102$:
                                   2750 ;	./N76_UCS1903.c:375: c = Wheel(((i * 256 / NUM_LEDS) + j) & 255);
      000CBF 8B 01            [24] 2751 	mov	ar1,r3
      000CC1 89 02            [24] 2752 	mov	ar2,r1
      000CC3 79 00            [12] 2753 	mov	r1,#0x00
      000CC5 89 82            [24] 2754 	mov	dpl,r1
      000CC7 8A 83            [24] 2755 	mov	dph,r2
      000CC9 85*00*00         [24] 2756 	mov	__divuint_PARM_2,_NUM_LEDS
      000CCC 85*01*01         [24] 2757 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      000CCF C0 04            [24] 2758 	push	ar4
      000CD1 C0 03            [24] 2759 	push	ar3
      000CD3 12r00r00         [24] 2760 	lcall	__divuint
      000CD6 A9 82            [24] 2761 	mov	r1,dpl
      000CD8 E5*49            [12] 2762 	mov	a,_rainbowCycle_j_65536_147
      000CDA 29               [12] 2763 	add	a,r1
      000CDB F5 82            [12] 2764 	mov	dpl,a
      000CDD 12r0Dr82         [24] 2765 	lcall	_Wheel
      000CE0 A8 82            [24] 2766 	mov	r0,dpl
      000CE2 A9 83            [24] 2767 	mov	r1,dph
      000CE4 AA F0            [24] 2768 	mov	r2,b
      000CE6 D0 03            [24] 2769 	pop	ar3
      000CE8 D0 04            [24] 2770 	pop	ar4
                                   2771 ;	./N76_UCS1903.c:376: setPixel(i, *c, *(c + 1), *(c + 2));
      000CEA 88 82            [24] 2772 	mov	dpl,r0
      000CEC 89 83            [24] 2773 	mov	dph,r1
      000CEE 8A F0            [24] 2774 	mov	b,r2
      000CF0 12r00r00         [24] 2775 	lcall	__gptrget
      000CF3 F5*09            [12] 2776 	mov	_setPixel_PARM_2,a
      000CF5 74 01            [12] 2777 	mov	a,#0x01
      000CF7 28               [12] 2778 	add	a,r0
      000CF8 FD               [12] 2779 	mov	r5,a
      000CF9 E4               [12] 2780 	clr	a
      000CFA 39               [12] 2781 	addc	a,r1
      000CFB FE               [12] 2782 	mov	r6,a
      000CFC 8A 07            [24] 2783 	mov	ar7,r2
      000CFE 8D 82            [24] 2784 	mov	dpl,r5
      000D00 8E 83            [24] 2785 	mov	dph,r6
      000D02 8F F0            [24] 2786 	mov	b,r7
      000D04 12r00r00         [24] 2787 	lcall	__gptrget
      000D07 F5*0A            [12] 2788 	mov	_setPixel_PARM_3,a
      000D09 74 02            [12] 2789 	mov	a,#0x02
      000D0B 28               [12] 2790 	add	a,r0
      000D0C F8               [12] 2791 	mov	r0,a
      000D0D E4               [12] 2792 	clr	a
      000D0E 39               [12] 2793 	addc	a,r1
      000D0F F9               [12] 2794 	mov	r1,a
      000D10 88 82            [24] 2795 	mov	dpl,r0
      000D12 89 83            [24] 2796 	mov	dph,r1
      000D14 8A F0            [24] 2797 	mov	b,r2
      000D16 12r00r00         [24] 2798 	lcall	__gptrget
      000D19 F5*0B            [12] 2799 	mov	_setPixel_PARM_4,a
      000D1B 8B 82            [24] 2800 	mov	dpl,r3
      000D1D 8C 83            [24] 2801 	mov	dph,r4
      000D1F C0 04            [24] 2802 	push	ar4
      000D21 C0 03            [24] 2803 	push	ar3
      000D23 12r01rC9         [24] 2804 	lcall	_setPixel
      000D26 D0 03            [24] 2805 	pop	ar3
      000D28 D0 04            [24] 2806 	pop	ar4
                                   2807 ;	./N76_UCS1903.c:372: for (i = 0; i < NUM_LEDS; i++)
      000D2A 0B               [12] 2808 	inc	r3
      000D2B BB 00 01         [24] 2809 	cjne	r3,#0x00,00130$
      000D2E 0C               [12] 2810 	inc	r4
      000D2F                       2811 00130$:
      000D2F 02r0CrA8         [24] 2812 	ljmp	00106$
      000D32                       2813 00103$:
                                   2814 ;	./N76_UCS1903.c:378: showStrip();
      000D32 12r01r4A         [24] 2815 	lcall	_showStrip
                                   2816 ;	./N76_UCS1903.c:379: _delay_ms(DELAY);
      000D35 85*00*00         [24] 2817 	mov	__divuint_PARM_2,_NUM_LEDS
      000D38 85*01*01         [24] 2818 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      000D3B 90 00 C8         [24] 2819 	mov	dptr,#0x00c8
      000D3E 12r00r00         [24] 2820 	lcall	__divuint
      000D41 85*02*00         [24] 2821 	mov	__mulint_PARM_2,__delay
      000D44 85*03*01         [24] 2822 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      000D47 12r00r00         [24] 2823 	lcall	__mulint
      000D4A 75*00 0A         [24] 2824 	mov	__divuint_PARM_2,#0x0a
      000D4D 75*01 00         [24] 2825 	mov	(__divuint_PARM_2 + 1),#0x00
      000D50 12r00r00         [24] 2826 	lcall	__divuint
      000D53 E5 82            [12] 2827 	mov	a,dpl
      000D55 85 83 F0         [24] 2828 	mov	b,dph
      000D58 24 01            [12] 2829 	add	a,#0x01
      000D5A FE               [12] 2830 	mov	r6,a
      000D5B E4               [12] 2831 	clr	a
      000D5C 35 F0            [12] 2832 	addc	a,b
      000D5E FF               [12] 2833 	mov	r7,a
      000D5F 7D 00            [12] 2834 	mov	r5,#0x00
      000D61 7C 00            [12] 2835 	mov	r4,#0x00
      000D63 8E 82            [24] 2836 	mov	dpl,r6
      000D65 8F 83            [24] 2837 	mov	dph,r7
      000D67 8D F0            [24] 2838 	mov	b,r5
      000D69 EC               [12] 2839 	mov	a,r4
      000D6A 12r00r00         [24] 2840 	lcall	__delay_ms
                                   2841 ;	./N76_UCS1903.c:370: for (j = 0; j < 256 * 5; j++)
      000D6D 05*49            [12] 2842 	inc	_rainbowCycle_j_65536_147
      000D6F E4               [12] 2843 	clr	a
      000D70 B5*49 02         [24] 2844 	cjne	a,_rainbowCycle_j_65536_147,00131$
      000D73 05*4A            [12] 2845 	inc	(_rainbowCycle_j_65536_147 + 1)
      000D75                       2846 00131$:
      000D75 AD*49            [24] 2847 	mov	r5,_rainbowCycle_j_65536_147
      000D77 AE*4A            [24] 2848 	mov	r6,(_rainbowCycle_j_65536_147 + 1)
      000D79 74 FB            [12] 2849 	mov	a,#0x100 - 0x05
      000D7B 2E               [12] 2850 	add	a,r6
      000D7C 40 03            [24] 2851 	jc	00132$
      000D7E 02r0CrA4         [24] 2852 	ljmp	00114$
      000D81                       2853 00132$:
                                   2854 ;	./N76_UCS1903.c:381: }
      000D81 22               [24] 2855 	ret
                                   2856 ;------------------------------------------------------------
                                   2857 ;Allocation info for local variables in function 'Wheel'
                                   2858 ;------------------------------------------------------------
                                   2859 ;c                         Allocated with name '_Wheel_c_65536_154'
                                   2860 ;WheelPos                  Allocated to registers r6 
                                   2861 ;curEffect                 Allocated to registers 
                                   2862 ;------------------------------------------------------------
                                   2863 ;	./N76_UCS1903.c:384: uint8_t *Wheel(uint8_t WheelPos)
                                   2864 ;	-----------------------------------------
                                   2865 ;	 function Wheel
                                   2866 ;	-----------------------------------------
      000D82                       2867 _Wheel:
      000D82 AF 82            [24] 2868 	mov	r7,dpl
                                   2869 ;	./N76_UCS1903.c:389: if (WheelPos < 85)
      000D84 BF 55 00         [24] 2870 	cjne	r7,#0x55,00119$
      000D87                       2871 00119$:
      000D87 50 19            [24] 2872 	jnc	00105$
                                   2873 ;	./N76_UCS1903.c:391: c[0] = WheelPos * 3;
      000D89 EF               [12] 2874 	mov	a,r7
      000D8A 75 F0 03         [24] 2875 	mov	b,#0x03
      000D8D A4               [48] 2876 	mul	ab
      000D8E F5*4C            [12] 2877 	mov	_Wheel_c_65536_154,a
                                   2878 ;	./N76_UCS1903.c:392: c[1] = 255 - WheelPos * 3;
      000D90 8F 06            [24] 2879 	mov	ar6,r7
      000D92 EE               [12] 2880 	mov	a,r6
      000D93 75 F0 03         [24] 2881 	mov	b,#0x03
      000D96 A4               [48] 2882 	mul	ab
      000D97 D3               [12] 2883 	setb	c
      000D98 94 FF            [12] 2884 	subb	a,#0xff
      000D9A F4               [12] 2885 	cpl	a
      000D9B F5*4D            [12] 2886 	mov	(_Wheel_c_65536_154 + 0x0001),a
                                   2887 ;	./N76_UCS1903.c:393: c[2] = 0;
      000D9D 75*4E 00         [24] 2888 	mov	(_Wheel_c_65536_154 + 0x0002),#0x00
      000DA0 80 3A            [24] 2889 	sjmp	00106$
      000DA2                       2890 00105$:
                                   2891 ;	./N76_UCS1903.c:395: else if (WheelPos < 170)
      000DA2 BF AA 00         [24] 2892 	cjne	r7,#0xaa,00121$
      000DA5                       2893 00121$:
      000DA5 50 1D            [24] 2894 	jnc	00102$
                                   2895 ;	./N76_UCS1903.c:397: WheelPos -= 85;
      000DA7 8F 06            [24] 2896 	mov	ar6,r7
      000DA9 EE               [12] 2897 	mov	a,r6
      000DAA 24 AB            [12] 2898 	add	a,#0xab
                                   2899 ;	./N76_UCS1903.c:398: c[0] = 255 - WheelPos * 3;
      000DAC FE               [12] 2900 	mov	r6,a
      000DAD FD               [12] 2901 	mov	r5,a
      000DAE 75 F0 03         [24] 2902 	mov	b,#0x03
      000DB1 A4               [48] 2903 	mul	ab
      000DB2 D3               [12] 2904 	setb	c
      000DB3 94 FF            [12] 2905 	subb	a,#0xff
      000DB5 F4               [12] 2906 	cpl	a
      000DB6 F5*4C            [12] 2907 	mov	_Wheel_c_65536_154,a
                                   2908 ;	./N76_UCS1903.c:399: c[1] = 0;
      000DB8 75*4D 00         [24] 2909 	mov	(_Wheel_c_65536_154 + 0x0001),#0x00
                                   2910 ;	./N76_UCS1903.c:400: c[2] = WheelPos * 3;
      000DBB EE               [12] 2911 	mov	a,r6
      000DBC 75 F0 03         [24] 2912 	mov	b,#0x03
      000DBF A4               [48] 2913 	mul	ab
      000DC0 F5*4E            [12] 2914 	mov	(_Wheel_c_65536_154 + 0x0002),a
      000DC2 80 18            [24] 2915 	sjmp	00106$
      000DC4                       2916 00102$:
                                   2917 ;	./N76_UCS1903.c:404: WheelPos -= 170;
      000DC4 EF               [12] 2918 	mov	a,r7
      000DC5 24 56            [12] 2919 	add	a,#0x56
                                   2920 ;	./N76_UCS1903.c:405: c[0] = 0;
                                   2921 ;	./N76_UCS1903.c:406: c[1] = WheelPos * 3;
      000DC7 FF               [12] 2922 	mov	r7,a
      000DC8 75*4C 00         [24] 2923 	mov	_Wheel_c_65536_154,#0x00
      000DCB 75 F0 03         [24] 2924 	mov	b,#0x03
      000DCE A4               [48] 2925 	mul	ab
      000DCF F5*4D            [12] 2926 	mov	(_Wheel_c_65536_154 + 0x0001),a
                                   2927 ;	./N76_UCS1903.c:407: c[2] = 255 - WheelPos * 3;
      000DD1 EF               [12] 2928 	mov	a,r7
      000DD2 75 F0 03         [24] 2929 	mov	b,#0x03
      000DD5 A4               [48] 2930 	mul	ab
      000DD6 D3               [12] 2931 	setb	c
      000DD7 94 FF            [12] 2932 	subb	a,#0xff
      000DD9 F4               [12] 2933 	cpl	a
      000DDA F5*4E            [12] 2934 	mov	(_Wheel_c_65536_154 + 0x0002),a
      000DDC                       2935 00106$:
                                   2936 ;	./N76_UCS1903.c:410: return c;
      000DDC 90r00r4C         [24] 2937 	mov	dptr,#_Wheel_c_65536_154
      000DDF 75 F0 40         [24] 2938 	mov	b,#0x40
                                   2939 ;	./N76_UCS1903.c:411: }
      000DE2 22               [24] 2940 	ret
                                   2941 ;------------------------------------------------------------
                                   2942 ;Allocation info for local variables in function 'theaterChase'
                                   2943 ;------------------------------------------------------------
                                   2944 ;red                       Allocated with name '_theaterChase_PARM_2'
                                   2945 ;blue                      Allocated with name '_theaterChase_PARM_3'
                                   2946 ;SpeedDelay                Allocated with name '_theaterChase_PARM_4'
                                   2947 ;green                     Allocated to registers r7 
                                   2948 ;curEffect                 Allocated to registers r6 
                                   2949 ;j                         Allocated with name '_theaterChase_j_131072_160'
                                   2950 ;q                         Allocated to registers r2 r3 
                                   2951 ;i                         Allocated to registers r0 r1 
                                   2952 ;i                         Allocated to registers r4 r5 
                                   2953 ;------------------------------------------------------------
                                   2954 ;	./N76_UCS1903.c:413: void theaterChase(uint8_t green, uint8_t red, uint8_t blue, int16_t SpeedDelay)
                                   2955 ;	-----------------------------------------
                                   2956 ;	 function theaterChase
                                   2957 ;	-----------------------------------------
      000DE3                       2958 _theaterChase:
      000DE3 AF 82            [24] 2959 	mov	r7,dpl
                                   2960 ;	./N76_UCS1903.c:415: uint8_t curEffect = effect;
      000DE5 AE*04            [24] 2961 	mov	r6,_effect
                                   2962 ;	./N76_UCS1903.c:417: for (int16_t j = 0; j < 10; j++)
      000DE7 E4               [12] 2963 	clr	a
      000DE8 F5*53            [12] 2964 	mov	_theaterChase_j_131072_160,a
      000DEA F5*54            [12] 2965 	mov	(_theaterChase_j_131072_160 + 1),a
      000DEC                       2966 00119$:
      000DEC AA*53            [24] 2967 	mov	r2,_theaterChase_j_131072_160
      000DEE AB*54            [24] 2968 	mov	r3,(_theaterChase_j_131072_160 + 1)
      000DF0 C3               [12] 2969 	clr	c
      000DF1 EA               [12] 2970 	mov	a,r2
      000DF2 94 0A            [12] 2971 	subb	a,#0x0a
      000DF4 EB               [12] 2972 	mov	a,r3
      000DF5 64 80            [12] 2973 	xrl	a,#0x80
      000DF7 94 80            [12] 2974 	subb	a,#0x80
      000DF9 40 01            [24] 2975 	jc	00163$
      000DFB 22               [24] 2976 	ret
      000DFC                       2977 00163$:
                                   2978 ;	./N76_UCS1903.c:419: for (int16_t q = 0; q < 3; q++)
      000DFC 7A 00            [12] 2979 	mov	r2,#0x00
      000DFE 7B 00            [12] 2980 	mov	r3,#0x00
      000E00                       2981 00116$:
      000E00 8A 00            [24] 2982 	mov	ar0,r2
      000E02 8B 01            [24] 2983 	mov	ar1,r3
      000E04 C3               [12] 2984 	clr	c
      000E05 E8               [12] 2985 	mov	a,r0
      000E06 94 03            [12] 2986 	subb	a,#0x03
      000E08 E9               [12] 2987 	mov	a,r1
      000E09 64 80            [12] 2988 	xrl	a,#0x80
      000E0B 94 80            [12] 2989 	subb	a,#0x80
      000E0D 40 03            [24] 2990 	jc	00164$
      000E0F 02r0Fr18         [24] 2991 	ljmp	00120$
      000E12                       2992 00164$:
                                   2993 ;	./N76_UCS1903.c:421: for (int16_t i = 0; i < NUM_LEDS; i = i + 3)
      000E12 78 00            [12] 2994 	mov	r0,#0x00
      000E14 79 00            [12] 2995 	mov	r1,#0x00
      000E16                       2996 00110$:
      000E16 88 04            [24] 2997 	mov	ar4,r0
      000E18 89 05            [24] 2998 	mov	ar5,r1
      000E1A C3               [12] 2999 	clr	c
      000E1B EC               [12] 3000 	mov	a,r4
      000E1C 95*00            [12] 3001 	subb	a,_NUM_LEDS
      000E1E ED               [12] 3002 	mov	a,r5
      000E1F 95*01            [12] 3003 	subb	a,(_NUM_LEDS + 1)
      000E21 50 46            [24] 3004 	jnc	00103$
                                   3005 ;	./N76_UCS1903.c:423: if (curEffect != effect) {_status=STT_NEW;return;}
      000E23 EE               [12] 3006 	mov	a,r6
      000E24 B5*04 02         [24] 3007 	cjne	a,_effect,00166$
      000E27 80 04            [24] 3008 	sjmp	00102$
      000E29                       3009 00166$:
      000E29 75*05 12         [24] 3010 	mov	__status,#0x12
      000E2C 22               [24] 3011 	ret
      000E2D                       3012 00102$:
                                   3013 ;	./N76_UCS1903.c:424: setPixel(i + q, green, red, blue); // turn every third pixel on
      000E2D EA               [12] 3014 	mov	a,r2
      000E2E 28               [12] 3015 	add	a,r0
      000E2F F5 82            [12] 3016 	mov	dpl,a
      000E31 EB               [12] 3017 	mov	a,r3
      000E32 39               [12] 3018 	addc	a,r1
      000E33 F5 83            [12] 3019 	mov	dph,a
      000E35 8F*09            [24] 3020 	mov	_setPixel_PARM_2,r7
      000E37 85*4F*0A         [24] 3021 	mov	_setPixel_PARM_3,_theaterChase_PARM_2
      000E3A 85*50*0B         [24] 3022 	mov	_setPixel_PARM_4,_theaterChase_PARM_3
      000E3D C0 07            [24] 3023 	push	ar7
      000E3F C0 06            [24] 3024 	push	ar6
      000E41 C0 03            [24] 3025 	push	ar3
      000E43 C0 02            [24] 3026 	push	ar2
      000E45 C0 01            [24] 3027 	push	ar1
      000E47 C0 00            [24] 3028 	push	ar0
      000E49 12r01rC9         [24] 3029 	lcall	_setPixel
      000E4C D0 00            [24] 3030 	pop	ar0
      000E4E D0 01            [24] 3031 	pop	ar1
      000E50 D0 02            [24] 3032 	pop	ar2
      000E52 D0 03            [24] 3033 	pop	ar3
      000E54 D0 06            [24] 3034 	pop	ar6
      000E56 D0 07            [24] 3035 	pop	ar7
                                   3036 ;	./N76_UCS1903.c:421: for (int16_t i = 0; i < NUM_LEDS; i = i + 3)
      000E58 88 04            [24] 3037 	mov	ar4,r0
      000E5A 89 05            [24] 3038 	mov	ar5,r1
      000E5C 74 03            [12] 3039 	mov	a,#0x03
      000E5E 2C               [12] 3040 	add	a,r4
      000E5F FC               [12] 3041 	mov	r4,a
      000E60 E4               [12] 3042 	clr	a
      000E61 3D               [12] 3043 	addc	a,r5
      000E62 FD               [12] 3044 	mov	r5,a
      000E63 8C 00            [24] 3045 	mov	ar0,r4
      000E65 8D 01            [24] 3046 	mov	ar1,r5
      000E67 80 AD            [24] 3047 	sjmp	00110$
      000E69                       3048 00103$:
                                   3049 ;	./N76_UCS1903.c:426: showStrip();
      000E69 C0 07            [24] 3050 	push	ar7
      000E6B C0 06            [24] 3051 	push	ar6
      000E6D C0 03            [24] 3052 	push	ar3
      000E6F C0 02            [24] 3053 	push	ar2
      000E71 12r01r4A         [24] 3054 	lcall	_showStrip
                                   3055 ;	./N76_UCS1903.c:428: _delay_ms(DELAY);
      000E74 85*00*00         [24] 3056 	mov	__divuint_PARM_2,_NUM_LEDS
      000E77 85*01*01         [24] 3057 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      000E7A 90 00 C8         [24] 3058 	mov	dptr,#0x00c8
      000E7D 12r00r00         [24] 3059 	lcall	__divuint
      000E80 85*02*00         [24] 3060 	mov	__mulint_PARM_2,__delay
      000E83 85*03*01         [24] 3061 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      000E86 12r00r00         [24] 3062 	lcall	__mulint
      000E89 75*00 0A         [24] 3063 	mov	__divuint_PARM_2,#0x0a
      000E8C 75*01 00         [24] 3064 	mov	(__divuint_PARM_2 + 1),#0x00
      000E8F 12r00r00         [24] 3065 	lcall	__divuint
      000E92 E5 82            [12] 3066 	mov	a,dpl
      000E94 85 83 F0         [24] 3067 	mov	b,dph
      000E97 24 01            [12] 3068 	add	a,#0x01
      000E99 FC               [12] 3069 	mov	r4,a
      000E9A E4               [12] 3070 	clr	a
      000E9B 35 F0            [12] 3071 	addc	a,b
      000E9D FD               [12] 3072 	mov	r5,a
      000E9E 8C 00            [24] 3073 	mov	ar0,r4
      000EA0 8D 01            [24] 3074 	mov	ar1,r5
      000EA2 7C 00            [12] 3075 	mov	r4,#0x00
      000EA4 7D 00            [12] 3076 	mov	r5,#0x00
      000EA6 88 82            [24] 3077 	mov	dpl,r0
      000EA8 89 83            [24] 3078 	mov	dph,r1
      000EAA 8C F0            [24] 3079 	mov	b,r4
      000EAC ED               [12] 3080 	mov	a,r5
      000EAD 12r00r00         [24] 3081 	lcall	__delay_ms
      000EB0 D0 02            [24] 3082 	pop	ar2
      000EB2 D0 03            [24] 3083 	pop	ar3
      000EB4 D0 06            [24] 3084 	pop	ar6
      000EB6 D0 07            [24] 3085 	pop	ar7
                                   3086 ;	./N76_UCS1903.c:430: for (int16_t i = 0; i < NUM_LEDS; i = i + 3)
      000EB8 7C 00            [12] 3087 	mov	r4,#0x00
      000EBA 7D 00            [12] 3088 	mov	r5,#0x00
      000EBC                       3089 00113$:
      000EBC 8C 00            [24] 3090 	mov	ar0,r4
      000EBE 8D 01            [24] 3091 	mov	ar1,r5
      000EC0 C3               [12] 3092 	clr	c
      000EC1 E8               [12] 3093 	mov	a,r0
      000EC2 95*00            [12] 3094 	subb	a,_NUM_LEDS
      000EC4 E9               [12] 3095 	mov	a,r1
      000EC5 95*01            [12] 3096 	subb	a,(_NUM_LEDS + 1)
      000EC7 50 47            [24] 3097 	jnc	00117$
                                   3098 ;	./N76_UCS1903.c:432: if (curEffect != effect) {_status=STT_NEW;return;}
      000EC9 EE               [12] 3099 	mov	a,r6
      000ECA B5*04 02         [24] 3100 	cjne	a,_effect,00168$
      000ECD 80 04            [24] 3101 	sjmp	00105$
      000ECF                       3102 00168$:
      000ECF 75*05 12         [24] 3103 	mov	__status,#0x12
      000ED2 22               [24] 3104 	ret
      000ED3                       3105 00105$:
                                   3106 ;	./N76_UCS1903.c:433: setPixel(i + q, 0, 0, 0); // turn every third pixel off
      000ED3 EA               [12] 3107 	mov	a,r2
      000ED4 2C               [12] 3108 	add	a,r4
      000ED5 F5 82            [12] 3109 	mov	dpl,a
      000ED7 EB               [12] 3110 	mov	a,r3
      000ED8 3D               [12] 3111 	addc	a,r5
      000ED9 F5 83            [12] 3112 	mov	dph,a
      000EDB 75*09 00         [24] 3113 	mov	_setPixel_PARM_2,#0x00
      000EDE 75*0A 00         [24] 3114 	mov	_setPixel_PARM_3,#0x00
      000EE1 75*0B 00         [24] 3115 	mov	_setPixel_PARM_4,#0x00
      000EE4 C0 07            [24] 3116 	push	ar7
      000EE6 C0 06            [24] 3117 	push	ar6
      000EE8 C0 05            [24] 3118 	push	ar5
      000EEA C0 04            [24] 3119 	push	ar4
      000EEC C0 03            [24] 3120 	push	ar3
      000EEE C0 02            [24] 3121 	push	ar2
      000EF0 12r01rC9         [24] 3122 	lcall	_setPixel
      000EF3 D0 02            [24] 3123 	pop	ar2
      000EF5 D0 03            [24] 3124 	pop	ar3
      000EF7 D0 04            [24] 3125 	pop	ar4
      000EF9 D0 05            [24] 3126 	pop	ar5
      000EFB D0 06            [24] 3127 	pop	ar6
      000EFD D0 07            [24] 3128 	pop	ar7
                                   3129 ;	./N76_UCS1903.c:430: for (int16_t i = 0; i < NUM_LEDS; i = i + 3)
      000EFF 8C 00            [24] 3130 	mov	ar0,r4
      000F01 8D 01            [24] 3131 	mov	ar1,r5
      000F03 74 03            [12] 3132 	mov	a,#0x03
      000F05 28               [12] 3133 	add	a,r0
      000F06 F8               [12] 3134 	mov	r0,a
      000F07 E4               [12] 3135 	clr	a
      000F08 39               [12] 3136 	addc	a,r1
      000F09 F9               [12] 3137 	mov	r1,a
      000F0A 88 04            [24] 3138 	mov	ar4,r0
      000F0C 89 05            [24] 3139 	mov	ar5,r1
      000F0E 80 AC            [24] 3140 	sjmp	00113$
      000F10                       3141 00117$:
                                   3142 ;	./N76_UCS1903.c:419: for (int16_t q = 0; q < 3; q++)
      000F10 0A               [12] 3143 	inc	r2
      000F11 BA 00 01         [24] 3144 	cjne	r2,#0x00,00169$
      000F14 0B               [12] 3145 	inc	r3
      000F15                       3146 00169$:
      000F15 02r0Er00         [24] 3147 	ljmp	00116$
      000F18                       3148 00120$:
                                   3149 ;	./N76_UCS1903.c:417: for (int16_t j = 0; j < 10; j++)
      000F18 05*53            [12] 3150 	inc	_theaterChase_j_131072_160
      000F1A E4               [12] 3151 	clr	a
      000F1B B5*53 02         [24] 3152 	cjne	a,_theaterChase_j_131072_160,00170$
      000F1E 05*54            [12] 3153 	inc	(_theaterChase_j_131072_160 + 1)
      000F20                       3154 00170$:
                                   3155 ;	./N76_UCS1903.c:437: }
      000F20 02r0DrEC         [24] 3156 	ljmp	00119$
                                   3157 ;------------------------------------------------------------
                                   3158 ;Allocation info for local variables in function 'theaterChaseRainbow'
                                   3159 ;------------------------------------------------------------
                                   3160 ;SpeedDelay                Allocated to registers 
                                   3161 ;c                         Allocated with name '_theaterChaseRainbow_c_65536_171'
                                   3162 ;curEffect                 Allocated with name '_theaterChaseRainbow_curEffect_65536_171'
                                   3163 ;j                         Allocated with name '_theaterChaseRainbow_j_131072_172'
                                   3164 ;q                         Allocated with name '_theaterChaseRainbow_q_262144_174'
                                   3165 ;i                         Allocated to registers r1 r2 
                                   3166 ;i                         Allocated to registers r6 r7 
                                   3167 ;------------------------------------------------------------
                                   3168 ;	./N76_UCS1903.c:439: void theaterChaseRainbow(int16_t SpeedDelay)
                                   3169 ;	-----------------------------------------
                                   3170 ;	 function theaterChaseRainbow
                                   3171 ;	-----------------------------------------
      000F23                       3172 _theaterChaseRainbow:
                                   3173 ;	./N76_UCS1903.c:442: uint8_t curEffect = effect;
      000F23 85*04*58         [24] 3174 	mov	_theaterChaseRainbow_curEffect_65536_171,_effect
                                   3175 ;	./N76_UCS1903.c:444: for (int16_t j = 0; j < 256; j++)
      000F26 E4               [12] 3176 	clr	a
      000F27 F5*59            [12] 3177 	mov	_theaterChaseRainbow_j_131072_172,a
      000F29 F5*5A            [12] 3178 	mov	(_theaterChaseRainbow_j_131072_172 + 1),a
      000F2B                       3179 00119$:
      000F2B AB*59            [24] 3180 	mov	r3,_theaterChaseRainbow_j_131072_172
      000F2D AC*5A            [24] 3181 	mov	r4,(_theaterChaseRainbow_j_131072_172 + 1)
      000F2F C3               [12] 3182 	clr	c
      000F30 EC               [12] 3183 	mov	a,r4
      000F31 64 80            [12] 3184 	xrl	a,#0x80
      000F33 94 81            [12] 3185 	subb	a,#0x81
      000F35 40 01            [24] 3186 	jc	00163$
      000F37 22               [24] 3187 	ret
      000F38                       3188 00163$:
                                   3189 ;	./N76_UCS1903.c:446: for (int16_t q = 0; q < 3; q++)
      000F38 E4               [12] 3190 	clr	a
      000F39 F5*5B            [12] 3191 	mov	_theaterChaseRainbow_q_262144_174,a
      000F3B F5*5C            [12] 3192 	mov	(_theaterChaseRainbow_q_262144_174 + 1),a
      000F3D                       3193 00116$:
      000F3D A9*5B            [24] 3194 	mov	r1,_theaterChaseRainbow_q_262144_174
      000F3F AA*5C            [24] 3195 	mov	r2,(_theaterChaseRainbow_q_262144_174 + 1)
      000F41 C3               [12] 3196 	clr	c
      000F42 E9               [12] 3197 	mov	a,r1
      000F43 94 03            [12] 3198 	subb	a,#0x03
      000F45 EA               [12] 3199 	mov	a,r2
      000F46 64 80            [12] 3200 	xrl	a,#0x80
      000F48 94 80            [12] 3201 	subb	a,#0x80
      000F4A 40 03            [24] 3202 	jc	00164$
      000F4C 02r10r8B         [24] 3203 	ljmp	00120$
      000F4F                       3204 00164$:
                                   3205 ;	./N76_UCS1903.c:448: for (int16_t i = 0; i < NUM_LEDS; i = i + 3)
      000F4F 79 00            [12] 3206 	mov	r1,#0x00
      000F51 7A 00            [12] 3207 	mov	r2,#0x00
      000F53                       3208 00110$:
      000F53 89 00            [24] 3209 	mov	ar0,r1
      000F55 8A 06            [24] 3210 	mov	ar6,r2
      000F57 C3               [12] 3211 	clr	c
      000F58 E8               [12] 3212 	mov	a,r0
      000F59 95*00            [12] 3213 	subb	a,_NUM_LEDS
      000F5B EE               [12] 3214 	mov	a,r6
      000F5C 95*01            [12] 3215 	subb	a,(_NUM_LEDS + 1)
      000F5E 40 03            [24] 3216 	jc	00165$
      000F60 02r0FrFA         [24] 3217 	ljmp	00103$
      000F63                       3218 00165$:
                                   3219 ;	./N76_UCS1903.c:450: if (curEffect != effect) {_status=STT_NEW;return;}
      000F63 E5*04            [12] 3220 	mov	a,_effect
      000F65 B5*58 02         [24] 3221 	cjne	a,_theaterChaseRainbow_curEffect_65536_171,00166$
      000F68 80 04            [24] 3222 	sjmp	00102$
      000F6A                       3223 00166$:
      000F6A 75*05 12         [24] 3224 	mov	__status,#0x12
      000F6D 22               [24] 3225 	ret
      000F6E                       3226 00102$:
                                   3227 ;	./N76_UCS1903.c:451: c = Wheel((i + j) % 255);
      000F6E E5*59            [12] 3228 	mov	a,_theaterChaseRainbow_j_131072_172
      000F70 29               [12] 3229 	add	a,r1
      000F71 FD               [12] 3230 	mov	r5,a
      000F72 E5*5A            [12] 3231 	mov	a,(_theaterChaseRainbow_j_131072_172 + 1)
      000F74 3A               [12] 3232 	addc	a,r2
      000F75 FE               [12] 3233 	mov	r6,a
      000F76 8D 82            [24] 3234 	mov	dpl,r5
      000F78 8E 83            [24] 3235 	mov	dph,r6
      000F7A 75*00 FF         [24] 3236 	mov	__modsint_PARM_2,#0xff
      000F7D 75*01 00         [24] 3237 	mov	(__modsint_PARM_2 + 1),#0x00
      000F80 C0 02            [24] 3238 	push	ar2
      000F82 C0 01            [24] 3239 	push	ar1
      000F84 12r00r00         [24] 3240 	lcall	__modsint
      000F87 12r0Dr82         [24] 3241 	lcall	_Wheel
      000F8A 85 82*55         [24] 3242 	mov	_theaterChaseRainbow_c_65536_171,dpl
      000F8D 85 83*56         [24] 3243 	mov	(_theaterChaseRainbow_c_65536_171 + 1),dph
      000F90 85 F0*57         [24] 3244 	mov	(_theaterChaseRainbow_c_65536_171 + 2),b
      000F93 D0 01            [24] 3245 	pop	ar1
      000F95 D0 02            [24] 3246 	pop	ar2
                                   3247 ;	./N76_UCS1903.c:452: setPixel(i + q, *c, *(c + 1), *(c + 2)); // turn every third pixel on
      000F97 E5*5B            [12] 3248 	mov	a,_theaterChaseRainbow_q_262144_174
      000F99 29               [12] 3249 	add	a,r1
      000F9A FC               [12] 3250 	mov	r4,a
      000F9B E5*5C            [12] 3251 	mov	a,(_theaterChaseRainbow_q_262144_174 + 1)
      000F9D 3A               [12] 3252 	addc	a,r2
      000F9E FF               [12] 3253 	mov	r7,a
      000F9F 85*55 82         [24] 3254 	mov	dpl,_theaterChaseRainbow_c_65536_171
      000FA2 85*56 83         [24] 3255 	mov	dph,(_theaterChaseRainbow_c_65536_171 + 1)
      000FA5 85*57 F0         [24] 3256 	mov	b,(_theaterChaseRainbow_c_65536_171 + 2)
      000FA8 12r00r00         [24] 3257 	lcall	__gptrget
      000FAB F5*09            [12] 3258 	mov	_setPixel_PARM_2,a
      000FAD 74 01            [12] 3259 	mov	a,#0x01
      000FAF 25*55            [12] 3260 	add	a,_theaterChaseRainbow_c_65536_171
      000FB1 FB               [12] 3261 	mov	r3,a
      000FB2 E4               [12] 3262 	clr	a
      000FB3 35*56            [12] 3263 	addc	a,(_theaterChaseRainbow_c_65536_171 + 1)
      000FB5 FD               [12] 3264 	mov	r5,a
      000FB6 AE*57            [24] 3265 	mov	r6,(_theaterChaseRainbow_c_65536_171 + 2)
      000FB8 8B 82            [24] 3266 	mov	dpl,r3
      000FBA 8D 83            [24] 3267 	mov	dph,r5
      000FBC 8E F0            [24] 3268 	mov	b,r6
      000FBE 12r00r00         [24] 3269 	lcall	__gptrget
      000FC1 F5*0A            [12] 3270 	mov	_setPixel_PARM_3,a
      000FC3 74 02            [12] 3271 	mov	a,#0x02
      000FC5 25*55            [12] 3272 	add	a,_theaterChaseRainbow_c_65536_171
      000FC7 FB               [12] 3273 	mov	r3,a
      000FC8 E4               [12] 3274 	clr	a
      000FC9 35*56            [12] 3275 	addc	a,(_theaterChaseRainbow_c_65536_171 + 1)
      000FCB FD               [12] 3276 	mov	r5,a
      000FCC AE*57            [24] 3277 	mov	r6,(_theaterChaseRainbow_c_65536_171 + 2)
      000FCE 8B 82            [24] 3278 	mov	dpl,r3
      000FD0 8D 83            [24] 3279 	mov	dph,r5
      000FD2 8E F0            [24] 3280 	mov	b,r6
      000FD4 12r00r00         [24] 3281 	lcall	__gptrget
      000FD7 F5*0B            [12] 3282 	mov	_setPixel_PARM_4,a
      000FD9 8C 82            [24] 3283 	mov	dpl,r4
      000FDB 8F 83            [24] 3284 	mov	dph,r7
      000FDD C0 02            [24] 3285 	push	ar2
      000FDF C0 01            [24] 3286 	push	ar1
      000FE1 12r01rC9         [24] 3287 	lcall	_setPixel
      000FE4 D0 01            [24] 3288 	pop	ar1
      000FE6 D0 02            [24] 3289 	pop	ar2
                                   3290 ;	./N76_UCS1903.c:448: for (int16_t i = 0; i < NUM_LEDS; i = i + 3)
      000FE8 89 06            [24] 3291 	mov	ar6,r1
      000FEA 8A 07            [24] 3292 	mov	ar7,r2
      000FEC 74 03            [12] 3293 	mov	a,#0x03
      000FEE 2E               [12] 3294 	add	a,r6
      000FEF FE               [12] 3295 	mov	r6,a
      000FF0 E4               [12] 3296 	clr	a
      000FF1 3F               [12] 3297 	addc	a,r7
      000FF2 FF               [12] 3298 	mov	r7,a
      000FF3 8E 01            [24] 3299 	mov	ar1,r6
      000FF5 8F 02            [24] 3300 	mov	ar2,r7
      000FF7 02r0Fr53         [24] 3301 	ljmp	00110$
      000FFA                       3302 00103$:
                                   3303 ;	./N76_UCS1903.c:454: showStrip();
      000FFA 12r01r4A         [24] 3304 	lcall	_showStrip
                                   3305 ;	./N76_UCS1903.c:456: _delay_ms(DELAY);
      000FFD 85*00*00         [24] 3306 	mov	__divuint_PARM_2,_NUM_LEDS
      001000 85*01*01         [24] 3307 	mov	(__divuint_PARM_2 + 1),(_NUM_LEDS + 1)
      001003 90 00 C8         [24] 3308 	mov	dptr,#0x00c8
      001006 12r00r00         [24] 3309 	lcall	__divuint
      001009 85*02*00         [24] 3310 	mov	__mulint_PARM_2,__delay
      00100C 85*03*01         [24] 3311 	mov	(__mulint_PARM_2 + 1),(__delay + 1)
      00100F 12r00r00         [24] 3312 	lcall	__mulint
      001012 75*00 0A         [24] 3313 	mov	__divuint_PARM_2,#0x0a
      001015 75*01 00         [24] 3314 	mov	(__divuint_PARM_2 + 1),#0x00
      001018 12r00r00         [24] 3315 	lcall	__divuint
      00101B E5 82            [12] 3316 	mov	a,dpl
      00101D 85 83 F0         [24] 3317 	mov	b,dph
      001020 24 01            [12] 3318 	add	a,#0x01
      001022 FE               [12] 3319 	mov	r6,a
      001023 E4               [12] 3320 	clr	a
      001024 35 F0            [12] 3321 	addc	a,b
      001026 FF               [12] 3322 	mov	r7,a
      001027 7D 00            [12] 3323 	mov	r5,#0x00
      001029 7C 00            [12] 3324 	mov	r4,#0x00
      00102B 8E 82            [24] 3325 	mov	dpl,r6
      00102D 8F 83            [24] 3326 	mov	dph,r7
      00102F 8D F0            [24] 3327 	mov	b,r5
      001031 EC               [12] 3328 	mov	a,r4
      001032 12r00r00         [24] 3329 	lcall	__delay_ms
                                   3330 ;	./N76_UCS1903.c:458: for (int16_t i = 0; i < NUM_LEDS; i = i + 3)
      001035 7E 00            [12] 3331 	mov	r6,#0x00
      001037 7F 00            [12] 3332 	mov	r7,#0x00
      001039                       3333 00113$:
      001039 8E 04            [24] 3334 	mov	ar4,r6
      00103B 8F 05            [24] 3335 	mov	ar5,r7
      00103D C3               [12] 3336 	clr	c
      00103E EC               [12] 3337 	mov	a,r4
      00103F 95*00            [12] 3338 	subb	a,_NUM_LEDS
      001041 ED               [12] 3339 	mov	a,r5
      001042 95*01            [12] 3340 	subb	a,(_NUM_LEDS + 1)
      001044 50 3A            [24] 3341 	jnc	00117$
                                   3342 ;	./N76_UCS1903.c:460: if (curEffect != effect) {_status=STT_NEW;return;}
      001046 E5*04            [12] 3343 	mov	a,_effect
      001048 B5*58 02         [24] 3344 	cjne	a,_theaterChaseRainbow_curEffect_65536_171,00168$
      00104B 80 04            [24] 3345 	sjmp	00105$
      00104D                       3346 00168$:
      00104D 75*05 12         [24] 3347 	mov	__status,#0x12
      001050 22               [24] 3348 	ret
      001051                       3349 00105$:
                                   3350 ;	./N76_UCS1903.c:461: setPixel(i + q, 0, 0, 0); // turn every third pixel off
      001051 E5*5B            [12] 3351 	mov	a,_theaterChaseRainbow_q_262144_174
      001053 2E               [12] 3352 	add	a,r6
      001054 F5 82            [12] 3353 	mov	dpl,a
      001056 E5*5C            [12] 3354 	mov	a,(_theaterChaseRainbow_q_262144_174 + 1)
      001058 3F               [12] 3355 	addc	a,r7
      001059 F5 83            [12] 3356 	mov	dph,a
      00105B 75*09 00         [24] 3357 	mov	_setPixel_PARM_2,#0x00
      00105E 75*0A 00         [24] 3358 	mov	_setPixel_PARM_3,#0x00
      001061 75*0B 00         [24] 3359 	mov	_setPixel_PARM_4,#0x00
      001064 C0 07            [24] 3360 	push	ar7
      001066 C0 06            [24] 3361 	push	ar6
      001068 12r01rC9         [24] 3362 	lcall	_setPixel
      00106B D0 06            [24] 3363 	pop	ar6
      00106D D0 07            [24] 3364 	pop	ar7
                                   3365 ;	./N76_UCS1903.c:458: for (int16_t i = 0; i < NUM_LEDS; i = i + 3)
      00106F 8E 04            [24] 3366 	mov	ar4,r6
      001071 8F 05            [24] 3367 	mov	ar5,r7
      001073 74 03            [12] 3368 	mov	a,#0x03
      001075 2C               [12] 3369 	add	a,r4
      001076 FC               [12] 3370 	mov	r4,a
      001077 E4               [12] 3371 	clr	a
      001078 3D               [12] 3372 	addc	a,r5
      001079 FD               [12] 3373 	mov	r5,a
      00107A 8C 06            [24] 3374 	mov	ar6,r4
      00107C 8D 07            [24] 3375 	mov	ar7,r5
      00107E 80 B9            [24] 3376 	sjmp	00113$
      001080                       3377 00117$:
                                   3378 ;	./N76_UCS1903.c:446: for (int16_t q = 0; q < 3; q++)
      001080 05*5B            [12] 3379 	inc	_theaterChaseRainbow_q_262144_174
      001082 E4               [12] 3380 	clr	a
      001083 B5*5B 02         [24] 3381 	cjne	a,_theaterChaseRainbow_q_262144_174,00169$
      001086 05*5C            [12] 3382 	inc	(_theaterChaseRainbow_q_262144_174 + 1)
      001088                       3383 00169$:
      001088 02r0Fr3D         [24] 3384 	ljmp	00116$
      00108B                       3385 00120$:
                                   3386 ;	./N76_UCS1903.c:444: for (int16_t j = 0; j < 256; j++)
      00108B 05*59            [12] 3387 	inc	_theaterChaseRainbow_j_131072_172
      00108D E4               [12] 3388 	clr	a
      00108E B5*59 02         [24] 3389 	cjne	a,_theaterChaseRainbow_j_131072_172,00170$
      001091 05*5A            [12] 3390 	inc	(_theaterChaseRainbow_j_131072_172 + 1)
      001093                       3391 00170$:
                                   3392 ;	./N76_UCS1903.c:465: }
      001093 02r0Fr2B         [24] 3393 	ljmp	00119$
                                   3394 ;------------------------------------------------------------
                                   3395 ;Allocation info for local variables in function 'TIM2_begin'
                                   3396 ;------------------------------------------------------------
                                   3397 ;reload                    Allocated with name '_TIM2_begin_PARM_2'
                                   3398 ;tim_div_x                 Allocated to registers r7 
                                   3399 ;------------------------------------------------------------
                                   3400 ;	./N76_UCS1903.c:468: void TIM2_begin(uint8_t tim_div_x, uint16_t reload)
                                   3401 ;	-----------------------------------------
                                   3402 ;	 function TIM2_begin
                                   3403 ;	-----------------------------------------
      001096                       3404 _TIM2_begin:
      001096 AF 82            [24] 3405 	mov	r7,dpl
                                   3406 ;	./N76_UCS1903.c:475: T2MOD&=~0x70;
      001098 53 C9 8F         [24] 3407 	anl	_t2mod,#0x8f
                                   3408 ;	./N76_UCS1903.c:476: T2MOD|=tim_div_x;
      00109B EF               [12] 3409 	mov	a,r7
      00109C 42 C9            [12] 3410 	orl	_t2mod,a
                                   3411 ;	./N76_UCS1903.c:479: T2CON&=~(1<<0);T2MOD|=(1<<7);T2MOD|=(1<<3);
      00109E 53 C8 FE         [24] 3412 	anl	_t2con,#0xfe
      0010A1 43 C9 80         [24] 3413 	orl	_t2mod,#0x80
      0010A4 43 C9 08         [24] 3414 	orl	_t2mod,#0x08
                                   3415 ;	./N76_UCS1903.c:482: RCMP2L = reload;//100ms
      0010A7 85*00 CA         [24] 3416 	mov	_rcmp2l,_TIM2_begin_PARM_2
                                   3417 ;	./N76_UCS1903.c:484: RCMP2H = reload>>8;
      0010AA 85*01 CB         [24] 3418 	mov	_rcmp2h,(_TIM2_begin_PARM_2 + 1)
                                   3419 ;	./N76_UCS1903.c:487: TL2 = 0;
      0010AD 75 CC 00         [24] 3420 	mov	_tl2,#0x00
                                   3421 ;	./N76_UCS1903.c:488: TH2 = 0;
      0010B0 75 CD 00         [24] 3422 	mov	_th2,#0x00
                                   3423 ;	./N76_UCS1903.c:491: setb(EIE, 7);                                    // Enable Timer2 interrupt
      0010B3 43 9B 80         [24] 3424 	orl	_eie,#0x80
                                   3425 ;	./N76_UCS1903.c:493: sei();
      0010B6 43 A8 80         [24] 3426 	orl	_ie,#0x80
                                   3427 ;	./N76_UCS1903.c:495: setb(T2CON, 2);                                    // Timer2 run
      0010B9 43 C8 04         [24] 3428 	orl	_t2con,#0x04
                                   3429 ;	./N76_UCS1903.c:496: }
      0010BC 22               [24] 3430 	ret
                                   3431 ;------------------------------------------------------------
                                   3432 ;Allocation info for local variables in function 'main'
                                   3433 ;------------------------------------------------------------
                                   3434 ;	./N76_UCS1903.c:498: void main(void)
                                   3435 ;	-----------------------------------------
                                   3436 ;	 function main
                                   3437 ;	-----------------------------------------
      0010BD                       3438 _main:
                                   3439 ;	./N76_UCS1903.c:500: effect=APROM_read_byte(ADDR_EFF);
      0010BD 90 20 00         [24] 3440 	mov	dptr,#0x2000
      0010C0 12r00r00         [24] 3441 	lcall	_APROM_read_byte
      0010C3 85 82*04         [24] 3442 	mov	_effect,dpl
                                   3443 ;	./N76_UCS1903.c:501: if (effect>=12) effect=0;
      0010C6 74 F4            [12] 3444 	mov	a,#0x100 - 0x0c
      0010C8 25*04            [12] 3445 	add	a,_effect
      0010CA 50 03            [24] 3446 	jnc	00102$
      0010CC 75*04 00         [24] 3447 	mov	_effect,#0x00
      0010CF                       3448 00102$:
                                   3449 ;	./N76_UCS1903.c:504: CKDIV = 0x00; // 16MHz
      0010CF 75 95 00         [24] 3450 	mov	_ckdiv,#0x00
                                   3451 ;	./N76_UCS1903.c:505: clrb(LED_PxM1, LED_PIN);
      0010D2 53 B1 BF         [24] 3452 	anl	_p0m1,#0xbf
                                   3453 ;	./N76_UCS1903.c:506: setb(LED_PxM2, LED_PIN);
      0010D5 43 B2 40         [24] 3454 	orl	_p0m2,#0x40
                                   3455 ;	./N76_UCS1903.c:507: clrb(LED_PORT, LED_PIN);
      0010D8 53 80 BF         [24] 3456 	anl	_p0,#0xbf
                                   3457 ;	./N76_UCS1903.c:509: clrb(SW_PxM1, SW50_PIN);
      0010DB 53 B1 FE         [24] 3458 	anl	_p0m1,#0xfe
                                   3459 ;	./N76_UCS1903.c:510: setb(SW_PxM2, SW50_PIN);
      0010DE 43 B2 01         [24] 3460 	orl	_p0m2,#0x01
                                   3461 ;	./N76_UCS1903.c:512: clrb(SW_PxM1, SW100_PIN);
      0010E1 53 B1 FD         [24] 3462 	anl	_p0m1,#0xfd
                                   3463 ;	./N76_UCS1903.c:513: setb(SW_PxM2, SW100_PIN);
      0010E4 43 B2 02         [24] 3464 	orl	_p0m2,#0x02
                                   3465 ;	./N76_UCS1903.c:515: clrb(SW_PxM1, SW150_PIN);
      0010E7 53 B1 FB         [24] 3466 	anl	_p0m1,#0xfb
                                   3467 ;	./N76_UCS1903.c:516: setb(SW_PxM2, SW150_PIN);
      0010EA 43 B2 04         [24] 3468 	orl	_p0m2,#0x04
                                   3469 ;	./N76_UCS1903.c:518: clrb(SW_PxM1, SW200_PIN);
      0010ED 53 B1 F7         [24] 3470 	anl	_p0m1,#0xf7
                                   3471 ;	./N76_UCS1903.c:519: setb(SW_PxM2, SW200_PIN);
      0010F0 43 B2 08         [24] 3472 	orl	_p0m2,#0x08
                                   3473 ;	./N76_UCS1903.c:521: SW_PORT |= 0x0F;
      0010F3 43 80 0F         [24] 3474 	orl	_p0,#0x0f
                                   3475 ;	./N76_UCS1903.c:523: clrb(BTN_PxM1, BTN_PIN);
      0010F6 53 B1 EF         [24] 3476 	anl	_p0m1,#0xef
                                   3477 ;	./N76_UCS1903.c:524: setb(BTN_PxM2, BTN_PIN);
      0010F9 43 B2 10         [24] 3478 	orl	_p0m2,#0x10
                                   3479 ;	./N76_UCS1903.c:525: setb(BTN_PORT, BTN_PIN);
      0010FC 43 80 10         [24] 3480 	orl	_p0,#0x10
                                   3481 ;	./N76_UCS1903.c:528: ADCCON0&=0xF0;
      0010FF 53 E8 F0         [24] 3482 	anl	_adccon0,#0xf0
                                   3483 ;	./N76_UCS1903.c:529: ADCCON0|=0x07;
      001102 43 E8 07         [24] 3484 	orl	_adccon0,#0x07
                                   3485 ;	./N76_UCS1903.c:532: clrb(P1M2, 1);
      001105 53 B4 FD         [24] 3486 	anl	_p1m2,#0xfd
                                   3487 ;	./N76_UCS1903.c:533: setb(P1M1, 1);
      001108 43 B3 02         [24] 3488 	orl	_p1m1,#0x02
                                   3489 ;	./N76_UCS1903.c:534: AINDIDS=0x00;
      00110B 75 F6 00         [24] 3490 	mov	_aindids,#0x00
                                   3491 ;	./N76_UCS1903.c:535: AINDIDS|=(1<<7);
      00110E 43 F6 80         [24] 3492 	orl	_aindids,#0x80
                                   3493 ;	./N76_UCS1903.c:536: ADCCON1|=(1<<0);
      001111 43 E1 01         [24] 3494 	orl	_adccon1,#0x01
                                   3495 ;	./N76_UCS1903.c:537: setb(IE, EADC);//enable interruppt ADC
      001114 43 A8 40         [24] 3496 	orl	_ie,#0x40
                                   3497 ;	./N76_UCS1903.c:540: setb(PICON, 6);
      001117 43 E9 40         [24] 3498 	orl	_picon,#0x40
                                   3499 ;	./N76_UCS1903.c:541: setb(PINEN, BTN_PIN);// enable falling edge
      00111A 43 EA 10         [24] 3500 	orl	_pinen,#0x10
                                   3501 ;	./N76_UCS1903.c:542: clrb(PIPEN, BTN_PIN);// disable rasing edge
      00111D 53 EB EF         [24] 3502 	anl	_pipen,#0xef
                                   3503 ;	./N76_UCS1903.c:545: setb(EIE , 1); // set external interrupt 0 at falling edge
      001120 43 9B 02         [24] 3504 	orl	_eie,#0x02
                                   3505 ;	./N76_UCS1903.c:547: clearAll();
      001123 12r01r0F         [24] 3506 	lcall	_clearAll
                                   3507 ;	./N76_UCS1903.c:548: TIM2_begin(0x70, 65536-15625);
      001126 75*00 F7         [24] 3508 	mov	_TIM2_begin_PARM_2,#0xf7
      001129 75*01 C2         [24] 3509 	mov	(_TIM2_begin_PARM_2 + 1),#0xc2
      00112C 75 82 70         [24] 3510 	mov	dpl,#0x70
      00112F 12r10r96         [24] 3511 	lcall	_TIM2_begin
                                   3512 ;	./N76_UCS1903.c:549: sei();           // Enable global interrupt
      001132 43 A8 80         [24] 3513 	orl	_ie,#0x80
                                   3514 ;	./N76_UCS1903.c:551: setb(ADCCON0, 6);
      001135 43 E8 40         [24] 3515 	orl	_adccon0,#0x40
                                   3516 ;	./N76_UCS1903.c:552: if (inbit(SW_PORT, SW50_PIN) == 0) NUM_LEDS = 50;
      001138 74 01            [12] 3517 	mov	a,#0x01
      00113A 55 80            [12] 3518 	anl	a,_p0
      00113C FF               [12] 3519 	mov	r7,a
      00113D 70 07            [24] 3520 	jnz	00112$
      00113F 75*00 32         [24] 3521 	mov	_NUM_LEDS,#0x32
      001142 F5*01            [12] 3522 	mov	(_NUM_LEDS + 1),a
      001144 80 32            [24] 3523 	sjmp	00136$
      001146                       3524 00112$:
                                   3525 ;	./N76_UCS1903.c:553: else if (inbit(SW_PORT, SW100_PIN) == 0) NUM_LEDS = 100;
      001146 74 02            [12] 3526 	mov	a,#0x02
      001148 55 80            [12] 3527 	anl	a,_p0
      00114A C3               [12] 3528 	clr	c
      00114B 13               [12] 3529 	rrc	a
      00114C FF               [12] 3530 	mov	r7,a
      00114D 70 07            [24] 3531 	jnz	00109$
      00114F 75*00 64         [24] 3532 	mov	_NUM_LEDS,#0x64
      001152 F5*01            [12] 3533 	mov	(_NUM_LEDS + 1),a
      001154 80 22            [24] 3534 	sjmp	00136$
      001156                       3535 00109$:
                                   3536 ;	./N76_UCS1903.c:554: else if (inbit(SW_PORT, SW150_PIN) == 0) NUM_LEDS = 150;
      001156 74 04            [12] 3537 	mov	a,#0x04
      001158 55 80            [12] 3538 	anl	a,_p0
      00115A 03               [12] 3539 	rr	a
      00115B 03               [12] 3540 	rr	a
      00115C 54 3F            [12] 3541 	anl	a,#0x3f
      00115E FF               [12] 3542 	mov	r7,a
      00115F 70 07            [24] 3543 	jnz	00106$
      001161 75*00 96         [24] 3544 	mov	_NUM_LEDS,#0x96
      001164 F5*01            [12] 3545 	mov	(_NUM_LEDS + 1),a
      001166 80 10            [24] 3546 	sjmp	00136$
      001168                       3547 00106$:
                                   3548 ;	./N76_UCS1903.c:555: else if (inbit(SW_PORT, SW200_PIN) == 0) NUM_LEDS = 200;
      001168 74 08            [12] 3549 	mov	a,#0x08
      00116A 55 80            [12] 3550 	anl	a,_p0
      00116C C4               [12] 3551 	swap	a
      00116D 23               [12] 3552 	rl	a
      00116E 54 1F            [12] 3553 	anl	a,#0x1f
      001170 FF               [12] 3554 	mov	r7,a
      001171 70 05            [24] 3555 	jnz	00136$
      001173 75*00 C8         [24] 3556 	mov	_NUM_LEDS,#0xc8
      001176 F5*01            [12] 3557 	mov	(_NUM_LEDS + 1),a
                                   3558 ;	./N76_UCS1903.c:557: while (1)
      001178                       3559 00136$:
                                   3560 ;	./N76_UCS1903.c:559: switch (effect)
      001178 E5*04            [12] 3561 	mov	a,_effect
      00117A 24 F4            [12] 3562 	add	a,#0xff - 0x0b
      00117C 50 03            [24] 3563 	jnc	00189$
      00117E 02r13r79         [24] 3564 	ljmp	00132$
      001181                       3565 00189$:
      001181 E5*04            [12] 3566 	mov	a,_effect
      001183 24 0B            [12] 3567 	add	a,#(00190$-3-.)
      001185 83               [24] 3568 	movc	a,@a+pc
      001186 F5 82            [12] 3569 	mov	dpl,a
      001188 E5*04            [12] 3570 	mov	a,_effect
      00118A 24 10            [12] 3571 	add	a,#(00191$-3-.)
      00118C 83               [24] 3572 	movc	a,@a+pc
      00118D F5 83            [12] 3573 	mov	dph,a
      00118F E4               [12] 3574 	clr	a
      001190 73               [24] 3575 	jmp	@a+dptr
      001191                       3576 00190$:
      001191rA9                    3577 	.db	00114$
      001192rE0                    3578 	.db	00119$
      001193r0C                    3579 	.db	00120$
      001194r2D                    3580 	.db	00121$
      001195r6B                    3581 	.db	00122$
      001196r89                    3582 	.db	00123$
      001197rB5                    3583 	.db	00124$
      001198rC9                    3584 	.db	00125$
      001199rF0                    3585 	.db	00126$
      00119Ar3A                    3586 	.db	00129$
      00119Br42                    3587 	.db	00130$
      00119Cr73                    3588 	.db	00131$
      00119D                       3589 00191$:
      00119Ds11                    3590 	.db	00114$>>8
      00119Es11                    3591 	.db	00119$>>8
      00119Fs12                    3592 	.db	00120$>>8
      0011A0s12                    3593 	.db	00121$>>8
      0011A1s12                    3594 	.db	00122$>>8
      0011A2s12                    3595 	.db	00123$>>8
      0011A3s12                    3596 	.db	00124$>>8
      0011A4s12                    3597 	.db	00125$>>8
      0011A5s12                    3598 	.db	00126$>>8
      0011A6s13                    3599 	.db	00129$>>8
      0011A7s13                    3600 	.db	00130$>>8
      0011A8s13                    3601 	.db	00131$>>8
                                   3602 ;	./N76_UCS1903.c:561: case 0:
      0011A9                       3603 00114$:
                                   3604 ;	./N76_UCS1903.c:564: FadeInOut(0x00, 0xFF, 0x00); // r
      0011A9 75*0E FF         [24] 3605 	mov	_FadeInOut_PARM_2,#0xff
      0011AC 75*0F 00         [24] 3606 	mov	_FadeInOut_PARM_3,#0x00
      0011AF 75 82 00         [24] 3607 	mov	dpl,#0x00
      0011B2 12r02r49         [24] 3608 	lcall	_FadeInOut
                                   3609 ;	./N76_UCS1903.c:565: if (_status==STT_NEW) break;
      0011B5 74 12            [12] 3610 	mov	a,#0x12
      0011B7 B5*05 03         [24] 3611 	cjne	a,__status,00192$
      0011BA 02r13r79         [24] 3612 	ljmp	00132$
      0011BD                       3613 00192$:
                                   3614 ;	./N76_UCS1903.c:566: FadeInOut(0xFF, 0x00, 0x00); // g
      0011BD 75*0E 00         [24] 3615 	mov	_FadeInOut_PARM_2,#0x00
      0011C0 75*0F 00         [24] 3616 	mov	_FadeInOut_PARM_3,#0x00
      0011C3 75 82 FF         [24] 3617 	mov	dpl,#0xff
      0011C6 12r02r49         [24] 3618 	lcall	_FadeInOut
                                   3619 ;	./N76_UCS1903.c:567: if (_status==STT_NEW) break;
      0011C9 74 12            [12] 3620 	mov	a,#0x12
      0011CB B5*05 03         [24] 3621 	cjne	a,__status,00193$
      0011CE 02r13r79         [24] 3622 	ljmp	00132$
      0011D1                       3623 00193$:
                                   3624 ;	./N76_UCS1903.c:568: FadeInOut(0x00, 0x00, 0xFF); // b
      0011D1 75*0E 00         [24] 3625 	mov	_FadeInOut_PARM_2,#0x00
      0011D4 75*0F FF         [24] 3626 	mov	_FadeInOut_PARM_3,#0xff
      0011D7 75 82 00         [24] 3627 	mov	dpl,#0x00
      0011DA 12r02r49         [24] 3628 	lcall	_FadeInOut
                                   3629 ;	./N76_UCS1903.c:569: break;
      0011DD 02r13r79         [24] 3630 	ljmp	00132$
                                   3631 ;	./N76_UCS1903.c:571: case 1:
      0011E0                       3632 00119$:
                                   3633 ;	./N76_UCS1903.c:574: FadeInOut( random(0xFF), random(0xFF),  random(0xFF)); // green
      0011E0 90 00 FF         [24] 3634 	mov	dptr,#0x00ff
      0011E3 12r00r00         [24] 3635 	lcall	_random
      0011E6 AE 82            [24] 3636 	mov	r6,dpl
      0011E8 90 00 FF         [24] 3637 	mov	dptr,#0x00ff
      0011EB C0 06            [24] 3638 	push	ar6
      0011ED 12r00r00         [24] 3639 	lcall	_random
      0011F0 AD 82            [24] 3640 	mov	r5,dpl
      0011F2 90 00 FF         [24] 3641 	mov	dptr,#0x00ff
      0011F5 C0 05            [24] 3642 	push	ar5
      0011F7 12r00r00         [24] 3643 	lcall	_random
      0011FA AC 82            [24] 3644 	mov	r4,dpl
      0011FC D0 05            [24] 3645 	pop	ar5
      0011FE D0 06            [24] 3646 	pop	ar6
      001200 8C*0F            [24] 3647 	mov	_FadeInOut_PARM_3,r4
      001202 8D*0E            [24] 3648 	mov	_FadeInOut_PARM_2,r5
      001204 8E 82            [24] 3649 	mov	dpl,r6
      001206 12r02r49         [24] 3650 	lcall	_FadeInOut
                                   3651 ;	./N76_UCS1903.c:575: break;
      001209 02r13r79         [24] 3652 	ljmp	00132$
                                   3653 ;	./N76_UCS1903.c:578: case 2:
      00120C                       3654 00120$:
                                   3655 ;	./N76_UCS1903.c:581: Strobe(0xFF, 0xFF, 0xFF, 10, 50, 1000);
      00120C 75*16 FF         [24] 3656 	mov	_Strobe_PARM_2,#0xff
      00120F 75*17 FF         [24] 3657 	mov	_Strobe_PARM_3,#0xff
      001212 75*18 0A         [24] 3658 	mov	_Strobe_PARM_4,#0x0a
      001215 75*19 00         [24] 3659 	mov	(_Strobe_PARM_4 + 1),#0x00
      001218 75*1A 32         [24] 3660 	mov	_Strobe_PARM_5,#0x32
      00121B 75*1B 00         [24] 3661 	mov	(_Strobe_PARM_5 + 1),#0x00
      00121E 75*1C E8         [24] 3662 	mov	_Strobe_PARM_6,#0xe8
      001221 75*1D 03         [24] 3663 	mov	(_Strobe_PARM_6 + 1),#0x03
      001224 75 82 FF         [24] 3664 	mov	dpl,#0xff
      001227 12r04rE4         [24] 3665 	lcall	_Strobe
                                   3666 ;	./N76_UCS1903.c:582: break;
      00122A 02r13r79         [24] 3667 	ljmp	00132$
                                   3668 ;	./N76_UCS1903.c:585: case 3:
      00122D                       3669 00121$:
                                   3670 ;	./N76_UCS1903.c:588: CylonBounce(RANDOM_GRB, 4, 10, 50);
      00122D 90 00 FF         [24] 3671 	mov	dptr,#0x00ff
      001230 12r00r00         [24] 3672 	lcall	_random
      001233 AE 82            [24] 3673 	mov	r6,dpl
      001235 90 00 FF         [24] 3674 	mov	dptr,#0x00ff
      001238 C0 06            [24] 3675 	push	ar6
      00123A 12r00r00         [24] 3676 	lcall	_random
      00123D AD 82            [24] 3677 	mov	r5,dpl
      00123F 90 00 FF         [24] 3678 	mov	dptr,#0x00ff
      001242 C0 05            [24] 3679 	push	ar5
      001244 12r00r00         [24] 3680 	lcall	_random
      001247 AC 82            [24] 3681 	mov	r4,dpl
      001249 D0 05            [24] 3682 	pop	ar5
      00124B D0 06            [24] 3683 	pop	ar6
      00124D 8C*1F            [24] 3684 	mov	_CylonBounce_PARM_3,r4
      00124F 8D*1E            [24] 3685 	mov	_CylonBounce_PARM_2,r5
      001251 75*20 04         [24] 3686 	mov	_CylonBounce_PARM_4,#0x04
      001254 75*21 00         [24] 3687 	mov	(_CylonBounce_PARM_4 + 1),#0x00
      001257 75*22 0A         [24] 3688 	mov	_CylonBounce_PARM_5,#0x0a
      00125A 75*23 00         [24] 3689 	mov	(_CylonBounce_PARM_5 + 1),#0x00
      00125D 75*24 32         [24] 3690 	mov	_CylonBounce_PARM_6,#0x32
      001260 75*25 00         [24] 3691 	mov	(_CylonBounce_PARM_6 + 1),#0x00
      001263 8E 82            [24] 3692 	mov	dpl,r6
      001265 12r05rC9         [24] 3693 	lcall	_CylonBounce
                                   3694 ;	./N76_UCS1903.c:589: break;
      001268 02r13r79         [24] 3695 	ljmp	00132$
                                   3696 ;	./N76_UCS1903.c:592: case 4:
      00126B                       3697 00122$:
                                   3698 ;	./N76_UCS1903.c:595: Twinkle(0xFF, 0x00, 0x00, 10, 100, false);
      00126B 75*2E 00         [24] 3699 	mov	_Twinkle_PARM_2,#0x00
      00126E 75*2F 00         [24] 3700 	mov	_Twinkle_PARM_3,#0x00
      001271 75*30 0A         [24] 3701 	mov	_Twinkle_PARM_4,#0x0a
      001274 75*31 00         [24] 3702 	mov	(_Twinkle_PARM_4 + 1),#0x00
      001277 75*32 64         [24] 3703 	mov	_Twinkle_PARM_5,#0x64
      00127A 75*33 00         [24] 3704 	mov	(_Twinkle_PARM_5 + 1),#0x00
      00127D 75*34 00         [24] 3705 	mov	_Twinkle_PARM_6,#0x00
      001280 75 82 FF         [24] 3706 	mov	dpl,#0xff
      001283 12r09r48         [24] 3707 	lcall	_Twinkle
                                   3708 ;	./N76_UCS1903.c:596: break;
      001286 02r13r79         [24] 3709 	ljmp	00132$
                                   3710 ;	./N76_UCS1903.c:599: case 5:
      001289                       3711 00123$:
                                   3712 ;	./N76_UCS1903.c:602: TwinkleRandom(NUM_LEDS/5*2, 100, false);
      001289 85*00 82         [24] 3713 	mov	dpl,_NUM_LEDS
      00128C 85*01 83         [24] 3714 	mov	dph,(_NUM_LEDS + 1)
      00128F 75*00 05         [24] 3715 	mov	__divuint_PARM_2,#0x05
      001292 75*01 00         [24] 3716 	mov	(__divuint_PARM_2 + 1),#0x00
      001295 12r00r00         [24] 3717 	lcall	__divuint
      001298 AE 82            [24] 3718 	mov	r6,dpl
      00129A AF 83            [24] 3719 	mov	r7,dph
      00129C EE               [12] 3720 	mov	a,r6
      00129D 2E               [12] 3721 	add	a,r6
      00129E FE               [12] 3722 	mov	r6,a
      00129F EF               [12] 3723 	mov	a,r7
      0012A0 33               [12] 3724 	rlc	a
      0012A1 FF               [12] 3725 	mov	r7,a
      0012A2 8E 82            [24] 3726 	mov	dpl,r6
      0012A4 8F 83            [24] 3727 	mov	dph,r7
      0012A6 75*35 64         [24] 3728 	mov	_TwinkleRandom_PARM_2,#0x64
      0012A9 75*36 00         [24] 3729 	mov	(_TwinkleRandom_PARM_2 + 1),#0x00
      0012AC 75*37 00         [24] 3730 	mov	_TwinkleRandom_PARM_3,#0x00
      0012AF 12r0Ar02         [24] 3731 	lcall	_TwinkleRandom
                                   3732 ;	./N76_UCS1903.c:603: break;
      0012B2 02r13r79         [24] 3733 	ljmp	00132$
                                   3734 ;	./N76_UCS1903.c:606: case 6:
      0012B5                       3735 00124$:
                                   3736 ;	./N76_UCS1903.c:609: Sparkle(0xFF, 0xFF, 0xFF, 0);
      0012B5 75*3B FF         [24] 3737 	mov	_Sparkle_PARM_2,#0xff
      0012B8 75*3C FF         [24] 3738 	mov	_Sparkle_PARM_3,#0xff
      0012BB E4               [12] 3739 	clr	a
      0012BC F5*3D            [12] 3740 	mov	_Sparkle_PARM_4,a
      0012BE F5*3E            [12] 3741 	mov	(_Sparkle_PARM_4 + 1),a
      0012C0 75 82 FF         [24] 3742 	mov	dpl,#0xff
      0012C3 12r0Br10         [24] 3743 	lcall	_Sparkle
                                   3744 ;	./N76_UCS1903.c:610: break;
      0012C6 02r13r79         [24] 3745 	ljmp	00132$
                                   3746 ;	./N76_UCS1903.c:613: case 7:
      0012C9                       3747 00125$:
                                   3748 ;	./N76_UCS1903.c:616: SnowSparkle(0x10, 0x10, 0x10, 20, random2(100, 1000));
      0012C9 75*07 E8         [24] 3749 	mov	_random2_PARM_2,#0xe8
      0012CC 75*08 03         [24] 3750 	mov	(_random2_PARM_2 + 1),#0x03
      0012CF 90 00 64         [24] 3751 	mov	dptr,#0x0064
      0012D2 12r00r26         [24] 3752 	lcall	_random2
      0012D5 85 82*43         [24] 3753 	mov	_SnowSparkle_PARM_5,dpl
      0012D8 85 83*44         [24] 3754 	mov	(_SnowSparkle_PARM_5 + 1),dph
      0012DB 75*3F 10         [24] 3755 	mov	_SnowSparkle_PARM_2,#0x10
      0012DE 75*40 10         [24] 3756 	mov	_SnowSparkle_PARM_3,#0x10
      0012E1 75*41 14         [24] 3757 	mov	_SnowSparkle_PARM_4,#0x14
      0012E4 75*42 00         [24] 3758 	mov	(_SnowSparkle_PARM_4 + 1),#0x00
      0012E7 75 82 10         [24] 3759 	mov	dpl,#0x10
      0012EA 12r0Br85         [24] 3760 	lcall	_SnowSparkle
                                   3761 ;	./N76_UCS1903.c:617: break;
      0012ED 02r13r79         [24] 3762 	ljmp	00132$
                                   3763 ;	./N76_UCS1903.c:620: case 8:
      0012F0                       3764 00126$:
                                   3765 ;	./N76_UCS1903.c:623: colorWipe(RANDOM_GRB, 50);
      0012F0 90 00 FF         [24] 3766 	mov	dptr,#0x00ff
      0012F3 12r00r00         [24] 3767 	lcall	_random
      0012F6 AE 82            [24] 3768 	mov	r6,dpl
      0012F8 90 00 FF         [24] 3769 	mov	dptr,#0x00ff
      0012FB C0 06            [24] 3770 	push	ar6
      0012FD 12r00r00         [24] 3771 	lcall	_random
      001300 AD 82            [24] 3772 	mov	r5,dpl
      001302 90 00 FF         [24] 3773 	mov	dptr,#0x00ff
      001305 C0 05            [24] 3774 	push	ar5
      001307 12r00r00         [24] 3775 	lcall	_random
      00130A AC 82            [24] 3776 	mov	r4,dpl
      00130C D0 05            [24] 3777 	pop	ar5
      00130E D0 06            [24] 3778 	pop	ar6
      001310 8C*46            [24] 3779 	mov	_colorWipe_PARM_3,r4
      001312 8D*45            [24] 3780 	mov	_colorWipe_PARM_2,r5
      001314 75*47 32         [24] 3781 	mov	_colorWipe_PARM_4,#0x32
      001317 75*48 00         [24] 3782 	mov	(_colorWipe_PARM_4 + 1),#0x00
      00131A 8E 82            [24] 3783 	mov	dpl,r6
      00131C 12r0Cr1A         [24] 3784 	lcall	_colorWipe
                                   3785 ;	./N76_UCS1903.c:624: if (_status==STT_NEW) break;
      00131F 74 12            [12] 3786 	mov	a,#0x12
      001321 B5*05 02         [24] 3787 	cjne	a,__status,00194$
      001324 80 53            [24] 3788 	sjmp	00132$
      001326                       3789 00194$:
                                   3790 ;	./N76_UCS1903.c:625: colorWipe(0x00,0x00,0x00, 50);
      001326 75*45 00         [24] 3791 	mov	_colorWipe_PARM_2,#0x00
      001329 75*46 00         [24] 3792 	mov	_colorWipe_PARM_3,#0x00
      00132C 75*47 32         [24] 3793 	mov	_colorWipe_PARM_4,#0x32
      00132F 75*48 00         [24] 3794 	mov	(_colorWipe_PARM_4 + 1),#0x00
      001332 75 82 00         [24] 3795 	mov	dpl,#0x00
      001335 12r0Cr1A         [24] 3796 	lcall	_colorWipe
                                   3797 ;	./N76_UCS1903.c:626: break;
                                   3798 ;	./N76_UCS1903.c:629: case 9:
      001338 80 3F            [24] 3799 	sjmp	00132$
      00133A                       3800 00129$:
                                   3801 ;	./N76_UCS1903.c:632: rainbowCycle(20);
      00133A 90 00 14         [24] 3802 	mov	dptr,#0x0014
      00133D 12r0Cr9C         [24] 3803 	lcall	_rainbowCycle
                                   3804 ;	./N76_UCS1903.c:633: break;
                                   3805 ;	./N76_UCS1903.c:636: case 10:
      001340 80 37            [24] 3806 	sjmp	00132$
      001342                       3807 00130$:
                                   3808 ;	./N76_UCS1903.c:639: theaterChase(RANDOM_GRB, 50);
      001342 90 00 FF         [24] 3809 	mov	dptr,#0x00ff
      001345 12r00r00         [24] 3810 	lcall	_random
      001348 AE 82            [24] 3811 	mov	r6,dpl
      00134A 90 00 FF         [24] 3812 	mov	dptr,#0x00ff
      00134D C0 06            [24] 3813 	push	ar6
      00134F 12r00r00         [24] 3814 	lcall	_random
      001352 AD 82            [24] 3815 	mov	r5,dpl
      001354 90 00 FF         [24] 3816 	mov	dptr,#0x00ff
      001357 C0 05            [24] 3817 	push	ar5
      001359 12r00r00         [24] 3818 	lcall	_random
      00135C AC 82            [24] 3819 	mov	r4,dpl
      00135E D0 05            [24] 3820 	pop	ar5
      001360 D0 06            [24] 3821 	pop	ar6
      001362 8C*50            [24] 3822 	mov	_theaterChase_PARM_3,r4
      001364 8D*4F            [24] 3823 	mov	_theaterChase_PARM_2,r5
      001366 75*51 32         [24] 3824 	mov	_theaterChase_PARM_4,#0x32
      001369 75*52 00         [24] 3825 	mov	(_theaterChase_PARM_4 + 1),#0x00
      00136C 8E 82            [24] 3826 	mov	dpl,r6
      00136E 12r0DrE3         [24] 3827 	lcall	_theaterChase
                                   3828 ;	./N76_UCS1903.c:640: break;
                                   3829 ;	./N76_UCS1903.c:643: case 11:
      001371 80 06            [24] 3830 	sjmp	00132$
      001373                       3831 00131$:
                                   3832 ;	./N76_UCS1903.c:646: theaterChaseRainbow(50);
      001373 90 00 32         [24] 3833 	mov	dptr,#0x0032
      001376 12r0Fr23         [24] 3834 	lcall	_theaterChaseRainbow
                                   3835 ;	./N76_UCS1903.c:649: }
      001379                       3836 00132$:
                                   3837 ;	./N76_UCS1903.c:650: if (_status == STT_NEW)
      001379 74 12            [12] 3838 	mov	a,#0x12
      00137B B5*05 02         [24] 3839 	cjne	a,__status,00195$
      00137E 80 03            [24] 3840 	sjmp	00196$
      001380                       3841 00195$:
      001380 02r11r78         [24] 3842 	ljmp	00136$
      001383                       3843 00196$:
                                   3844 ;	./N76_UCS1903.c:652: _status = STT_NOTSAVED;
      001383 75*05 56         [24] 3845 	mov	__status,#0x56
                                   3846 ;	./N76_UCS1903.c:653: cnt = 0;
      001386 75*06 00         [24] 3847 	mov	_cnt,#0x00
                                   3848 ;	./N76_UCS1903.c:656: }
      001389 02r11r78         [24] 3849 	ljmp	00136$
                                   3850 ;------------------------------------------------------------
                                   3851 ;Allocation info for local variables in function 'ADC_INT_FUCTION'
                                   3852 ;------------------------------------------------------------
                                   3853 ;	./N76_UCS1903.c:658: ISR(ADC_INT_FUCTION, INTERRUPT_ADC)
                                   3854 ;	-----------------------------------------
                                   3855 ;	 function ADC_INT_FUCTION
                                   3856 ;	-----------------------------------------
      00138C                       3857 _ADC_INT_FUCTION:
      00138C C0 E0            [24] 3858 	push	acc
      00138E C0 07            [24] 3859 	push	ar7
      001390 C0 06            [24] 3860 	push	ar6
      001392 C0 05            [24] 3861 	push	ar5
      001394 C0 04            [24] 3862 	push	ar4
      001396 C0 D0            [24] 3863 	push	psw
      001398 75 D0 00         [24] 3864 	mov	psw,#0x00
                                   3865 ;	./N76_UCS1903.c:660: _delay = (ADCRH << 4) | ADCRL;
      00139B AE C3            [24] 3866 	mov	r6,_adcrh
      00139D E4               [12] 3867 	clr	a
      00139E C4               [12] 3868 	swap	a
      00139F 54 F0            [12] 3869 	anl	a,#0xf0
      0013A1 CE               [12] 3870 	xch	a,r6
      0013A2 C4               [12] 3871 	swap	a
      0013A3 CE               [12] 3872 	xch	a,r6
      0013A4 6E               [12] 3873 	xrl	a,r6
      0013A5 CE               [12] 3874 	xch	a,r6
      0013A6 54 F0            [12] 3875 	anl	a,#0xf0
      0013A8 CE               [12] 3876 	xch	a,r6
      0013A9 6E               [12] 3877 	xrl	a,r6
      0013AA FF               [12] 3878 	mov	r7,a
      0013AB AC C2            [24] 3879 	mov	r4,_adcrl
      0013AD 7D 00            [12] 3880 	mov	r5,#0x00
      0013AF EC               [12] 3881 	mov	a,r4
      0013B0 42 06            [12] 3882 	orl	ar6,a
      0013B2 ED               [12] 3883 	mov	a,r5
      0013B3 42 07            [12] 3884 	orl	ar7,a
      0013B5 8E*02            [24] 3885 	mov	__delay,r6
      0013B7 8F*03            [24] 3886 	mov	(__delay + 1),r7
                                   3887 ;	./N76_UCS1903.c:661: clrb(ADCCON0, 7);
      0013B9 53 E8 7F         [24] 3888 	anl	_adccon0,#0x7f
                                   3889 ;	./N76_UCS1903.c:662: }
      0013BC D0 D0            [24] 3890 	pop	psw
      0013BE D0 04            [24] 3891 	pop	ar4
      0013C0 D0 05            [24] 3892 	pop	ar5
      0013C2 D0 06            [24] 3893 	pop	ar6
      0013C4 D0 07            [24] 3894 	pop	ar7
      0013C6 D0 E0            [24] 3895 	pop	acc
      0013C8 32               [24] 3896 	reti
                                   3897 ;	eliminated unneeded push/pop dpl
                                   3898 ;	eliminated unneeded push/pop dph
                                   3899 ;	eliminated unneeded push/pop b
                                   3900 ;------------------------------------------------------------
                                   3901 ;Allocation info for local variables in function 'PIN_INT_FUCTION'
                                   3902 ;------------------------------------------------------------
                                   3903 ;	./N76_UCS1903.c:664: ISR(PIN_INT_FUCTION, INTERRUPT_PIN)
                                   3904 ;	-----------------------------------------
                                   3905 ;	 function PIN_INT_FUCTION
                                   3906 ;	-----------------------------------------
      0013C9                       3907 _PIN_INT_FUCTION:
      0013C9 C0*00            [24] 3908 	push	bits
      0013CB C0 E0            [24] 3909 	push	acc
      0013CD C0 F0            [24] 3910 	push	b
      0013CF C0 82            [24] 3911 	push	dpl
      0013D1 C0 83            [24] 3912 	push	dph
      0013D3 C0 07            [24] 3913 	push	(0+7)
      0013D5 C0 06            [24] 3914 	push	(0+6)
      0013D7 C0 05            [24] 3915 	push	(0+5)
      0013D9 C0 04            [24] 3916 	push	(0+4)
      0013DB C0 03            [24] 3917 	push	(0+3)
      0013DD C0 02            [24] 3918 	push	(0+2)
      0013DF C0 01            [24] 3919 	push	(0+1)
      0013E1 C0 00            [24] 3920 	push	(0+0)
      0013E3 C0 D0            [24] 3921 	push	psw
      0013E5 75 D0 00         [24] 3922 	mov	psw,#0x00
                                   3923 ;	./N76_UCS1903.c:666: if (PIF == 0x10)
      0013E8 74 10            [12] 3924 	mov	a,#0x10
      0013EA B5 EC 0E         [24] 3925 	cjne	a,_pif,00104$
                                   3926 ;	./N76_UCS1903.c:668: if (++effect>=12)	effect=0;
      0013ED 05*04            [12] 3927 	inc	_effect
      0013EF 74 F4            [12] 3928 	mov	a,#0x100 - 0x0c
      0013F1 25*04            [12] 3929 	add	a,_effect
      0013F3 50 03            [24] 3930 	jnc	00102$
      0013F5 75*04 00         [24] 3931 	mov	_effect,#0x00
      0013F8                       3932 00102$:
                                   3933 ;	./N76_UCS1903.c:669: clearAll();
      0013F8 12r01r0F         [24] 3934 	lcall	_clearAll
      0013FB                       3935 00104$:
                                   3936 ;	./N76_UCS1903.c:671: PIF = 0x00; // clear interrupt flag
      0013FB 75 EC 00         [24] 3937 	mov	_pif,#0x00
                                   3938 ;	./N76_UCS1903.c:672: _delay_us(500000);
      0013FE 90 A1 20         [24] 3939 	mov	dptr,#0xa120
      001401 75 F0 07         [24] 3940 	mov	b,#0x07
      001404 E4               [12] 3941 	clr	a
      001405 12r00r00         [24] 3942 	lcall	__delay_us
                                   3943 ;	./N76_UCS1903.c:673: }
      001408 D0 D0            [24] 3944 	pop	psw
      00140A D0 00            [24] 3945 	pop	(0+0)
      00140C D0 01            [24] 3946 	pop	(0+1)
      00140E D0 02            [24] 3947 	pop	(0+2)
      001410 D0 03            [24] 3948 	pop	(0+3)
      001412 D0 04            [24] 3949 	pop	(0+4)
      001414 D0 05            [24] 3950 	pop	(0+5)
      001416 D0 06            [24] 3951 	pop	(0+6)
      001418 D0 07            [24] 3952 	pop	(0+7)
      00141A D0 83            [24] 3953 	pop	dph
      00141C D0 82            [24] 3954 	pop	dpl
      00141E D0 F0            [24] 3955 	pop	b
      001420 D0 E0            [24] 3956 	pop	acc
      001422 D0*00            [24] 3957 	pop	bits
      001424 32               [24] 3958 	reti
                                   3959 ;------------------------------------------------------------
                                   3960 ;Allocation info for local variables in function 'timer2'
                                   3961 ;------------------------------------------------------------
                                   3962 ;x                         Allocated to registers r6 r7 
                                   3963 ;------------------------------------------------------------
                                   3964 ;	./N76_UCS1903.c:674: ISR(timer2, INTERRUPT_TIMER2)
                                   3965 ;	-----------------------------------------
                                   3966 ;	 function timer2
                                   3967 ;	-----------------------------------------
      001425                       3968 _timer2:
      001425 C0*00            [24] 3969 	push	bits
      001427 C0 E0            [24] 3970 	push	acc
      001429 C0 F0            [24] 3971 	push	b
      00142B C0 82            [24] 3972 	push	dpl
      00142D C0 83            [24] 3973 	push	dph
      00142F C0 07            [24] 3974 	push	(0+7)
      001431 C0 06            [24] 3975 	push	(0+6)
      001433 C0 05            [24] 3976 	push	(0+5)
      001435 C0 04            [24] 3977 	push	(0+4)
      001437 C0 03            [24] 3978 	push	(0+3)
      001439 C0 02            [24] 3979 	push	(0+2)
      00143B C0 01            [24] 3980 	push	(0+1)
      00143D C0 00            [24] 3981 	push	(0+0)
      00143F C0 D0            [24] 3982 	push	psw
      001441 75 D0 00         [24] 3983 	mov	psw,#0x00
                                   3984 ;	./N76_UCS1903.c:676: uint16_t x=NUM_LEDS;
      001444 AE*00            [24] 3985 	mov	r6,_NUM_LEDS
      001446 AF*01            [24] 3986 	mov	r7,(_NUM_LEDS + 1)
                                   3987 ;	./N76_UCS1903.c:677: if (_status == STT_NOTSAVED)
      001448 74 56            [12] 3988 	mov	a,#0x56
      00144A B5*05 04         [24] 3989 	cjne	a,__status,00153$
      00144D 74 01            [12] 3990 	mov	a,#0x01
      00144F 80 01            [24] 3991 	sjmp	00154$
      001451                       3992 00153$:
      001451 E4               [12] 3993 	clr	a
      001452                       3994 00154$:
      001452 FD               [12] 3995 	mov	r5,a
      001453 60 02            [24] 3996 	jz	00102$
                                   3997 ;	./N76_UCS1903.c:678: cnt++;
      001455 05*06            [12] 3998 	inc	_cnt
      001457                       3999 00102$:
                                   4000 ;	./N76_UCS1903.c:679: if (cnt == 20 && _status == STT_NOTSAVED)
      001457 74 14            [12] 4001 	mov	a,#0x14
      001459 B5*06 1D         [24] 4002 	cjne	a,_cnt,00104$
      00145C ED               [12] 4003 	mov	a,r5
      00145D 60 1A            [24] 4004 	jz	00104$
                                   4005 ;	./N76_UCS1903.c:681: Erase_APROM(ADDR_EFF);
      00145F 90 20 00         [24] 4006 	mov	dptr,#0x2000
      001462 C0 07            [24] 4007 	push	ar7
      001464 C0 06            [24] 4008 	push	ar6
      001466 12r00r00         [24] 4009 	lcall	_Erase_APROM
                                   4010 ;	./N76_UCS1903.c:682: APROM_write_byte(ADDR_EFF, effect);
      001469 85*04*00         [24] 4011 	mov	_APROM_write_byte_PARM_2,_effect
      00146C 90 20 00         [24] 4012 	mov	dptr,#0x2000
      00146F 12r00r00         [24] 4013 	lcall	_APROM_write_byte
      001472 D0 06            [24] 4014 	pop	ar6
      001474 D0 07            [24] 4015 	pop	ar7
                                   4016 ;	./N76_UCS1903.c:683: _status = STT_OLD;
      001476 75*05 00         [24] 4017 	mov	__status,#0x00
                                   4018 ;	./N76_UCS1903.c:684: cnt == 0;
      001479                       4019 00104$:
                                   4020 ;	./N76_UCS1903.c:687: if (inbit(SW_PORT, SW50_PIN) == 0) NUM_LEDS = 50;
      001479 74 01            [12] 4021 	mov	a,#0x01
      00147B 55 80            [12] 4022 	anl	a,_p0
      00147D FD               [12] 4023 	mov	r5,a
      00147E 70 07            [24] 4024 	jnz	00115$
      001480 75*00 32         [24] 4025 	mov	_NUM_LEDS,#0x32
      001483 F5*01            [12] 4026 	mov	(_NUM_LEDS + 1),a
      001485 80 32            [24] 4027 	sjmp	00116$
      001487                       4028 00115$:
                                   4029 ;	./N76_UCS1903.c:688: else if (inbit(SW_PORT, SW100_PIN) == 0) NUM_LEDS = 100;
      001487 74 02            [12] 4030 	mov	a,#0x02
      001489 55 80            [12] 4031 	anl	a,_p0
      00148B C3               [12] 4032 	clr	c
      00148C 13               [12] 4033 	rrc	a
      00148D FD               [12] 4034 	mov	r5,a
      00148E 70 07            [24] 4035 	jnz	00112$
      001490 75*00 64         [24] 4036 	mov	_NUM_LEDS,#0x64
      001493 F5*01            [12] 4037 	mov	(_NUM_LEDS + 1),a
      001495 80 22            [24] 4038 	sjmp	00116$
      001497                       4039 00112$:
                                   4040 ;	./N76_UCS1903.c:689: else if (inbit(SW_PORT, SW150_PIN) == 0) NUM_LEDS = 150;
      001497 74 04            [12] 4041 	mov	a,#0x04
      001499 55 80            [12] 4042 	anl	a,_p0
      00149B 03               [12] 4043 	rr	a
      00149C 03               [12] 4044 	rr	a
      00149D 54 3F            [12] 4045 	anl	a,#0x3f
      00149F FD               [12] 4046 	mov	r5,a
      0014A0 70 07            [24] 4047 	jnz	00109$
      0014A2 75*00 96         [24] 4048 	mov	_NUM_LEDS,#0x96
      0014A5 F5*01            [12] 4049 	mov	(_NUM_LEDS + 1),a
      0014A7 80 10            [24] 4050 	sjmp	00116$
      0014A9                       4051 00109$:
                                   4052 ;	./N76_UCS1903.c:690: else if (inbit(SW_PORT, SW200_PIN) == 0) NUM_LEDS = 200;
      0014A9 74 08            [12] 4053 	mov	a,#0x08
      0014AB 55 80            [12] 4054 	anl	a,_p0
      0014AD C4               [12] 4055 	swap	a
      0014AE 23               [12] 4056 	rl	a
      0014AF 54 1F            [12] 4057 	anl	a,#0x1f
      0014B1 FD               [12] 4058 	mov	r5,a
      0014B2 70 05            [24] 4059 	jnz	00116$
      0014B4 75*00 C8         [24] 4060 	mov	_NUM_LEDS,#0xc8
      0014B7 F5*01            [12] 4061 	mov	(_NUM_LEDS + 1),a
      0014B9                       4062 00116$:
                                   4063 ;	./N76_UCS1903.c:691: if (NUM_LEDS != x) clearAll();
      0014B9 EE               [12] 4064 	mov	a,r6
      0014BA B5*00 06         [24] 4065 	cjne	a,_NUM_LEDS,00163$
      0014BD EF               [12] 4066 	mov	a,r7
      0014BE B5*01 02         [24] 4067 	cjne	a,(_NUM_LEDS + 1),00163$
      0014C1 80 03            [24] 4068 	sjmp	00118$
      0014C3                       4069 00163$:
      0014C3 12r01r0F         [24] 4070 	lcall	_clearAll
      0014C6                       4071 00118$:
                                   4072 ;	./N76_UCS1903.c:693: clrb(T2CON, 7);//TF2
      0014C6 53 C8 7F         [24] 4073 	anl	_t2con,#0x7f
                                   4074 ;	./N76_UCS1903.c:694: setb(ADCCON0, 6);
      0014C9 43 E8 40         [24] 4075 	orl	_adccon0,#0x40
                                   4076 ;	./N76_UCS1903.c:695: }
      0014CC D0 D0            [24] 4077 	pop	psw
      0014CE D0 00            [24] 4078 	pop	(0+0)
      0014D0 D0 01            [24] 4079 	pop	(0+1)
      0014D2 D0 02            [24] 4080 	pop	(0+2)
      0014D4 D0 03            [24] 4081 	pop	(0+3)
      0014D6 D0 04            [24] 4082 	pop	(0+4)
      0014D8 D0 05            [24] 4083 	pop	(0+5)
      0014DA D0 06            [24] 4084 	pop	(0+6)
      0014DC D0 07            [24] 4085 	pop	(0+7)
      0014DE D0 83            [24] 4086 	pop	dph
      0014E0 D0 82            [24] 4087 	pop	dpl
      0014E2 D0 F0            [24] 4088 	pop	b
      0014E4 D0 E0            [24] 4089 	pop	acc
      0014E6 D0*00            [24] 4090 	pop	bits
      0014E8 32               [24] 4091 	reti
                                   4092 	.area CSEG    (CODE)
                                   4093 	.area CONST   (CODE)
                                   4094 	.area XINIT   (CODE)
                                   4095 	.area CABS    (ABS,CODE)
